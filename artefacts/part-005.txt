
BASIC MCS 8080 GATES/ALLEN/DAVIDOFF
MACRO 47(113) 03:12 10-SEP-75 PAGE 4-12
F3
MAC
6-SEP-64 03:11
DISPATCH TABLES, RESERVED WORDS, ERROR TEXT. ALL CONSTANT
1531 001370 000000 000117
1532 001371 000000 000116
1533 001372' 000000 060124
1534 001373 000000 000111
1535 001374 000000 000116
1536 001375 000000
000125
1537 001376 000000 000105
1538
001376
000000
000305
1539
001377
000000
000000
1540
000021
22640
ERRCN==Q>
1541
22660
IFN
FUNCTS,<
1542
22680
DCE"UF"
1543
001400
000000
000125
22700
DCL"UNDEFINED USER FUNCTION"
1544
001401
000000
000116
1545 001402' 000000
000104
1546 001403 000000
000105
1547 001404 000000
000106
1548 001405 000000
000111
1549 001406 000000
000116
1550 001407 000000
000105
1551 001410 000000
000104
1552 001411 000000
000040
1553 001412' 000000
000125
1554 001413' 000000
000123
1555 001414 000000
000105
1556 001415 000000
000122
1557 001416 000000
000040
1558 001417 000000
000106
1559 001420 000000 000125
1560 001421 000000
000116
1561 001422' 000000
000103
1562 001423' 000000
000124
1563 001424 000000
000111
1564 001425' 000000
000117
1565
001426 000000
000116
1566
001426 000000
000316
1567
001427 000000
000000
1568
000022
22720
ERRUF==Q>
1569
1570
22760
PAGE
BASIC MCS 8080 GATES/ALLEN/DAVIDOFF
MACRO 47 (113) 03:12 10-SEP-75 PAGE 5
F3
MAC
6-SEP-64 03:11
LOW SEGMENT -- RAM -- IE THIS STUFF IS NOT CONSTANT
1571
22780 SUBTTL LOW SEGMENT -- RAM -- IE THIS STUFF IS NOT CONSTANT
1572
22800
;
1573
22820
; THIS IS THE "VOLATILE" STORAGE AREA AND NONE OF IT
1574
22840
; CAN BE KEPT IN ROM. ANY CONSTANTS IN THIS AREA CANNOT
1575
22860
; BE KEPT IN A ROM, BUT MUST BE LOADED IN BY THE
1576
22880
; PROGRAM INSTRUCTIONS IN ROM.
1577
22900
;
1578
1579
001430 000000 000054
22940
BUFMIN: 44
1A COMMA (PRELOAD OR ROM)
1580
22960
BUSED BY INPUT STATEMENT SINCE THE
1581
22980
:DATA POINTER ALWAYS STARTS ON A
1582
23000
;COMMA OR TERMINATOR
1583
001431'
23020
BUF:
BLOCK
BUFLEN
;TYPE IN STORED HERE
1584
23040
;DIRECT STATEMENTS EXECUTE OUT OF
1585
23060
THERE. REMEMBER INPUT SMASHES BUF,
1586
23080
MUST BE AT A LOWER ADDRESS
1587
23100
;THAN DSCTMP OR ASSIGMENT OF STRING
1588
23120
VALUES IN DIRECT STATEMENTS WON'T COPY
1589
23140
INTO STRING SPACE -- WHICH IT MUST
1590
23160
IFN
LPTSW,
1591
23180
LPTPOS: BLOCK
;POSITION OF LPT PRINT HEAD
1592
23200
PRTFLG: BLOCK
;WHETHER OUTPUT GOES TO LPT
1593
23220
;NON-ZERO MEANS SEND OUTPUT TO LPT
1594
23240
IFN
CONTRW,
1595
001541
23260
CNTWFL: BLOCK
;SUPRESS OUTPUT FLAG
1596
001542
23280
DIMFLG: BLOCK
1
;IN GETTING A POINTER TO A VARIABLE
1597
23300
IIT IS IMPORTANT TO REMEMBER WHETHER IT
1598
23320
;IS BEING DONE FOR "DIM" OR NOT
1599
23340
1DIMFLG AND VALTYP MUST BE
1600
23360
;CONSECUTIVE LOCATIONS
1601
23380
IFN
STRING,
1602
001543
23400
VALTYP: BLOCK
1
;THE TYPE INDICATOR
1603
23420
;IN THE 8K 0=NUMERIC 1=STRING
1604
001544
23435
OPRTYP:
USED TO STORE OPERATOR NUMBER
1605
23436
;IN THE EXTENDED MOMENTARILY BEFORE
1606
23437
;OPERATOR APPLICATION
1607
001544
23440
DORES: BLOCK
1
;WHETHER CAN OR CANET CRUNCH RES'D WORDS
1608
23460
;TURNED ON IN THE 8K WHEN "DATA"
1609
23480
;BEING SCANNED BY CRUNCH SO UNQUOTED
1610
23500
;STRINGS WON'T BE CRUNCHED.
1611
001545'
23520
MEMSIZ: BLOCK
2
;HIGHEST LOCATION IN MEMORY
1612
001547
23540
TEMPPT: BLOCK
2
;POINTER AT FIRST FREE TEMP DESCRIPTOR
1613
23560
;INITIALIZED TO POINT TO TEMPST
1614
001551
23580 TEMPST: BLOCK STRSIZ*NUMTMP
;STORAGE FOR NUMTMP TEMP DESCRIPTORS
1615
001570
23600 DSCTMP: BLOCK STRSIZ
;STRING FUNCTIONS BUILD ANSWER DESCRIPTOR HERE
1616
001573
23620
FRETOP: BLOCK
2>
;TOP OF STRING FREE SPACE
1617
23640
IFN ENGTHISTRING,<
1618
001575
23660
TEMP3: BLOCK 2>
;USED TO HOLD VARB # OF HIGH LOC FOUND
1619
23680
;IN GARBAGE COLLECTION
1620
23700
AND USED MOMENTARILY BY FRMEVL
1621
23720
USED IN EXTENDED BY FOUT
1622
23740
;ARRAY VARIABLE HANDLING TEMPORARY
1623
23760
IFN
LENGTH,
BASIC MCS 8086 GATES/ALLEN/DAVIDOFF
MACRO 47(113) 03:12 10-SEP-75 PAGE 5-1
F3
MAC
6-SEP-64 03:11
LOW
SEGMENT -- RAM IE THIS STUFF IS NOT CONSTANT
1624 001577°
23780 DATLIN: BLOCK
2
;DATA LINE REMEMBER FOR ERRORS
1625
001601
23800
SUBFLG: BLOCK
1>
IFLAG WHETHER SUBSCRIPTED VARIABLE ALLOWED
1626
23820
""FOR" AND USER-DEFINED FUNCTION
1627
23840
;POINTER FETCHING TURN
1628
23860
;THIS ON BEFORE CALLING PIRGET
1629
23880
ISO ARRAYS WON'T BE DETECTED.
1630
23900
;STKINI AND PIRGET CLEAR IT.
1631
001602'
23920
FLGINP: BLOCK
1
IFLAGS WHETHER WE ARE DOING INPUT
1632
23940
FOR A READ
1633
001603
23960
TEMP:
BLOCK
2
;TEMPORARY FOR STATEMENT CODE
1634
23980
;NEWSTT SAVES [H,L] HERE FOR INPUT AND C
1635
24000
"LET" SAVES NUMBERIC VARIABLE
1636
24020
;POINTERS HERE FOR "FOR"
1637
24040
""NEXT" SAVES ITS TEXT POINTER HERE
1638
24060
;CLEARC SAVE [H,L) HERE
1639
001605
24080
TEMP2:
BLOCK
2
;FORMULA EVALUATOR TEMP
1640
24100
;MUST BE PRESERVED BY OPERATORS
1641
24120
USED IN EXTENDED BY FOUT
1642
24140
;ARRAY VARIABLE HANDLER TEMPORARY
1643
001607
24160
CURLIN: BLOCK
2
;CURRENT LINE
1644
24180
;SET TO 65535 WHEN DIRECT STATEMENTS EXECUTE
1645
24200
IFN
LENGTH,
<
1646
001611'
24220
OLDLIN: BLOCK
2
;OLD LINE NUMBER
1647
001613
24240
OLDTXT: BLOCK
2>
;OLD TEXT POINTER
1648
24260
;POINTS AT STATEMENT TO BE EXECUTED NEXT
1649
001615
24280
STKTOP: BLOCK
2
;TOP LOCATION TO USE FOR THE STACK
1650
24300
;INITIALLY SET UP BY INIT
1651
24320
;ACCORDING TO MEMORY SIZE
1652
24340
ITO ALLOW FOR 50 BYTES OF STRING SPACE,
1653
24360
;CHANGED BY A CLEAR COMMAND WITH
1654
24380
IAN ARGUMENT.
1655
001617
24400
TXTTAB: BLOCK
2
;POINTER TO BEGINNING OF TEXT
1656
24420
;DOESNET CHANGE AFTER BEING
1657
24440
ISETUP BY INIT.
1658
001621
24460
VARTAB: BLOCK
2
;POINTER TO START OF SIMPLE
1659
24480
;VARIABLE SPACE
1660
24500
JUPDATED WHENEVER THE SIZE OF THE
1661
24520
;PROGRAM CHANGES, SET TO [TXTTAB]
1662
24540
;BY SCRATCH ("NEW")
1663
001623'
24560
ARYTAB: BLOCK
2
1POINTER TO BEGINNING OF ARRAY
1664
24580
TABLE
1665
24600
;INCREMENTED BY 6 WHENEVER
1666
24620
IA NEW SIMPLE VARIABLE IS FOUND, AND
1667
24640
1SET TO [VARTAB] BY CLEARC.
1668
001625'
24660
STREND: BLOCK
2
IEND OF STORAGE IN USE
1669
24680
;INCREASED WHENEVER A NEW ARRAY
1670
24700
;OR SIMPLE VARIABLE IS ENCOUNTERED
1671
24720
ISET TO (VARTAB) BY CLEARC.
1672
001627
24740
DATPTR: BLOCK
2
;POINTER TO DATA. INITIALIZED TO POINT
1673
24760
BAT THE ZERO IN FRONT OF (TXTTAB)
1674
24780
IFE LENGTH-2,
1675
001631
24800
TRCFLG: BLOCK
1>
10 MEANS NO TRACE IN PROGRESS
1676
BASIC MCS 8080 GATES/ALLEN/DAVIDUFF
MACRO 47 (113) 03:12 10-SEP-75 PAGE 5-2
F3
MAC
6-SEP-64 03:11
LOW SEGMENT -- RAM -- IE THIS STUFF IS NOT CONSTANT
1677
24840
;THE FLOATING ACCUMULATOR
1678
24860
IFE
LENGTH-2,
1679
001632'
24880
BLOCK
1
; (TEMPORARY LEAST SIGNIFICANT BYTE)
1680
001633'
24900 DFACLO: BLOCK
4>
, (FOUR LOWEST ORDERS FOR DOUBLE PRECISION]
1681 001637
24920
FACLO:
BLOCK
3
; (LOW ORDER OF MANTISSA)
1682
24940
DEMIDDLE ORDER OF MANTISSA]
1683
24960
[HIGH ORDER OF MANTISSA)
1684
001642'
24980
FAC:
BLOCK
2
; (EXPONENT)
1685
25000
, (TEMPORARY COMPLEMENT OF SIGN IN MSB)
1686
25020
IFE
LENGTH-2
<
1687
001644
25030
BLOCK
1
, [TEMPORARY LEAST SIGNIFICANT BYTE]
1688
001645
25040
ARGLO:
BLOCK
7
1 (LOCATION OF SECOND ARGUMENT FOR DOUBLE
1689
001654
25060
ARG:
BLOCK
1>
, PRECISION)
1690
001655'
25080
FBUFFR:
BLOCK
13
;BUFFER FOR FOUT
1691
001672'
25100
IFE
LENGTH-2,4BLOCK 35-13>
1692
25120
PAGE
BASIC MCS 8080 GATES/ALLEN/DAVIDOFF
MACRO 47(113) 03:12 10-SEP-75 PAGE 6
F3
MAC
6-SEP-64 03:11
TEXT CONSTANTS FOR PRINT OUT
1693
25140 SUBTTL TEXT CONSTANTS FOR PRINT OUT
1694
25160
;
1695
25180
; NEEDED FOR MESSAGES IN ALL VERSIONS
1696
25200
; MUST BE STORED ABOVE DSCTMP OR ELSE STRLIT
1697
25220
; WILL COPY THEM BEFORE STRPRT PRINTS THEM. THIS IS BAD, SINCE IF THE
1698
25240
; USER IS OUT OF STRING SPACE BASIC WILL LOOP GETTING "OUT OF STRING SPACE"
1699
25260
; ERRORS.
1700
25280
;
1701
25300
IFN
LENGTH-2,
1702
25320
ERR:
DC" ERROR"
1703
25340
0>
1704 001720 000000 000040
25360
INTXT:
DC" IN "
1705
001721 000000
000111
1706 001722' 000000
000116
1707 001723' 000000
000040
1708 001723' 000000
000240
1709 001724 000000
000000
25380
0
1710 001725 000000
000015
25400
REDDY:
ACRLF
1711 001726' 000000
000012
1712 001727 000000
000117
25420
DC"OK"
1713 001730 000000
000113
1714 001730° 000000
000313
1715 001731 000000
000015
25440
ACRLF
1716 001732' 000000
000012
1717 001733 000000
000600
25460
0
1718
25480
IFN
LENGTH,
1719
001734 000000
000015
25500
BRKTXT: ACRLF
1720 001735 000000
000012
1721 001736 000000
000102
25520
DC"BREAK"
o
1722 001737 000000
000122
1723 001740 000000
000105
1724
001741 000000
000101
1725
001742' 000000
000113
1726 001742' 000000
000313
1727
001743 000000
000000
25540
0>
1728
1729
25580
PAGE
BASIC MCS 8080 GATES/ALLEN/DAVIDOFF
MACRO 47(113) 03:12 10-SEP-75 PAGE 7
F3
MAC
6-SEP-64 03:11
GENERAL STORAGE MANAGEMENT ROUTINES
1730
25600
SUBTTL GENERAL STORAGE MANAGEMENT ROUTINES
1731
25620
;
1732
25640
:
FIND A FOR ENTRY ON THE STACK WITH THE VARIABLE POINTER
1733
25660
PASSED IN (D,E).
1734
25680
1735 001744 001000 000041
25700
FNDFOR: LXI
H,4+SCODE
;IGNORING EVERYONES "NEWSTT"
1736 001745 000000 000004
1737 001746 000000 000726
1738
25720
;AND THE RETURN ADDRESS OF THIS
1739 001747 001000 000071
25740
DAD
SP
;SUBROUTINE, SET [H,L]=SP
1740 001750 001000 060176
25760
LOOPER: MOV
A,M
;SEE WHAT TYPE OF THING IS ON THE STACK
1741 001751 001000 000043
25780
INX
H
1742 001752 001000 000376
25800
CPI
FORTK
;IS THIS STACK ENTRY A FOR?
1743 001753 000000 000201
1744 001754 001000 060300
25820
RNZ
;NO so OK
1745
25840
IFE
LENGTH,
1746
25860
PUSHM
;GET VARIABLE NAME
1747
25880
XTHL>
1748
25900
IFN
LENGTH,
1749
001755'
001000
000116
25920
MOV
C,M
1750 001756 001000 000043
25940
INX
H
:DO EQUIVALENT OF PUSHM / XTHL
1751 001757' 001000
000106
25960
MOV
B,M
1752 001760 001000
000043
25980
INX
H
1753 001761' 001000
000345
26000
PUSH
H
;PUT H ON
1754 001762' 001000
000151
26020
MOV
L,C
;PUSH B / XTHL IS SLOWER
1755 001763 001000
000140
26040
MOV
H,B
1756 001764 001000
000172
26060
MOV
A,D
;FOR THE "NEXT" STATMENT WITHOUT AN ARGUMENT
1757 001765' 001000
000263
26080
ORA
E
IWE MATCH ON ANYTHING
1758 001766 001000
000353
26100
XCHG
IMAKE SURE WE RETURN (D,E)
1759 001767 001000
000312
26120
JZ
POPGOF
;POINTING TO THE VARIABLE
1760 001770 000000
001774*
1761 001771 000000
001745
1762 001772' 001000
000353
26140
XCHG>
1763 001773° 001000
000347
26160
COMPAR
1764 001774 001000
000001
26180
POPGOF: LXI
8,SCODE+13
ITO WIPE OUT A FOR ENTRY
1765 001775' 000000
000015*
1766 001776 000000
001770
1767 001777° 001000
000341
26200
POP
H
1768 002000 001000
000310
26220
RZ
;IF FOR MATCHES GOOD
1769 002001 001000
000011
26240
DAD
8
1770 002002' 001000
000303
26260
JMP
LOOPER
;TRY THE NEXT ONE
1771 002003 000000 001750
1772 002004* 000000 001775'
1773
26280
1774
26300
THIS IS THE BLOCK TRANSFER ROUTINE
1775
26320
IT MAKES SPACE BY SHOVING EVERYTHING FORWARD
1776
26340
-
1777
26360
(H,L) = DESTINATION OF HIGH ADDRESS
1778
26380
(D,E) = LOW ADDRESS TO BE TRANSFERRED
1779
26400
(8,0) = HIGH ADDRESS TO BE TRANSFERRED
1780
26420
1781
26440
A CHECK IS MADE TO MAKE SURE A REASONABLE AMOUNT
1782
26460
OF SPACE REMAINS BETWEEN THE TOP OF THE STACK AND THE HIGHEST LOCATION
-
BASIC MCS 8080 GATES/ALLEN/DAVIDOFF
MACRO 47 (113) 03:12 10-SEP-75 PAGE 7-1
F3
MAC
6-SEP-64 03:11
GENERAL STORAGE MANAGEMENT ROUTINES
1783
26480
;
TRANSFERRED INTO
1784
26500
;
1785
26520
; ON EXIT [B,C] =LOCATION LOW WAS MOVED INTO
1786
26540
;
1787
1788
002005 001000
000315
26580
BLTU:
CALL
REASON
;CHECK DESTINATION TO MAKE
1789
002006
000000
002045
1790 002007 000000 002003
1791
26600
;SURE THE STACK WON'T BE OVERRUN
1792 002010 001000 000305
26620
BLTUC:
PUSH
8
EXCHANGE (B,C) AND (H,L)
1793 002011 001000 000343
26640
XTHL
1794 002012' 001000
000301
26660
POP
B
1795 002013 001000
000347
26680
BLTLOP: COMPAR
ISEE IF WE ARE DONE
1796 002014° 001000
000176
26700
MOV
A,M
;GET THE WORD TO TRANSFER
1797 002015 001000
000002
26720
STAX
8
TRANSFER IT
1798 002016 001000
000310
26740
RZ
1799 002017 001000
000013
26760
DCX
8
1800
002020 001000
000053
26780
DCX
H
1BACKUP FOR NEXT GUY
1801 002021 001000
000303
26800
JMP
BLTLOP
1802
002022' 000000
002013
1803
002023' 000000
002006
1804
26820
1805
26840
THIS ROUTINE IS USED TO MAKE SURE A CERTAIN NUMBER
1806
26860
OF LOCATIONS REMAIN AVAILABLE FOR THE
1807
26880
STACK. THE CALL IS :
1808
26900
CALL
GETSTK
1809
26920
NUMBER OF 2 BYTE ENTRIES NECESSARY
1810
26940
1811
26960
THIS ROUTINE MUST BE CALLED BY ANY ROUTINE WHICH PUTS
1812
26980
AN ARBITRARY AMOUNT OF STUFF ON THE STACK
1813
27000
(I.E. ANY RECURSIVE ROUTINE LIKE FRMEVL)
1814
27020
IT IS ALSO CALLED BY ROUTINES SUCH AS GOSUB AND FOR
1815
27040
WHICH MAKE PERMANENT ENTRIES ON THE STACK
1816
27060
1817
27080
1818
27100
ROUTINES WHICH MERELY USE AND FREE UP THE GUARANTEED
1819
27120
;
NUMLEY STACK LOCATIONS NEED NOT CALL THIS
1820
27140
;
1821
002024 001000
000343
27160
GETSTK: XTHL
1822
002025' 001000
000116
27180
MOV
C,M
;GET ARGUMENT INTO (C)
1823
1824
002026
001000
060043
27220
INX
H
1825
002027 001000
000343
27240
XTHL
;PUT BACK RETURN ADDRESS
1826 002030 001000
000345
27260
PUSH
H
;SAVE [H,L]
1827
002031 001000
000052
27280
LHLD
STREND
1828 002032' 000000
001625'
1829 002033' 000000
002622'
1830
002034 001000
000006
27300
MVI
8,0
1831 002035' 000000
000000
1832 002036 001000
000011
27320
DAD
B
1833 002037 001000
000011
27340
DAD
8
ISEE IF WE CAN HAVE THIS MANY
1834
002040 001000
060315
27360
CALL
REASON
1835
002041 000000
002045
BASIC MCS 8080 GATES/ALLEN/DAVIDOFK
MACRO 47(113) 03:12 10-SEP-75 PAGE 7-2
F3
MAC
6-SEP-64 03:11
GENERAL STORAGE MANAGEMENT ROUTINES
1836
002042' 000000 002032
1837
002043 001000 080341
27380
POP
H
RESTORE [H,L:
1838
002044 001000 000311
27400
RET
1839
1840
27440
;
1841
27460
[H,L]= SOME ADDRESS
1842
27480
;
(H,L) IS EXAMINED TO MAKE SURE AT LEAST NUMLEV
1843
27500
LOCATIONS REMAIN BETWEEN IT AND THE TOP OF THE STACK
1844
27520
;
1845
1846 002045 001000 000325
27560
REASON: PUSH
D
1SAVE (D,E)
1847
002046
001000
000353
27580
XCHG
;PUT (H,L) IN (D,E)
1848
002047
001000
000041
27600
LXI
SCODE+65536-2*NUMLEV ;SETUP OFFSET OF GUARANTEED
1849
002050
000000
177726*
1850
002051
000000
002041
1851
27620
;LOCATIONS
1852
002052 001000
000071
27640
DAD
SP
IH,LI=STACK POINTER + OFFSET
1853
002053' 001000
000347
27660
COMPAR
ISEE IF THIS IS GT. ENTERING (H,L)
1854
002054 001000
000353
27680
XCHG
IRESTORE (H,L) FROM (D,E)
1855
002055' 001000
000321
27700
POP
D
;GET (D,E) BACK
1856
002056 001000
000320
27720
RNC
IWAS OK?
1857
002057 001000 000036
27740
OMERR:
MVI
E,ERROM
1"OUT OF MEMORY"
1858
002060 000000 000607
1859
27760
IFE
LENGTH,
1860
27780
XWD
*01000,1>
i"LXI B," OVER THE NEXT 2
1861
27800
IFN
LENGTH,
1862
002061 001000 060303
27820
JMP
ERROR>
1863
002062' 000000 002102'
1864
002063 000000 002056
1865
27840
PAGE