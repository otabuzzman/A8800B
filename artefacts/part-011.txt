
BASIC MCS 8080 GATES/ALLEN/DAVIDOFF
MACRO 47(113) 03:12 10-SEP-75 PAGE 17
F3
MAC
6-SEP-64 03:11
PRINT CODE
3740
54400 SUBTTL PRINT CODE
3741
3742
54440 IFN LPTSW, <
3743
54460 LPRINT: MVI
A,1
;SAY NON ZERO
3744
54480
STA
PRTFLG>
;SAVE AWAY
3745 004407 001000 000053
54500
NEWCHR: DCX
H
3746 004410 001000 060327
54520
MORPR: CHRGET
;GET ANOTHER CHARACTER
3747 004411 001000 000312
54540
PRINT: JZ
CRDO
IIF WE SEE A TERMINATOR
3748
004412' 000000 004523
3749
004413 000000 004405
3750
54560
;GO TYPE A CRLF
3751
004414 001000 000310
54580
PRINTC: RZ
THERE AFTER SEEING TAB(X) OR , OR ,
3752
54600
,IN WHICH CASE A TERMINATOR DOES NOT
3753
54620
;MEAN WE SHOULD TYPE A CRLF
3754
54640
1 BUT JUST RETURN
3755
54660
IFE
STRING,
3756
54680
CPI
34
iA TERMINATING QUOTE?
3757
54700
CZ
STROUI
3758
54720
JZ
NEWCHR>
IA QUOTATION -- JUST PRINT IT
3759
004415' 001000
000376
54740
CPI
TABTK
3760
004416 000000
000240
3761
004417 001000
000312
54760
JZ
TABER
;THE TAB FUNCTION?
3762
004420 000000
004577
3763
004421' 000000
004412'
3764
54780
IFN
LENGTH,
3765
004422' 001000
000376
54800
CPI
SPCTK
3766
004423' 000000
000242
3767 004424* 001000
000312
54820
JZ
TABER>
;THE SPC FUNCTION?
3768 004425' 000000
004577
3769 004426 000000
004420
3770
004427 001000
000345
54840
PUSH
H
;SAVE THE TEXT POINTER
3771
004430 001000
000376
54860
CPI
44
-
3772
004431 000000
000054
3773 004432' 001000
000312
54880
JZ
COMPRT
;IS IT A COMMA?
3774
004433' 000000
004553
3775 004434 000000
004425'
3776 004435 001000
000376
54900
CPI
59
;IS IT A ";"
3777 004436 000000
000073
3778 004437 001000
000312
54920
JZ
NOTABR
3779 004440* 000000
004637
3780 004441 000000
004433'
3781 004442' 001000
000301
54940
POP
8
;GET RID OF OLD TEXT POINTER
3782
004443 001000
000315
54960
CALL
FRMEVL
;BACK UP ONE CHARACTER AND READ THAT ONE
3783
004444 000000
005336
3784
004445 000000
004440
3785
54980
JAGAIN so THE CONDITION CODES ARE RIGHT
3786
55000
;EVALUATE THE FORMULA
3787
004446 001000 000053
55020
DCX
H
BACKUP FROM TERMINATOR
3788
004447 001000 000345
55040
PUSH
H
1SAVE TEXT POINTER
3789
55060
IFN
STRING,
<
3790
55062
IFE
LENGTH-2,9
3791 004450 001000 000315
55064
CALL
GETYPE
;SEE IF WE HAVE A STRING
3792
004451 000000 006307
BASIC MCS 8080 GATES/ALLEN/DAVIDOFF
MACRO 47(113) 03:12 10-SEP-75 PAGE 17-1
F3
MAC
6-SEP-64 03:11
PRINT CODE
3793 004452' 000000 004444*
3794 004453' 001000 000312
55066
JZ
STRDON>
I IF so, PRINT SPECIALY
3795
004454
000000
004507
3796
004455'
000000
004451
3797
55068
IFN
LENGTH-2,
3798
55080
LDA
VALTYP
3799
55100
ORA
A
3800
55120
JNZ
STROON>>
WAS IT A STRING FORMULA?
3801
004456
001000
000315
55140
CALL
FOUT
;MAKE A NUMBER INTO A STRING
3802
004457
000000
000000*
3803
004460
000000
004454
3804
55160
IFE
STRING, <CALL
STROUT> IIF STRINGS OFF JUST OUTPUT IT
3805
55180
IFN
STRING,
3806 004461 001000 000315
55200
CALL
STRLIT
;MAKE IT A STRING
3807 004462° 000000 067637
3808 004463 000000 004457
3809
004464 001000 000052
55220
LHLO
FACLO
IGET THE POINTER
3810
004465 000000 001637
3811
004466° 000000 004462
3812
55240
IFN
LPTSW,
3813
55260
LDA
PRTFLG
3814
55280
ORA
A
3815
55300
JZ
ISTTY
ILPT OR TTY?
3816
55320
LDA
LPTPOS
3817
55340
ADD
M
3818
55360
CPI
LPTLEN
;WILL THIS NUMBER OVERLAP?
3819
55380
JMP
LINCHK
3820
55400
ISTTY:>
3821
004467 001000
000072
55420
LDA
TTYPOS
;SEE WHERE WE ARE
3822
004470 000000
000047
3823
004471 000000
004465
3824
004472 001000
000206
55440
ADD
M
;ADD THIS LENGTH
3825
004473 001000
000376
55460
CPI
LINLEN
;SEE IF GREATER THAN THE LINE LENGTH
3826
004474* 000000
000110
3827
004474°
55480
LINPT3==:,
3828
004475 001000
000324
55500
LINCHK: CNC
CRDO
;IF so CRLF
3829
004476° 000000
064523
3830
004477 * 000000
004470'
3831 004500 001000
000315
55520
CALL
STRPRT>
SPRINT THE NUMBER
3832 004501 000000
007746
3833
004502 000000
004476
3834
004503 801000
000076
55540
MVI
A,
;ALWAYS END WITH A SPACE
3835
004504
000000
000040
3836
004505'
001000
000337
55560
OUTCHR
3837
55580
IFN
STRING,
3838
55590
IFE
LENGTH-21
3839 004506 001000 060267
55595
ORA
A
ITURN OFF THE ZERO FLAG
3840 004507 001000 000314
55597
STROON: CZ
STRPRT>
3841
004510
000000
007746
3842
004511
000000
004501
3843
55598
IFN
LENGTH-2,
<
3844
55599
XRA
A
3845
55600
STROON: CNZ
STRPRT>>
;JUST PRINT STRINGS
BASIC MCS 8080 GATES/ALLEN/DAVIDOFF
MACRO 47(113) 03:12 10-SEP-75 PAGE 17-2
F3
MAC
6-SEP-64 03:11
PRINT CODE
3846
004512'
001000
000341
55620
POP
H
3847
004513'
001000
000303
55640
JMP
MORPR
;PRINT SOME MORE
3848
004514' 000000
004410
3849
004515' 000000
004510
3850
004516 001000
000066
55660
FININL: MVI
M,0
;PUT A ZERO AT THE END OF BUF
3851
004517° 000000
000000
3852
004520 001000
000041
55680
LXI
H,BUFMIN
ISETUP POINTER
3853
004521' 000000
0014301
3854
004522' 000000
004514
3855
55700
CRDO:
IFN
LPTSW,
3856
55720
LDA
PRTFLG
3857
55740
ORA
A
3858
55760
JNZ
PRINTW>
3859
004523' 001000
000076
55780
MVI
A,13
3860
004524 000000
000015
3861
004525' 001000
000062
55800
STA
TTYPOS
;MAKE TTYPOS LESS THAN LINE LENGTH
3862
004526' 000000
000047
3863
004527' 000000
004521
3864
55820
ISO CRDO DOESN'T GET CALLED AGAIN
3865
004530 001000
000337
55840
OUTCHR
3866 004531 001000
000076
55860
MVI
A,10
3867
004532' 000000
000012
3868
004533' 001000
000337
55880
OUTCHR
3869
004534 001000
000072
55900
CRFIN:
LDA
NULCNT
IGET NUMBER OF NULLS
3870
004535' 000000
000046
3871 004536 000000
004526*
3872 004537 001000
000075
55920
PRTNUL: DCR
A
3873
004540 001000
000062
55940
STA
TTYPOS
DEVENTUALLY SETUP TTYPOS=0
3874
004541 000000
000047
3875
004542' 000000
004535'
3876
004543° 001000
000310
55960
RZ
;ALL NULLS DONE [A] #0
3877
55980
;SOME ROUTINES DEPEND ON CRDO
3878
56000
AND CRFINS RETURN (A) =0 AND Z TRUE
3879
004544 001000
000365
56020
PUSH
PSW
;SAVE THE COUNT
3880
004545' 001000
060257
56040
XRA
A
; (A) # A NULL
3881
004546 001000
000337
56060
OUTCHR
ISEND IT OUT
3882
004547° 001000
000361
56080
POP
PSW
IRESTORE THE COUNT
3883
004550 001000
000303
56100
JMP
PRINUL
;LOOP PRINTING NULLS
3884
004551 000000
004537
3885
004552' 000000
004541
3886
56120
IFE
STRING,
3887
56140
STROUI: INX
H
3888
56160
STROUT: MOV
A,M
3889
56180
ORA
A
;CHECK FOR END OF LINE
3890
56200
RZ
;LET IT END THAT WAY
3891
56220
INX
H
3892
56240
CPI
34
IA TERMINATING QUOTE?
3893
56260
RZ
IDONE IF so
3894
56280
OUTCHR
PRINT THE CHARACTER IN (A)
3895
56300
CPI
CR
IIF IT'S A CARRIAGE RETURN
3896
56320
CZ
CROO
ITYPE LINE-FEED AND SET (TTYPOS) =0
3897
56340
JMP
STROUT>
;PRINT MORE CHARACTERS
3898
BASIC MCS 8080 GATES/ALLEN/DAVIDOFF
MACRO 47(113) 03:12 10-SEP-75 PAGE 17-3
F3
MAC
6-SEP-64 03:11
PRINT CODE
3899
56380
COMPRT: IFN
LPTSW, <
3900
56400
LDA
PRTFLG
;OUTPUT TO THE LINE PRINTER?
3901
56420
ORA
A
INON-ZERO MEANS YES
3902
56440
JZ
ISCTTY
;NO, DO TELETYPE COMMA
3903
56460
LDA
LPTPOS
;GET LINE PRINTER POSITION
3904
56480
NLPPOS==<<<LPTLEN/CLMWID>-1>*CLMWID>;POSITION BEYOND WHICH THERE ARE
3905
56500
IND MORE COMMA FIELDS, so
3906
56520
CPI
NLPPOS
;COMMA JUST DOES A "CRDO"
3907
56540
JMP
CHKCOM
JUSE TELETYPE CHECK
3908
56560
ISCTTY:>
3909
004553' 001000
000072
56580
LDA
TTYPOS
;GET TELETYPE POSITION
3910
004554 000000
000047
3911
004555' 000000
004551
3912
000070
56600
NUTPOS=<<<LINLEN/CLMWID>-1>*CLMWID>;POSITION BEYOND WHICH THERE ARE
3913
56620
;NO MORE COMMA FIELDS
3914
004556 001000
000376
56640
CPI
NUTPOS
ISO ALL COMMA DOES IS A "CRDO"
3915
004557 000000
000070
3916
004557
56660
LINPT4==;
;FIXED UP BY "TERMINAL WIDTH" QUESTION
3917 004560° 001000
000324
56680
CHKCOM: CNC
CRDO
;TYPE CRLF
3918 004561 000000
004523*
3919 004562' 000000
004554*
3920 004563 001000
000322
56700
JNC
NOTABR
AND QUIT IF BEYOND THE LAST COMMA FIELD
3921 004564 000000
004637
3922 004565 000000
004561
3923 004566° 001000
000326
56720
MORCOM: SUI
CLMWID
;GET [A] MODULUS CLMWID
3924 004567 000000
000016
3925
004570 001000
000322
56740
JNC
MORCOM
3926
004571 000000
004566
3927
004572' 000000
004564*
3928
004573 001000
000057
56760
CMA
,WE WANT TO FILL
3929
56780
THE PRINT POSITION OUT
3930
56800
ITO AN EVEN CLMWID, SO
3931
56820
I WE PRINT CLMWID-[A] MOD CLMWID SPACES
3932
004574 001000
000303
56840
JMP
ASPA2
;GO PRINT [A]+1 SPACES
3933
004575 000000 004626
3934
004576 000000 004571
3935
3936
004577°
56880
TABER:
3937
004577 001000 000365
56900
IFN
LENGTH,<PUSH
PSW>
;REMEMBER IF [A] =SPCTK OR TABTK
3938
56920
IFE
LENGTH,
3939
56940
CALL
INTIDXX
;INTEGERIZE A FORMULA INTO (D,E)
3940
56960
IFN
LENGTH,<
3941
004600
001000
000315
56980
CALL
GTBYTC>
IGET VALUE INTO (E)
3942
004601
000000
011017
3943 004602' 000000 004575'
3944 004603 001000 000317
57000
SYNCHK
")"
3945
004604 000000
000051
3946 004605' 001000
000053
57020
DCX
H
3947
57040
IFN
LENGTH,
3948 004606 001000 000361
57060
POP
PSW
;GET BACK SPCTK OR TABTK
3949 004607 001000 060376
57080
CPI
SPCTK>
;WAS IT SPCTK?
3950 004610 000000 000242
3951
004611' 001000 000345
57100
PUSH
H
;SAVE THE TEXT POINTER
BASIC MCS 8080
GATES/ALLEN/DAVIDOFF
MACRO 47(113) 03:12 10-SEP-75 PAGE 17-4
F3
MAC
6-SEP-64 03:11
PRINT CODE
3952
57120
IFN
LENGTH,
3953
004612' 001000
000173
57140
MOV
A,E
IFOR "SPC" PUT THE FORMULA
3954
004613 001000 000312
57160
JZ
ASPAC>
IVALUE IN [A]
3955
004614 000000 004627
3956
004615' 000000 004601
3957
57180
IFN
LPTSW,
3958
57200
LDA
PRTFLG
ILINE PRINTER OR TTY?
3959
57220
ORA
A
NON-ZERO MEANS LPT
3960
57240
JZ
TTYIST
3961
57260
LDA
LPTPOS
;GET LINE PRINTER POSITION
3962
57280
JMP
DOSIZI>
3963
004616 001000
000072
57300
TTYIST: LDA
TTYPOS
;GET TELETYPE PRINT POSITION
3964
004617
000000
000047
3965
004620
000000
004614
3966 004621 001000
000057
57320
DOSIZT: CMA
;PRINT [E]-[A] SPACES
3967 004622' 001000
000203
57340
ADD
E
3968 004623' 001000
000322
57360
JNC
NOTABR
;IF NEGATIVE, DON'T PRINT ANY
3969
004624 000000
004637
3970
004625' 000000
004617
3971
57380
SPACES
3972
004626' 001000
000074
57400
ASPA2: INR
A
3973
004627 001000
000107
57420
ASPAC:
MOV
B,A
, (B) #NUMBER OF SPACES TO PRINT
3974
004630 001000
000076
57440
MVI
A,"
; (A) =SPACE
3975 004631 000000
000040
3976
004632' 001000
000337
57460
REPOUT: OUTCHR
;PRINT [A]
3977 004633° 001000
000005
57480
DCR
8
:DECREMENT THE COUNT
3978 004634 001000
000302
57500
JNZ
REPOUT
3979 004635' 000000
004632'
3980 004636 000000
004624
3981 004631 001000
000341
57520
NOTABR: POP
H
1PICK UP TEXT POINTER
3982
004640 001000
000327
57540
CHRGET
AND THE NEXT CHARACTER
3983
004641 001000
000303
57560
JMP
PRINTC
AND SINCE WE JUST PRINTED
3984
004642' 000000
004414
3985
004643 000000
004635
3986
57580
;SPACES, DON'T CALL CRDO
3987
57600
IIF IT'S THE END OF THE LINE
3988
57620
PAGE
BASIC MCS 8080 GATES/ALLEN/DAVIDOFF
MACRO 47 (113) 03:12 10-SEP-75 PAGE 18
F3
MAC
6-SEP-64 03:11
INPUT AND READ CODE
3989
57640 SUBTIL INPUT AND READ CODE
3990
57660 IFN LENGTH, <
3991
004644 000000
000077
57680
TRYAGN: DC"?REDO FROM START"
3992
004645 000000
000122
3993
004646 000000
000105
3994
004647 000000
000104
3995
004650 000000
000117
3996 004651 000000
000040
3997 004652' 000000
000106
3998 004653 000000
060122
3999 004654 000000
000117
4000 004655' 000600
000115
4001 004656 000000
000040
4002 004657 000000
000123
4003 004660 000000
000124
4004 004661 000000
000101
4005 004662' 000000
000122
4006 004663' 000000
000124
4007
004663 000000
000324
4008
004664 000000
000015
57700
ACRLF
4009
004665' 000000
000012
4010
004666 000000
000000
57720
0
4011
57740
4012
57760
;
HERE WHEN THE DATA THAT WAS TYPED IN OR IN "DATA" STATEMENTS
4013
57780
;
IS IMPROPERLY FORMATTED. FOR "INPUT" WE START AGAIN.
4014
57800
;
FOR "DATA" WE GIVE A SYNTAX ERROR AT THE DATA LINE
4015
57820
;
4016
004667 001000
000072
57840
TRMNOK: LDA
FLGINP
IWAS IT READ OR INPUT?
4017
004670 000000
001602
4018
004671 000000
004642'
4019
004672' 001000
060267
57860
ORA
A
IZERO=INPUT
4020
004673 001000
000302
57880
JNZ
DATSNE
;GIVE ERROR AT DATA LINE
0
4021
004674 000000
002064
4022
004675' 000000
004670
4023
57900
POP
8
;GET RID OF THE POINTER INTO THE VARIABLE LIST
0
4024
004676' 001000
000301
4025
004677 001000
000041
57920
LXI
H, TRYAGN
4026
004700 000000
004644
4027
004701 000000
004674*
4028 004702' 001000
000315
57940
CALL
STROUT
;PRINT "?REDO FROM START"
4029
004703 000000
007743
4030
004704 000000
004700
4031
004705' 001000
000052
57960
LHLD
TEMP
;START ALL OVER BY GOING BACK
4032
004706 000000
001603
4033
004707 000000
004703
4034
004710* 001000
000311
57980
RET>
ITO NEWSTT POINTING AT THE START OF
4035
57982
10F THE "INPUT" STATEMENT
4036
004711
58000
INPUT:
4037
58020
IFN
LENGTH,
4038
004711 001000 000376
58040
CPI
34
IS IT A QUOTE?
4039
004712' 000000 000042
4040
58060
IFN
CONTRW.
4041
004713 001000 060676
58080
MVI
A,0
IBE TALKATIVE
BASIC MCS 8080 GATES/ALLEN/DAVIDOFE
MACRO (113) 03:12 10-SEP-75 PAGE 18-1
F3
MAC
6-SEP-64 03:11
INPUT AND READ CODE
4042 004714 000000 000000
4043 004715' 001000 000062
58100
STA
CNTWFL>
;FORCE OUTPUT
4044 004716 000000 001541
4045 004717° 000000 004706
4046
004720 001000
000302
58120
JNZ
NOTQTI
JIF NOT NO MESSAGE
4047
004721 000000
004735'
4048
004722' 000000
004716
4049
58140
IFN
STRING,
4050
004723' 001000
000315
58160
CALL
STRLTI
;MAKE THE MESSAGE A STRING
4051
004724 000000
007640
4052 004725' 000000
004721
4053
004726' 001000
000317
58180
SYNCHK
59
;MUST END WITH SEMI-COLON
4054
004727° 000000
000073
4055 004730° 001000
000345
58200
PUSH
H
;REMEMBER WHERE IT ENDED
4056
004731 001000
000315
58220
CALL
STRPRT
;PRINT IT OUT
4057
004732' 000000
007746
4058
004733' 000000
004724°
4059
004734 001000 000341
58240
POP
H>
4060
58260
IFE
STRING,
4061
58280
CALL
STROUI
4062
58300
SYNCHK
59>>
ENDS WITH SEMI-COLON
4063
004735' 001000 000345
58320
NOTQTI:
PUSH
H
4064
58340
IFE
FUNCTS, <
4065
58360
LHLO
CURLIN
;IS IT DIRECT?
4066
58380
MVI
ERRID
IIF so "ILLEGAL DIRECT" ERROR
4067
58400
INX
H
;DIRECT MEANS THAT
4068
58420
MOV
A,L
;CURLIN=65535
4069
58440
ORA
H
;ADDED ONE AND GOT 0?
4070
58460
JZ
ERROR>
IIF SO,GO COMPLAIN
4071
58480
IFN
FUNCTS,<
4072
004736 001000 060315
58500
CALL
ERROIR>
USE COMMON ROUTINE SINCE DEF
4073
004737 000000 007532'
4074
004740° 000000
004732'
4075
58520
;DIRECT IS ALSO ILLEGAL
4076
004741 001000
000315
58540
GETAGN: CALL
QINLIN
;TYPE '?' AND INPUT A LINE OF TEXT
4077
004742' 000000
002522'
4078 004743 000000
004737
4079 004744° 001000
060043
58560
IFN
LENGTH, <INX
H
;IF NO INPUT WE QUIT
4080
004745' 001000
060176
58580
MOV
A,M
4081 004746 001000
000267
58600
ORA
A
4082 004747° 001000
000053
58620
DCX
H
4083 004750 001000
000301
58640
POP
B
,TAKE OFF SINCE MAYBE LEAVING
4084 004751 001000
000312
58660
JZ
STPEND
;IF EMPTY LEAVE
4085
004752' 000000
003500
4086 004753' 000000
004742'
4087 004754 001000
000305
58680
PUSH
8>
;PUT BACK SINCE DIDN'T LEAVE
4088 004755' 001000
000303
58700
JMP
INPCON
4089 004756 000000
004765'
4090 004757 000000
004752
4091 004760° 001000
060345
58720
READ:
PUSH
H
;SAVE THE TEXT POINTER
4092
004761 001000
000052
58740
LHLD
DATPTR
;GET LAST DATA LOCATION
4093 004762' 000000 001627
4094
004763' 000000
004756
BASIC MCS 8080 GATES/ALLEN/DAVIDOFF
MACRO 47(113) 03:12 10-SEP-75 PAGE 18-2
F3
MAC
6-SEP-64 03:11
INPUT AND READ CODE
4095 004764 001000 000366
58760
XWD
01000, 0066
;"ORI" TO SET [A] NON-ZERO
4096 004765' 001000 000257
58780
INPCON: XRA
A
ISET FLAG THAT THIS IS AN INPUT
4097 004766 001000 000062
58800
STA
FLGINP
;STORE THE FLAG
4098 004767 000000 001602
4099 004770' 000000 004762
4100
58820
4101
58840
IN THE PROCESSING OF DATA AND READ STATEMENTS:
4102
58860
ONE POINTER POINTS TO THE DATA (IE THE NUMBERS BEING FETCHED)
4103
58880
AND ANOTHER POINTS TO THE LIST OF VARIABLES
4104
58900
4105
58920
THE POINTER INTO THE DATA ALWAYS STARTS POINTING TO A
4106
58940
TERMINATOR -- : OR END-OF-LINE
4107
58960
4108 004771 001000 000343
58980
XTHL
; (H,L) =VARIABLE LIST POINTER
4109
58982
IDATA POINTER GOES ON THE STACK
4110 004772' 001000 000001
59000
XWD
*01000.
1"LXI 8, OVER THIS CHECK
4111 004773° 001000 000317
59020
LOPDT2: SYNCHK
44
;MAKE SURE THERE IS A ",
4112 004774* 000000 000054
4113 004775' 001000 000315
59040
CALL
PIRGET
BREAD THE VARIABLE LIST
4114
004776 000000 006505'
4115 004777° 000000 004767
4116
59060
AND GET THE POINTER TO A VARIABLE INTO (D,E)
4117
005000 001000 000343
59080
XTHL
1PUT THE VARIABLE LIST POINTER ONTO THE
4118
59100
1STACK AND TAKE THE
4119
59120
IDATA LIST POINTER OFF
4120
59140
;
4121
59160
;
NOTE AT THIS POINT WE HAVE A VARIABLE WHICH WANTS DATA
4122
59180
;
AND so WE MUST GET DATA OR COMPLAIN
4123
59200
;
4124
005001 001000 000325
59220
PUSH
D
;SAVE THE POINTER TO THE VARIABLE WE
4125
59240
IARE ABOUT TO SET UP WITH A VALUE
4126
005002' 001000 000176
59260
MOV
A,M
;SINCE THE DATA LIST POINTER ALWAYS POINTS
4127
59280
;AT A TERMINATOR LETS READ THE
4128
59300
;TERMINATOR INTO (A) AND SEE WHAT
4129
59320
;IT IS
4130
005003 001000 000376
59340
CPI
44
4131 005004 000000 000054
4132 005005 001000 000312
59360
JZ
DATBK
iA COMMA so A VALUE MUST FOLLOW
4133 005006 000000 005025
4134 005007 000000 004776°
4135
59380
IFE
LENGTH,
<
4136
59400
ORA
A
IIN THE 4K VERSION
4137
59420
JNZ
SNERR>
;DATA MUST BE ALONE ON A LINE
4138
005010 001000 000072
59440
LDA
FLGINP
;SEE WHAT TYPE OF STATEMENT THIS WAS
4139 005011 000000 001602
4140 005012 000000 005006
4141
005015 001000 000267
59460
ORA
A
4142
59480
IFE
LENGTH,
4143
59500
INX
H
;POINT AT POINTER TO NEXT LINE
4144
59520
JNZ
DATEND>
;IF IT IS A READ GO
4145
59540
;SEARCH FOR ANOTHER DATA STATEMENT
4146
005014 001000 000302
59560
IFN
LENGTH, <JNZ
DATLOP>
4147
005015 000000 005163