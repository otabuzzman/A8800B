
MATHPK FOR BASIC MCS 8080 GATES/ALLEN/DAVIDOFF MACRO 7(113) 06:09 27-AUG-75 PAGE 13-15
F4
MAC
23-AUG-64 06:08
FLOATING POINT OUTPUT ROUTINE
3494
59300
MVI
C,0
SET COMMA COUNT TO ZERO, THE COMMA SPEC IS
3495
59320
PUSH
D
1
IGNORED. SAVE TRAILING SIGN INFO
3496
59340
CALL
FOUTCV
;CONVERT THE NUMBER TO DECIMAL DIGITS
3497
59360
POP
D
;GET THE TRAILING SIGN INFO BACK
3498
59380
POP
B
;GET # OF SIG DIGITS AND "B" FIELD SPEC BACK
3499
59400
MOV
A,C
;PRINT TRAILING ZEROS IF THE FIELD LENGTH IS
3500
59420
SUB
E
, LONGER THAN ENUMBER OF DIGITS WE CAN PRINT
3501
3502
59440
CP
FOTZRC
THE DECIMAL POINT COULD COME OUT IN HERE
3503
59460
POP
PSW
;GET THE "C" FIELD SPEC BACK
3504
59480
CZ
FOFXIS
; IF C=0, THE LAST THING WAS A DECIMAL POINT,
3505
59500
i so IGNORE IT. ALL WE CARE ABOUT IS THE
3506
59520
, "DCX H" AND NOT THE "MOV
M,B" AT FOFXIS
3507
59540
POP
PSW
;GET THE EXPONENT BACK
3508
59560
ADD
E
;SCALE IT CORRECTLY
3509
59580
SUB
8
3510
59600
SUB
D
3511
59620
PUSH
8
/SAVE THE "8" FIELD SPEC
3512
59640
CALL
FOFLON
;PUT THE EXPONENT IN THE BUFFER
3513
59660
XCHG
IGET THE POINTER TO THE END IN (HL)
3514
59680
, IN CASE WE HAVE A TRAILING SIGN
3515
t
59700
POP
D
;GET THE "8" FIELD SPEC IN D, PUT ON POSSIBLE
3516
3517
59720
JMP
FOUTTS
,
TRAILING SIGN AND WE ARE DONE
3518
59740
3519
59760
;NORMALIZE THE NUMBER IN THE FAC so ALL THE DIGITS ARE IN THE INTEGER
3520
59780
1PART. RETURN THE BASE 10 EXPONENT IN A
3521
59800
10,E ARE LEFT UNALTERED
3522
59820
FOUTNV: PUSH
D
ISAVE (DE)
3523
59840
LDA
VALTYP
IGET WHAT KIND OF VALUE WE HAVE
3524
59860
CPI
4
3525
59880
JNZ
FOUTNO
IWE HAVE A DBL
3526
59900
NORMALIZE A SNG
3527
59920
XRA
IZERO THE EXPONENT
3528
59940
PUSH
PSW
;SAVE IT
3529
59960
CALL
FOUNSO
IIS THE FAC TOO BIG OR TOO SMALL?
3530
59980
FOUNS1: MOVRI
221,103,117,370 ;GET 99999.9499 TO SEE IF THE FAC IS BIG
3531
60000
CALL
FCOMP
, ENOUGH YET
3532
60020
JPO
FOUNS3
IT IS, WE ARE DONE
3533
60040
POP
PSW
IIT ISN'T, MULTIPLY BY TEN
3534
60060
CALL
FINMLT
3535
60080
PUSH
PSW
;SAVE THE EXPONENT AGAIN
3536
60100
JMP
FOUNS1
NOW SEE IF IT IS BIG ENOUGH
3537
60120
FOUNS2:
POP
PSW
,THE FAC IS TOO BIG, GET THE EXPONENT
3538
60140
CALL
FINDIV
IDIVIDE IT BY TEN
3539
60160
PUSH
PSW
ISAVE THE EXPONENT AGAIN
3540
60180
CALL
FOUNSC
ISEE IF THE FAC IS SMALL ENOUGH
3541
60200
FOUNS3:
POP
PSW
IWE ARE DONE, GET THE EXPONENT BACK
3542
60220
POP
D
IGET (DE) BACK
3543
60240
RET
TALL DONE
3544
60260
THERE TO SEE IF THE FAC IS SMALL ENOUGH YET
3545
60280
FOUNSC: MOVRI 224,164,043,367 IGET 999999.499 TO SEE IF THE FAC IS TOO BIG
3546
60300
CALL
FCOMP
MATHPK FOR BASIC MCS 8080 GATES/ALLEN/DAVIDOFF MACRO 47(113) 06:09 27-AUG-75 PAGE 13-16
F4
MAC
23-AUG-64 06:08
FLOATING POINT OUTPUT ROUTINE
3547
60320
POP
H
IGET THE RETURN ADRESS OFF THE STACK
3548
60340
JPO
FOUNS2
IIT IS TOO BIG, MAKE IT SMALLER
3549
60360
PCHL
,IT IS SMALL ENOUGH, RETURN
3550
60380
;HERE TO NORMALIZE A DBL NUMBER
3551
60400
>
3552
60420
PAGE
MATHPK FOR BASIC MCS 8080 GATES/ALLEN/DAVIDOFF MACRO 47(113) 06:09 27-AUG-75 PAGE 14
F4
MAC
23-AUG-64 06:08
EXPONENTIATION AND THE SQUARE ROOT FUNCTION
3553
60440
SUBTTL EXPONENTIATION AND THE SQUARE ROOT FUNCTION
3554
60460
IFE
EXTENC,<
3555
60480
;SQUARE ROOT FUNCTION
X=SQR(A)
3556
60500
;WE FIRST SCALE THE ARGUMENT TO BETWEEN 5 AND 2 BY LOOKING AT THE
3557
60520
;EXPONENT AND USING SQR(M*2*(2*N))=2"N*SQR(M) THEN NEWTON'S METHOD
3558
60540
HIS USED TO COMPUTE QRCM). THE EXPONENT IS SAVED TO SCALE THE
3559
60560
RESULT AT THE END.
3560
60580
NEWTON'S METHOD FOR SQUARE ROOT:
3561
60600
, x(0)=
3562
60620
, X(N+1)=(X(N)+A/X(N))/2
3563
60640
SQR:
FSIGN
;CHECK FOR ERROR CONDITION
3564
60660
JM
FCERR
ICAN'T TAKE SQR OF NEGATIVE NUMBER
3565
60680
RZ
,
3566
60700
LXI
H,FAC
ISCALE ARGUMENT TO BETWEEN .5 AND 2
3567
60720
MOV
A,M
;GET EXPONENT
3568
60740
RAR
IGET EXPONENT OF SCALE FACTOR
3569
60760
USE
3570
60780
PUSH
PSW
;SAVE IT
3571
60800
PUSH
H
ISAVE POINTER TO EXPONENT
3572
60820
MVI
A,100
ISET EXPONENT OF SCALED DOWN NUMBER
3573
60840
RAL
3574
60860
MOV
M,A
IREPLACE IT
3575
60880
LXI
H,FBUFFR
;SAVE A
3576
60900
CALL
MOVMF
3577
60920
MVI
A,4
ISET ITERATION COUNT
3578
60940
SQR11
PUSH
PSW
ISAVE COUNT
3579
60960
CALL
PUSHF
1SAVE X(N)
3580
60980
LXI
H,FBUFFR
;COMPUTE A/X(N)
3581
61000
CALL
MOVRM
;GET A IN THE REGISTERS
3582
61020
CALL
FDIV
3583
61040
POPR
3584
61060
CALL
FADD
;ADD IN X(N)
3585
61080
LXI
H,FHALF
;DIVIDE BY 2
3586
61100
CALL
FMULTS
3587
61120
POP
PSW
;GET COUNT
3588
61140
DCR
A
;ARE WE DONE?
3589
61160
JNZ
SQR1
INO, DO MORE ITERATIONS
3590
61180
POP
H
EYES, SET EXPONENT OF ANSWER
3591
61200
POP
PSW
;GET SCALE FACTOR
3592
61220
ADI
300
;CONVERT TO AN EXPONENT
3593
61240
ADD
M
BADD EXPONENT IN
3594
61260
MOV
M,A
REPLACE EXPONENT
3595
61280
RET>
FALL DONE
3596
3597
3598
61340
IFN
EXTENC,
3599
61360
;SUBROUTINE FOR FPWR, ATN
3600 002340 001000 000041
61380
PSHNEG: LXI
H, NEG
;GET THE ADDRESS OF NEG
3601 002341 000000 001175
3602 002342 000000 002307
3603
002343 001000 000343
61400
XTHL
;SWITCH RET ADDR AND ADDR OF NEG
3604
002344 001000 000351
61420
PCHL
RETURN, THE ADDRESS OF NEG IS ON THE STACK
3605
MATHPK FOR BASIC MCS 8080 GATES/ALLEN/DAVIDOFF MACRO 47(113) 06:09 27-AUG-75 PAGE 14-1
F4
MAC
23-AUG-64 06:08
EXPONENTIATION AND THE SQUARE ROOT FUNCTION
3606
3607
61480
;SQUARE ROOT FUNCTION
3608
61500
;WE USE SQR(X)=X",5
3609
002345
001000
000315
61520
SQR:
CALL
PUSHF
;SAVE ARG
3610 002346 000000
001205'
3611 002347 000000
002341
3612 002350 001000
000041
61540
LXI
H,FHALF
;GET 1/2
3613 002351 000000
002312'
3614 002352 000000
002346'
3615 002353 001000
000315
61560
CALL
MOVEM
,
3616 002354 000000
001222'
3617 002355' 000000
002351
3618 002356 001000
000301
61580
FPWRT: POPR
;GET ARG IN REGISTERS, ENTRY TO FPWR IF
3619
002357
001000
000321
3620
61600
, ARGUMENT IS ON STACK. FALL INTO FPWR
3621
3622
3623
61660
;EXPONENTIATION
---
X-Y
3624
61680
IN.B. 0-0=1
3625
61700
;FIRST WE CHECK IF Y=0, IF so, THE RESULT IS 1.
3626
61720
INEXT, WE CHECK IF X=0, IF so, THE RESULT IS 0.
3627
61740
;THEN WE CHECK IF X IS POSITIVE, IF NOT, WE CHECK THAT Y IS A
3628
61760
;NEGATIVE INTEGER, AND WHETHER IT IS EVEN OR 000. IF Y IS A NEGATIVE
3629
61780
;INTEGER, WE NEGATE X. IF NOT, LOG WILL GIVE AN FC ERROR WHEN WE CALL
3630
61800
IIT. IF X IS NEGATIVE AND Y IS ODD, WE PUSH THE ADDRESS OF NEG ON THE
3631
61820
;STACK so WE WILL RETURN TO IT AND GET A NEGATIVE RESULT. TO COMPUTE
3632
61840
1THE RESULT WE USE X*Y=EXP(Y*LOG(X))
3633
002360 001000
000357
61860
FPWR:
FSIGN
;SEE IF Y IS ZERO
3634 002361 001000
000312
61880
JZ
EXP
IIT IS, RESULT IS ONE
3635
002362 000000
002452'
3636 002363' 000000
002354
3637 002364 001000
000170
61900
MOV
A,B
ISEE IF X IS ZERO
3638 002365' 001000
000267
61920
ORA
A
3639 002366 001000
000312
61940
JZ
ZEROO
IIT IS, RESULT IS ZERO
3640 002367 000000
000174
3641 002370 000000
002362'
3642 002371 001000
000325
61960
PUSHR
;SAVE X ON STACK
3643 002372' 001000
000305
3644 002373째 001000
000171
61980
MOV
A,C
;CHECK THE SIGN OF X
3645 002374* 001000
000366
62000
ORI
177
ITURN THE ZERO FLAG OFF
3646 002375* 000000
000177
3647 002376 001000
000315
62020
CALL
MOVRF
;GET Y IN THE REGISTERS
3648 002377째 000000
001240
3649 002400* 000000
002367
3650 002401 001000
000362
62040
JP
FPWR1
:NO PROBLEMS IF X IS POSITIVE
3651 002402' 000000
002422'
3652 002403' 000000
002377'
3653 002404 001000
000325
62060
PUSHR
;SAVE Y
3654 002405' 001000
000305
3655 002406 001000
000315
62080
CALL
INT
;SEE IF Y IS AN INTEGER
3656 002407 000000
001445
3657 002410 000000
002402'
3658
002411
001000
060301
62100
POPR
;GET Y BACK
MATHPK FOR BASIC MCS 8080 GATES/ALLEN/DAVIDOFF MACRO 47 (113) 06:09 27-AUG-75 PAGE 14-2
F4
MAC
23-AUG-64 06:08
EXPONENTIATION AND THE SQUARE ROOT FUNCTION
3659 002412' 001000
000321
3660
002413
001000
000365
62120
PUSH
PSW
;SAVE LO OF INT FOR EVEN AND ODD INFORMATION
3661 002414 001000
000315
62140
CALL
FCOMP
;SEE IF WE HAVE AN INTEGER
3662 002415 000000
001317
3663 002416 000000
002407
3664 002417 001000
000341
62160
POP
H
IGET EVEN-ODD INFORMATION
3665 002420' 001000
000174
62180
MOV
A,H
;PUT EVEN-000 FLAG IN CARRY
3666 002421 001000
000037
62200
RAR
3667 002422' 001000
000341
62220
FPWR1:
POP
H
;GET X BACK IN FAC
3668 002423' 001000
000042
62240
SHLD
FAC-1
;STORE HO'S
3669 002424 777777
777777*
3670 002425' 000000
002415'
3671
002426 001000
000341
62260
POP
H
IGET LO'S OFF STACK
3672 002427 001000
000042
62280
SHLD
FACLO
1STORE THEM IN FAC
3673 002430 000000
001454*
3674 002431 000000
002424
3675
002432' 001000
000334
62300
CC
PSHNEG
INEGATE NUMBER AT END IF Y WAS ODD
3676 002433째 000000
002340
3677 002434 000000
002430
3678 002435' 001000
000314
62320
CZ
NEG
;NEGATE THE NEGATIVE NUMBER
3679 002436 000000
001175'
3680 002437 000000
002433
3681
002440 001000
000325
62340
FPWR2:
PUSHR
ISAVE Y AGAIN
3682 002441 001000
000305
3683 002442 001000
000315
62360
CALL
LOG
;COMPUTE EXP (CY*LOG(X))
3684 002443 000000
000421'
3685 002444 000000
002436
3686 002445 001000
000301
62380
POPR
IIF X WAS NEGATIVE AND Y NOT AN INTEGER THEN
3687
002446 001000
000321
3688
002447째 001000
000315
62400
CALL
FMULT>
, LOG WILL BLOW HIM OUT OF THE WATER
3689
002450 000000
000517
3690
002451 000000
002443
3691
62420
,
JMP
EXP
3692
62440
PAGE
MATHPK FOR BASIC MCS 8080 GATES/ALLEN/DAVIDOFF MACRO 47(113) 06:09 27-AUG-75 PAGE 15
F4
MAC
23-AUG-64 06:08
EXPONENTIAL FUNCTON
3693
62460
SUBTTL EXPONENTIAL FUNCTON
3694
62480
IFN
EXTENC, '
3695
62500
;WE FIRST SAVE THE ORIGINAL ARGUMENT AND MULTIPLY THE FAC BY LOG2(E)
3696
62520
;THE RESULT IS USED TO DETERMINE IF WE WILL GET OVERFLOW SINCE
3697
62540
;EXP(X)=2"(X*LOG2(E)) WHERE (E)=LOG(E) BASE 2. THEN WE SAVE THE
3698
62560
;INTEGER PART OF THIS TO SCALE THE ANSWER AT THE END, SINCE
3699
62580
AND 2*INT(Y) IS EASY TO COMPUTE. so WE
3700
62600
;NOW COMPUTE BY
3701
62620
;P(LN(2) (INT(X*LOG2(E))+1)-X) WHERE P IS AN APPROXIMATION
3702
62640
;POLYNOMIAL. THE RESULT IS THEN SCALED BY THE POWER OF 2 WE
3703
62660
;PREVIOUSLY SAVED.
3704
002452' 001000
000315
62680
EXP:
CALL
PUSHF
;SAVE ARGUMENT
3705
002453 000000
001205'
3706 002454* 000000
002450
3707 002455' 001000
000001
62700
MOVRI 201,070,252,073 ;GET LOG(E) BASE 2, CACULATE:
3708 002456 000000
000070
3709 002457 000000
060201
3710 002460 001000
000021
3711
002461 000000
000073
3712
002462째 000000
000252
3713 002463 001000
000315
62720
CALL
FMULT
,
INT(ARG/LN(2)) # (ARG*L062
3714
002464 000000
000517
3715 002465' 000000
002453'
3716 002466' 001000
000072
62740
LDA
FAC
;CARRY=0 IF FAC IS TOO BIG
3717 002467 000000
001446*
3718 002470 000000
002464
3719 002471 001000
000376
62760
CPI
210
, I.E. IF ABS(FAC) ,GE, 128
3720
002472' 000000
000210
3721
002473 001000
000322
62780
JNC
MLDVEX
IIT IS TOO BIG
3722
002474 000000
001073'
3723
002475' 000000
002467
3724
002476 001000
000315
62800
CALL
INT
IS ARGUMENT TOO BIG?
3725 002477째 000000
001445
3726
002500 000000
002474*
3727
002501 001000
000306
62820
ADI
200
;CHECK FOR OVERFLOW
3728 002502 000000
000200
3729
002503 001000
060306
62840
ADI
2
3730
002504 000000
000002
3731
002505 001000
000332
62860
JC
MLDVEX
;WE HAVE OVERFLOW!!
3732
002506 000000
001073
3733 002507 000000
002477*
3734 002510* 001000
000365
62880
PUSH
PSW
;SAVE SCALE FACTOR
3735 002511 001000
000041
62900
LXI
H,FONE
JADD ONE TO THE NUMBER
3736 002512' 000000
000400
3737 002513 000000
002506
3738 002514* 001000
000315
62920
CALL
FADDS
3739 002515' 000000
000003
3740 002516 000000
002512'
3741 002517 001000
000315
62940
CALL
MULLN2
;MULTIPLY BY LN(2)
3742 002520 000000
000506
3743 002521 000000
002515*
3744
002522' 001000
000361
62960
POP
PSW
;GET SCALE FACTOR OFF STACK
3745
002523 001000
000301
62980
POPR
IGET ARGUMENT
MATHPK FOR BASIC MCS 8080 GATES/ALLEN/DAVIDOFF MACRO 47(113) 06:09 27-AUG-75 PAGE 15-1
F4
MAC
23-AUG-64 06:08
EXPONENTIAL FUNCTON
3746
002524'
001000
060321
3747
002525'
001000
000365
63000
PUSH
PSW
PUT SCALE FACTOR BACK ON STACK
3748 002526 001000
000315
63020
CALL
FSUB
;SUBTRACT ORIGINAL ARG
3749 002527' 000000
000017
3750 002530* 000000
002520
3751 002531 001000
000315
63040
CALL
NEG
3752 002532' 000000
001175'
3753
002533 000000
002527
3754 002534 001000
000041
63060
LXI
H,EXPCON
EVALUATE THE APPROXIMATION POLYNOMIAL
3755 002535' 000000
002552
3756 002536 000000
002532
3757
002537 001000
000315
63080
CALL
POLY
3758
002540째 000000
002632'
3759
002541 000000
002535'
3760
002542' 001000
000021
63100
LXI
D,SCODE
;MULTIPLY BY 2 - (B.1) INSTEAD OF JUST
3761
002543 000000
001477*
3762 002544* 000000
002540
3763
002545 001000
000301
63120
POP
B
, ADDING IT TO THE EXPONENT so FMULT
3764
002546 001000
000112
63140
MOV
C,D
/ WILL CHECK FOR EXPONENT OVERFLOW
3765
002547 001000
000303
63160
JMP
FMULT
3766
002550 000000
000517
3767
002551 000000
002543
3768
3769
63200
:CONSTANTS FOR EXP
3770
002552' 000000
000010
63220
EXPCON:
10
;DEGREE
3771
002553 000000
000100
63240
100
; +.0001413161
3772
002554 000000
000056
63260
056
3773
002555 000000
000224
63280
224
3774 002556 000000
000164
63300
164
3775 002557 000000
000160
63320
160
, .001329882
3776 002560* 000000
000117
63340
117
3777
002561 000000
000056
63360
056
3778 002562 000000
000167
63380
167
3779
002563 000000
000156
63400
156
, +.00830136
3780 002564 000000
000002
63420
002
3781
002565 000000
000210
63440
210
3782 002566째 000000
000172
63460
172
3783 002567 000000
000346
63480
346
, .04165735
3784 002570* 000000
080240
63500
240
3785 002571 000000
000052
63520
052
3786 002572' 000000
000174
63540
174
3787 002573 000000
000120
63560
120
; ..1666653
3788 002574' 000000
000252
63580
252
3789 002575' 000000
000252
63600
252
3790 002576 000000
000176
63620
176
3791 002577* 000000
000377
63640
377
, .4999999
3792 002600 000000
000377
63660
377
3793 002601 000000
000177
63680
177
3794 002602' 000000
000177
63700
177
3795 002603 000000
000600
63720
000
, -1.0
3796
002604 000000
000000
63740
000
3797
002605' 000000
000200
63760
200
3798
002606
000000
000201
63780
201
MATHPK FOR BASIC MCS 8080 GATES/ALLEN/DAVIDOFF MACRO 47(113) 06:09 27-AUG-75 PAGE 15-2
F4
MAC
23-AUG-64 06:08
EXPONENTIAL FUNCTON
3799 002601 000000 000000
63800
000
, 1.0
3800 002610 000000 000000
63820
000
3801 002611 000000 000000
63840
000
3802 002612' 000000 000201
63860
201>
3803
63880
PAGE