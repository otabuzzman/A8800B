
BASIC MCS 8080 GATES/ALLEN/DAVIDOFR
MACRO 47(113) 03:12 10-SEP-75 PAGE 26-8
F3
MAC
6-SEP-64 03:11
STRING FUNCTIONS
6876 010262 001000 000106
34500
MOV
B,M
; (B) ] HHGG BYTE OF DATA POINTER
6877 010263 001000 000053
34520
DCX
H
6878
010264 001000 000116
34540
MOV
C,M
; #POINTER AT STRING DATA
6879
010265' 001000 000345
34550
PUSH
H
;SAVE THIS LOCATION so THE POINTER
6880
34552
;CAN BE UPDATED AFTER THE STRING IS
6881
34554
;MOVED
6882
010266 001000 000053
34560
DCX
H
6883
34580
IFN
LENGTH-2,
6884
34600
DCX
H>
6885
010267 001000
060156
34620
MOV
L.M
, [L] #STRING LENGTH
6886
010270* 001000
000046
34640
MVI
H,0
, [H,L] GET CHARACTER COUNT
6887
010271 000000
000000
6888
010272' 001000
000011
34660
DAD
B
, [H,L]=POINTER BEYOND STRING
6889
010273' 001000
000120
34680
MOV
0,8
6890
010274 001000
000131
34700
MOV
E,C
; (D.E)=ORIGINAL POINTER
6891
010275' 001000
000053
34720
DCX
H
;DON'T MOVE ONE BEYOND STRING
6892 010276 001000
000104
34740
MOV
B,H
;GET TOP OF STRING IN [B,0
6893 010277' 001000
000115
34760
MOV
C,L
6894 010300 001000
000052
34780
LHLD
FRETOP
;GET TOP OF FREE SPACE
6895
010301 000000
001573
6896 010302 000000
010227
6897 010303 001000
000315
34800
CALL
BLTUC
;MOVE STRING
6898 010304 000000
002010
6899
010305 000000
010301
6900 010306 001000
000341
34820
POP
H
;GET BACK POINTER TO DESC,
6901
010307 001000
000161
34840
MOV
M,C
;SAVE FIXED ADDR
6902
010310 001000
000043
34860
INX
H
;MOVE POINTER
6903
010311' 001000
000160
34880
MOV
M,B
;HIGH PART
6904 010312' 001000
000151
34900
MOV
L.C
6905 010313 001000
000140
34920
MOV
H,B
; (H, J=NEW POINTER
6906
010314 001000
000053
34940
DCX
H
;FIX UP FRETOP
6907
010315* 001000
000303
34960
JMP
FNOVAR
AND TRY TO FIND HIGH AGAIN
6908
010316 000000 010045
6909
010317' 000000 010304
6910
6911
35000
;
6912
35020
;
THE FOLLOWING ROUTINE CONCATENATES TWO STRINGS
6913
35040
THE FACLO CONTAINS THE FIRST ONE AT THIS POINT,
6914
35060
(H,L) POINTS BEYOND THE SIGN AFTER IT
6915
35080
6916
010320 001000 000305
35100
CAT:
PUSH
8
;PUT OLD PRECEDENCE BACK ON
6917
010321' 001000
000345
35120
PUSH
H
;SAVE TEXT POINTER
6918
010322' 001000
000052
35140
LHLD
FACLO
IGET POINTER TO STRING DESC.
6919
010323' 000000
001637
6920 010324' 000000
010316
6921
010325 001000
000343
35160
XTHL
;SAVE ON STACK & GET TEXT POINTER BACK
6922 010326' 001000
060315
35180
CALL
EVAL
EVALUATE REST OF FORMULA
6923 010327 000000
006061
6924
010330 000000
010323
6925
010331 001000
000343
35200
XTHL
;SAVE TEXT POINTER, GET BACK DESC.
6926
010332' 001000
000315
35220
CALL
CHKSTR
6927
010333' 000000
006230*
6928
010334*
000000
010327
BASIC MCS 8080 GATES/ALLEN/DAVIDOFF
MACRO 47(113) 03:12 10-SEP-75 PAGE 26-9
F3
MAC
6-SEP-64 03:11
STRING FUNCTIONS
6929 010335' 001000 000176
35240
MOV
A,
6930 010336 001000 000345
35260
PUSH
H
;SAVE DESC. POINTER.
6931
010337
001000
000052
35280
LHLD
FACLO
IGET POINTER TO 2ND DESC.
6932
010340
000000
001637
6933
010341
000000
010333'
6934 010342' 001000
000345
35300
PUSH
H
;SAVE IT
6935 010343 001000
000206
35320
ADD
M
;ADD TWO LENGTHS TOGETHER
6936 010344 001000
000036
35340
MVI
E,ERRLS
;SEE IF RESULT ,LT, 256
6937 010345 000000
000017
6938 010346 001000
000332
35360
JC
ERROR
;ERROR "LONG STRING"
6939 010347 000000
002102'
6940
010350 000000
010340
6941
010351 001000
000315
35380
CALL
STRINI
;GET INITIAL STRING
6942
010352 000000
007624
6943 010353 000000
010347
6944 010354 001000
000321
35400
POP
D
;GET 2ND DESC,
6945 010355' 001000
000315
35420
CALL
FRETMP
6946 010356 000000
010440
6947 010357 000000
010352
6948 010360 001000
000343
35440
XTHL
;SAVE POINTER TO IT
6949 010361 001000
000315
35460
CALL
FRETM2
;FREE UP 1ST TEMP
6950 010362' 000000
010437
6951 010363 000000
010356
6952 010364 001000
000345
35480
PUSH
H
;SAVE DESC. POINTER (FIRST)
6953 010365' 001000
000052
35500
LHLD
DSCTMP+2
;GET POINTER TO FIRST
6954 010366 000000
001572
6955 010367 000000
010362
6956 010370 001000
000353
35520
XCHG
;IN (D,E)
6957 010371 001000
000315
35540
CALL
MOVINS
;MOVE IN THE FIRST STRING
6958 010372' 000000
010407
6959 010375 000000
010366
6960 010374 001000
000315
35560
CALL
MOVINS
AND THE SECOND
6961 010375' 000000
010407
6962 010376 000000
010372'
6963 010377Â° 001000
060641
35580
LXI
,TSTOP
;CAT REENTERS FORMULA EVALUATION AT TSTOP
6964 010400 000000
005357
6965 010401 000000
010375
6966 010402 001000
000343
35600
XTHL
6967 010403 001000
000345
35620
PUSH
H
;TEXT POINTER OFF FIRST
6968 010404 001000
000303
35640
JMP
PUTNEW
OTHEN RETURN ADDRESS OF TSTOP
6969 010405 000000
007705'
6970
010406 000000
010400
6971
6972
6973 010407 001000 000341
35700
MOVINS: POP
H
IGET RETURN ADDR
6974 010410 001000 000343
35720
XTHL
;PUT BACK, BUT GET DESC.
6975
35740
IFE
LENGTH-21
6976 010411 001000 000176
35760
MOV
A,M
; [A] #STRING LENGTH
6977 010412' 001000 000043
35780
INX
H
6978 010413 001000 060116
35800
MOV
C,M
; (8,C)=POINTER AT STRING DATA
6979 010414 001000 000043
35820
INX
H
6980 010415' 001000 000106
35840
MOV
B,M
6981 010416 001000 000157
35860
MOV
L,A>
; (L) =STRING LENGTH
BASIC MCS 8080 GATES/ALLEN/DAVIDOFF
MACRO 47(113) 03:12 10-SEP-75 PAGE 26-10
F3
MAC
6-SEP-64 03:11
STRING FUNCTIONS
6982
35880
IFN
LENGTH-2,
6983
35900
PUSHM
;GET LENGTH ON STACK
6984
35920
PUSHM
AND POINTER
6985
35940
POP
B
;TEXT POINTER HERE
6986
35960
POP
H>
;CHARACTER COUNT HERE
6987
010417
001000
000054
35980
MOVSTR:
INR
L
6988
010420
001000
000055
36000
MOVLP:
DCR
L
1SET CC'S
6989 010421' 001000 000310
36020
RZ
10, NO BYTE TO MOVE
6990
010422'
001000
060012
36040
LDAX
B
;GET CHAR
6991 010423 001000
000022
36060
STAX
D
ISAVE IT
6992
010424 001000
000003
36080
INX
B
;MOVE POINTERS
6993
010425 001000
000023
36100
INX
D
6994
010426 001000
000303
36120
JMP
MOVLP
;KEEP DOING IT
6995
010427 000000 010420
6996
010430 000000 010405
6997
36140
6998
36160
FRETMP IS PASSED A POINTER TO A STRING DESCRIPTOR IN (D,E)
6999
36180
THIS VALUE IS RETURNED IN (H,L), ALL THE OTHER REGISTERS ARE MODIFIED.
7000
36200
A CHECK TO IS MADE TO SEE IF THE STRING DESCRIPTOR (D,E) POINTS
7001
36220
TO IS THE LAST TEMPORARY DESCRIPTOR ALLOCATED BY PUTNEW.
7002
36240
IF so, THE TEMPORARY IS FREED UP BY THE UPDATING OF TEMPPT,
7003
36260
IF A TEMPORARY IS FREED UP, A FURTHER CHECK IS MADE TO SEE IF THE
7004
36280
STRING DATA THAT THAT STRING TEMPORARY POINTED TO IS THE
7005
36300
THE LOWEST PART OF STRING SPACE IN USE,
7006
36320
;
IF so, FRETMP IS UPDATED TO REFLECT THE FACT THAT THAT SPACE IS NO
7007
36340
LONGER IS USE. THIS CAUSES DIFFICULTY FOR ASSIGNMENT ("LET") BECAUSE
7008
36360
THOUGH A TEMPORARY IS BEING FREED UP, NAMELY THE VALUE TO THE RIGHT
7009
36380
OF THE EQUAL SIGN IN THE "LET", THE ACTUAL DATA
7010
36400
IS STILL ACTIVE DATA SINCE A VARIABLE IS BEING SET UP TO POINT
7011
36420
AT IT. "LET" FOOLS FRETMP BY SETTING THE LENGTH OF THE
7012
36440
;
TEMPORARY TO ZERO TEMPORARILY.
7013
36460
;
7014 010431 001000 000315
36480
FRESTR: CALL
CHKSTR
IMAKE SURE ITS A STRING
7015
010432' 000000
010333*
7016
010433 000000
010427
7017
010434 001000
000052
36500
FREFAC: LHLD
FACLO
7018
010435' 000000
001637
7019
010436 000000
010432'
7020
010437 001000
000353
36520
FRETM2: XCHG
;FREE UP THE TEMP IN THE FACLO
7021
010440 001000
000052
36540
FREIMP: LHLD
TEMPPT
;GET TEMP POINTER
7022
010441 000000
001547
7023
010442' 000000
010435
7024
010445 001000
000053
36560
DCX
H
BLOOK AT WHAT IS IN THE LAST TEMP
7025
010444 001000
000106
36580
MOV
B,M
[B, =POINTER AT STRING
7026
010445' 001000
000053
36600
DCX
H
DECREMENT TEMPPT BY STRSIZ
7027
010446 001000 000116
36620
MOV
C,M
7028
010447 001000
000053
36640
OCX
H
7029
36660
IFN
LENGTH-2,<
7030
36680
DCX
H>
7031
010450 001000 000347
36700
COMPAR
;SEE IF (D,E) POINT AT THE LAST
7032
010451 001000 060353
36720
XCHG
;RETURN WITH [H,L]
7033
36740
;POINTING AT CURRENT DESCRIPTOR
7034
010452
001000
000306
36760
RNZ
;RETURN NOW IF NOW FREEING DONE
BASIC MCS 8080 GATES/ALLEN/DAVIDOFF
MACRO 47(113) 03:12 10-SEP-75 PAGE 26-11
F3
MAC
6-SEP-64 03:11
STRING FUNCTIONS
7035
010453'
001000
000042
36780
SHLD
TEMPPT
JUPDATE THE TEMP POINTER SINCE
7036 010454 000000 001547
7037
010455'
000000
010441
7038
36800
IITS BEEN DECREMENTED BY 4
7039
010456
001000
000325
36820
PUSH
D
;SAVE (D,E) TO RETURN IN [H,L]
7040 010457 001000 000120
36840
MOV
0,8
D,E)=POINTER AT STRING
7041
010460
001000
000131
36860
MOV
E,C
7042 010461 001000 000033
36880
DCX
D
;SUBTRACT ONE
7043 010462' 001000
000116
36900
MOV
C,M
; (C) #LENGTH OF THE STRING FREED UP
7044
010463 001000
000052
36920
LHLO
FRETOP
ISEE IF ITS THE FIRST
7045
010464 000000
001573
7046
010465' 000000
010454
7047
36940
;ONE IN STRING SPACE
7048
010466 001000
000347
36960
COMPAR
7049
010467
001000
000302
36980
JNZ
NOTLST
;NO so DON'T ADD
7050 010470 000000
010477'
7051
010471 000000
010464
7052
010472' 001000
000107
37000
MOV
B,A
;MAKE [B]=0
7053 010473* 001000
000011
37020
DAD
B
BADD
7054 010474 001000
000042
37040
SHLD
FRETOP
;AND UPDATE FRETOP
7055 010475 000000
001573
7056
010476 000000
010470
7057
010477 001000 060341
37060
NOTLST: POP
H
;GET POINTER AT CURRENT DESCRIPTOR
7058
010500 001000
000311
37080
RET
7059
37100
;
7060
37120
,
THE FUNCTION LEN(S) RETURNS THE LENGTH OF THE
7061
37140
;
STRING PASSED AS AN ARGUMENT
7062
37160
;
7063
010501 001000 000001
37180
LEN:
LXI
,SNGFLT
;CALL SNGFLT WHEN DONE
7064
010502
000000
007400
7065
010503
000000
010475
7066 010504 001000 000305
37200
PUSH
8
ILIKE so
7067 010505 001000 000315
37220
LEN1:
CALL
FRESTR
;FREE UP TEMP POINTED TO BY FACLO
7068 010506 000000 010431
7069 010507 000000 010502
7070 010510 001000 000257
37240
XRA
A
;FORCE NUMERIC FLAG
7071 010511 001000 000127
37260
MOV
D,A
1SET HIGH OF [D,E TO ZERO FOR VAL
7072
37280
IFN
LENGTH-2,<
7073
37300
STA
VALTYP>
7074
010512 001000 000176
37320
MOV
A,M
7075
010513 001000 000267
37340
ORA
A
1SET CONDITION CODES ON LENGTH
7076
010514 001000 000311
37360
RET
RETURN
7077
37380
7078
37400
;
THE FOLLOWING IS THE ASC($) FUNCTION. IT RETURNS AN INTEGER
7079
37420
;
WHICH IS THE DECIMAL ASCII EQUIVALENT
7080
37440
;
7081
010515' 001000 000315
37460
ASC:
CALL
LEN1
;SET UP ORIGINAL STR
7082 010516 000000 010505
7083 010517 000000 010506
7084 010520 001000 060312
37480
JZ
FCERR
;NULL STR, BAD ARG.
7085 010521 000000 010776
7086 010522' 000000 010516
7087 010523 001000 060643
37500
INX
H
;BUMP POINTER
BASIC MCS 8080 GATES/ALLEN/DAVIDUFF
MACRO 47(113) 03:12 10-SEP-75 PAGE 26-12
F3
MAC
6-SEP-64 03:11
STRING FUNCTIONS
7088
37520
IFN
LENGTH-2,
7089
37540
INX
H>
;BUMP POINTER
7090 010524 001000 000367
37560
PUSHM
;GET ADDRESS
7091 010525 001000 060341
37580
POP
H
;GET ADDR IN (H,L)
7092
010526 001000
000176
37600
MOV
A,M
;GET FIRST CHAR
7093
010527 001000 000303
37620
JMP
SNGFLT
;SNGFLT IT
7094
010530 000000 007400
7095
010531
000000
010521
7096
37640
7097
37660
CHRS(#) CREATES A STRING WHICH CONTAINS AS ITS ONLY
7098
37680
CHARACTER THE ASCII EQUIVALENT OF THE INTEGER ARG (#)
7099
37700
WHICH MUST BE ,LT. 255.
7100
37720
;
7101
010532' 001000
000076
37740
CHR$:
MVI
A,1
IONE CHARACTER STR
7102
010533'
000000
000001
7103 010534 001000
000315
37760
CALL
STRINI
;GET STRING IN DSCTMP
7104
010535' 000000
007624
7105 010536 000000
010530
7106 010537 001000
000315
37780
CALL
CONINT
;GET INTEGER IN RANGE
7107 010540 000000
011023
7108 010541 000000
010535'
7109 010542' 001000
000052
37800
LHLD
DSCTMP+2
;GET ADDR OF STR
7110 010543 000000
001572
7111
010544Â° 000000
010540
7112 010545 001000
000163
37820
MOV
M,E
;SAVE ASCII BYTE
7113
010546 001000
000301
37840
FINBCK: POP
B
;RETURN TO HIGHER LEVEL &
7114
37860
;SKIP THE CHKNUM CALL.
7115
010547
001000
000303
37880
JMP
PUTNEW
100 CALL PUTNEW
7116
010550
000000
007705
7117
010551
000000
010543
7118
37900
7119
37920
THE FOLLOWING IS THE LEFTS(S,# FUNCTION.
7120
37940
;
IT TAKES THE LEFTMOST # CHARS OF THE STR.
7121
37960
;
IF # IS .GT. THAN THE LEN OF THE STR, IT RETURNS THE WHOLE STR.
7122
37980
;
7123
010552 001000
000315
38000
LEFTS: CALL
PREAM
;TEST THE PARAMETERS
7124
010553
000000
010764
7125
010554 000000
010550
7126 010555' 001000
000257
38020
XRA
A
ILEFT NEVER CHANGES STRING POINTER
7127 010556 001000
000343
38040
LEFT3:
XTHL
;SAVE TEXT POINTER
7128 010557 001000
000117
38060
MOV
C,A
;OFFSET NOW IN (C)
7129 010560 001000
060345
38080
LEFT2:
PUSH
H
;SAVE DESC. FOR FRETMP
7130 010561 001000
000176
38100
MOV
A,M
;GET STRING LENGTH
7131
010562' 001000
000270
38120
CMP
8
TENTIRE STRING WANTED?
7132 010563 001000
000332
38140
JC
ALLSTR
IIF #CHARS ASKED FOR.GE.LENGTH,YES
7133 010564 000000
010570
7134 010565' 000000
010553
7135 010566* 001000
000170
38160
MOV
A,B
;GET TRUNCATED LENGTH OF STRING
7136 010567 001000
000021
38180
XWD
-01000,001
ISKIP OVER MVI USING "LXI 0,"
7137 010570 001000
000016
38200
ALLSTR: MVI
C,0
;MAKE OFFSET ZERO
7138 010571 000000
000000
7139 010572' 001000
000305
38220
PUSH
8
;SAVE OFFSET ON STACK
7140
010573 001000
000315
38240
CALL
GETSPA
;GET SPACE FOR NEW STRING
BASIC MCS 8080 GATES/ALLEN/DAVIDOFF
MACRO 47(113) 03:12 10-SEP-75 PAGE 26-13
F3
MAC
6-SEP-64 03:11
STRING FUNCTIONS
7141 010574 000000 007772'
7142 010575' 000000 010564
7143 010576 001000 000301
38260
POP
B
;GET BACK OFFSET
7144 010577* 001000 000341
38280
POP
H
;GET BACK DESC POINTER.
7145 010600 001000 000345
38300
PUSH
H
;BUT KEEP ON STACK
7146 010601 001000 000043
38320
INX
H
;MOVE TO STRING POINTER FIELD
7147
38340
IFN
LENGTH=2, <
7148
38360
INX
H>
7149
010602 001000
000106
38380
MOV
B,M
;GET POINTER LOW
7150 010603 001000
000043
38400
INX
H
/
7151 010604 001000
000146
38420
MOV
H,M
;POINTER HIGH
7152 010605 001000
000150
38440
MOV
L.B
;GET LOW IN
L
7153 010606 001000
000006
38460
MVI
8,0
;GET READY TO ADD OFFSET TO POINTER
7154 010607 000000
000000
7155 010610 001000
000011
38480
DAD
B
1ADD IT
7156 010611 001000
000104
38500
MOV
B,H
;GET OFFSET POINTER IN (B,C)
7157 010612' 001000
000115
38520
MOV
C,L
7158 010613 001000
000315
38540
CALL
STRAD2
;SAVE INFO IN DSCTMP
7159 010614 000000
007627
7160 010615 000000
010574
7161 010616 001000
080157
38560
MOV
L.A
;GET# OF CHARS TO MOVE IN L
7162 010617 001000
000315
38580
CALL
MOVSTR
;MOVE THEM IN
7163 010620 000000
010417
7164 010621 000000
010614
7165 010622' 001000
060321
38600
POP
D
;GET BACK DESC. POINTER
7166 010623 001000
060315
38620
CALL
FRETMP
;FREE IT UP.
7167
010624 000000
010440
7168
010625' 000000
010620
7169
010626 001000
000303
38640
JMP
PUTNEW
1PUT TEMP IN TEMP LIST
7170
010627 000000
007705
7171
010630 000000
010624
7172
7173
010631 001000
000315
38680
RIGHTS: CALL
PREAM
;CHECK ARG
7174
010632 000000
010764
7175 010633' 000000
010627
7176 010634 001000
000321
38700
POP
D
;GET DESC. POINTER
7177 010635' 001000
000325
38720
PUSH
D
;SAVE BACK FOR LEFT
7178 010636 001000
000032
38740
LDAX
D
;GET PRESENT LEN OF STR
7179 010637 001000
000220
38760
SUB
B
;SUBTRACT 2ND PARM
7180
010640 001000
000303
38780
JMP
LEFT3
;CONTINUE WITH LEFT CODE
7181
010641 000000
010556
7182
010642' 000000 010632'
7183
38800
7184
38820
; MID (s,#) RETURNS STR WITH CHARS FROM # POSITION
7185
38840
: ONWARD. IF # IS GT LEN($) THEN RETURN NULL STRING,
7186
38860
; MID (S,#,#) RETURNS STR WITH CHARS FROM # POSITION
7187
38880
; FOR #2 CHARS. IF #2 GOES PAST END OF STRING, RETURN
7188
38900
; AS MUCH AS POSSIBLE.
7189
38920
;
7190 010643 001000 000353
38940
MIDS:
XCHG
;PUT THE TEXT POINTER IN (H,L)
7191 010644 001000 000176
38960
MOV
A,M
;GET THE FIRST CHARACTER
7192 010645 001000 000315
38980
CALL
PREAM2
;GET OFFSET OFF STACK AND MAKE
7193 010646 000000 010767
BASIC MCS 8080 GATES/ALLEN/DAVIDOFF
MACRO 47(113) 03:12 10-SEP-75 PAGE 26-14
F3
MAC
6-SEP-64 03:11
STRING FUNCTIONS
7194
010647
000000
010641
7195
39000
;SURE DOES NOT = 0.
7196
010650
001000
000305
39020
PUSH
B
PUT OFFSET ON TO THE STACK
7197
010651
001000
000036
39040
MVI
E,255
;IF TWO ARG GUY, TRUNCATE.
7198 010652' 000000
000377
7199 010653 001000
060376
39060
CPI
")"
7200 010654 000000
000051
7201
010655 001000
000312
39080
JZ
MID2
, (E) SAYS USE ALL CHARS
7202
010656 000000
010665
7203
010657 000000
010646
7204
39100
;IF ONE ARGUMENT THIS IS CORRECT
7205
010660' 001000
000317
39120
SYNCHK
44
;COMMA? MUST DELINEATE 3RD ARG.
7206
010661
000000
000054
7207
010662'
001000
000315
39140
CALL
GETBYT
;GET ARGUMENT IN [E]
7208
010663
000000
011020
7209
010664 000000
010656
7210
010665'
001000
000317
39160
MID2:
SYNCHK
")"
;MUST BE FOLLOWED BY )
7211
010666 000000
000051
7212 010667 001000
000361
39180
POP
PSW
;GET OFFSET BACK IN A
7213
010670 001000
000343
39200
XTHL
;SAVE TEXT POINTER, GET DESC.
7214 010671 001000
000001
39220
LXI
B,LEFT2
;WHERE TO RETURN TO.
7215
010672 000000
010560
7216 010673 000000
010663
7217
010674 001000
000305
39240
PUSH
8
;GOES ON STACK
7218
010675
001000
000075
39260
DCR
A
;SUB ONE FROM OFFSET
7219
010676 001000
000276
39280
CMP
M
;POINTER PAST END OF STR?
7220
0106779
001000
000006
39300
MVI
6,0
;ASSUME NULL LENGTH STR
7221
010700 000000
000000
7222
010701 001000
000320
39320
RNC
TYES, JUST USE NULL STR
7223
010702 001000
000117
39340
MOV
C,A
;SAVE OFFSET OF CHARACTER POINTER
7224
010703 001000
000176
39360
MOV
A,M
;GET PRESENT LEN OF STR
7225
010704 001000
000221
39380
SUB
C
;SUBTRACT INDEX (2ND ARG)
7226 010705 001000
000273
39400
CMP
E
;IS IT TRUNCATION
7227
010706 001000
000107
39420
MOV
B,A
;GET CALCED LENGTH IN 8
7228
010707 001000
000330
39440
RC
;IF NOT USE PARTIAL STR
7229
010710 001000
000103
39460
MOV
B,E
;USE TRUNCATED LENGTH
7230
010711
001000
000311
39480
RET>
RETURN TO LEFT2
7231
39500
IFN LENGTH,<
7232
39520
:
7233
39540
THE FOLLOWING FUNCTIONS ALLOW THE
7234
39560
; USER FULL ACCESS TO THE ALTAIR I/O PORTS
7235
39580
; INP (CHANNEL#) RETURNS AN INTEGER WHICH IS THE STATUS
7236
39600
, OF THE CHANNEL. OUT CHANNEL#,V PUTS OUT THE INTEGER
7237
39620
: VALUE ON CHANNEL #. IT IS A STATEMENT, NOT A FUNCTION.
7238
39640
;
7239 010712' 001000 000315
39660
FNINP:
CALL
CONINT
;GET INTEGER CHANNEL #
7240 010713' 000000 011023
7241 010714 000000 010672
7242 010715' 001000
000062
39680
STA
INPWRD+1
IGEN INP INSTR
7243 010716 000000
010721
7244
010717 000000
010713
7245 010720 001000 000333
39700
INPWRD: IN
0
THE INP INSTR
7246
010721 000000
000000
BASIC MCS 8080 GATES/ALLEN/DAVIDOFF
MACRO 47(113) 03:12 10-SEP-75 PAGE 26-15
F3
MAC
6-SEP-64 03:11
STRING FUNCTIONS
7247 010722' 001000 000303
39720
JMP
SNGFLT
;SNGFLT RESULT
7248 010723 000000 007400
7249 010724* 000000 010716
7250
7251 010725 001000 000315
39760
FNOUT: CALL
SETIO
;GET READY
7252 010726 000800 011003
7253 010727 000000 010723
7254 010730 001000 000323
39780
OUTWRD: OUT
0
100 IT
7255
010731
000000
000000
7256
010732'
001000
000311
39800
RET
;AND THATS ALL
7257
39820
7258
39840
;
THE WAIT CHANNEL# MASK MASK2 WAITS UNTIL THE STATUS
7259
39860
;
RETURNED BY CHANNEL# IS NON ZERO WHEN XORED WITH MASK2
7260
39880
;
AND THEN ANDED WITH MASK, IF MASK2 IS NOT PRESENT IT IS ASSUMED
7261
39900
;
TO BE ZERO.
7262
39920
;
7263 010733 001000 000315
39940
FNWAIT: CALL
SETIO
1SET UP FOR WAIT
7264 010734 000000 011003
7265 010735 000000 010726
7266 010736 001000 000365
39960
PUSH
PSW
;SAVE THE MASK
7267 010737 001000 000036
39980
MVI
E,0
IDEFAULT MASK2 TO ZERO
7268 010740 000000
000000
7269 010741 001000
000053
40000
DCX
H
7270 010742 001000
000327
40020
CHRGET
;SEE IF THE STATEMENT ENDED
7271 010743 001000
000312
40040
JZ
NOTTHR
;IF NO THIRD ARGUMENT SKIP THIS
7272 010744* 000000
010753
7273 010745 000000
010734
7274 010746 001000
000317
40060
SYNCHK
44
;MAKE SURE THERE IS A ","
7275 010747 000000
000054
7276 010750 001000
000315
40080
CALL
GETBYT
7277 010751 000000
011020
7278 010752 000000
010744
7279 010753 001000
000301
40100
NOTTHR: POP
B
;REGET THE "AND" MASK
7280 010754 001000
000333
40120
STAINP: IN
0
;THE INPUT INSTR
7281 010755 000000
000000
7282 010756 001000
000253
40140
XRA
E
IXOR WITH MASK2
7283 010757 001000
000240
40160
ANA
B
;AND WITH MASK
7284 010760 001000
000312
40180
JZ
STAINP
;LOOP UNTIL RESULT IS NON-ZERO
7285 010761 000000
010754
7286 010762' 000000
010751
7287
40200
;NOTE: THIS LOOP CANNOT BE CONTROL-C*ED
7288
40220
;UNLESS THE WAIT IS BEING DONE ON CHANNEL
7289
40240
;ZERO. HOWEVER A RESTART AT 0 IS OK.
7290
010763 001000 000311
40260
RET>
7291
40280
IFN
STRING,<
7292
40300
;USED BY RIGHTS AND LEFTS FOR PARAMETER CHECKING AND SETUP
7293 010764 001000 000353
40320
PREAM:
XCHG
;PUT THE TEXT POINTER IN [H,L]
7294 010765 001000 060317
40340
SYNCHK ")
;PARAM LIST SHOULD END
7295 010766 000000 000051
7296
40360
;USED BY MIDS FOR PARAMETER CHECKING AND SETUP
7297 010767 001000 000301
40380
PREAM2: POP
B
;GET RETURN ADDR OFF STACK
7298 010770 001000 000321
40400
POP
D
;GET LENGTH OF ARG OFF STACK
7299 010771 001000 000305
40420
PUSH
B
;SAVE RETURN ADDR BACK ON