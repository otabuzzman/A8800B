
BASIC MCS 8080
GATES/ALLEN/DAVIDOFH
MACRO 47(113) 03:12 10-SEP-75 PAGE 26
F3
MAC
6-SEP-64 03:11
STRING FUNCTIONS
6452
28760
SUBTTL STRING FUNCTIONS
6453
28780
IFN
STRING,
;STRING HANDLING SUBROUTINES
6454
28800
;
6455
28820
; THE STR$ FUNCTION TAKES A NUMBER AND GIVES
6456
28840
; A STRING WITH THE CHARACTERS THE OUTPUT OF THE NUMBER
6457
28860
; WOULD HAVE GIVEN
6458
28880
;
6459
007564
28900
STRS:
6460
28920
IFN
LENGTH-2,
6461
28940
CALL
CHKNUM>
;MAKE SURE THE ARGUMENT
6462
28960
HIS A NUMERIC
6463
007564° 001000
000315
28980
CALL
FOUT
100 ITS OUTPUT
6464
007565
000000
004457*
6465
007566
000000
007562
6466 007567 001000
000315
29000
CALL
STRLIT
;SCAN IT AND TURN IT INTO A STRING
6467 007570 000000
007637
6468 007571 000000
007565°
6469 007572 001000
000315
29020
CALL
FREFAC
;FREE UP THE TEMP
6470 007573 000000
010434
6471
007574 000000
007570
6472 007575' 001000
000001
29040
LXI
B,FINBCK
6473 007576 000000
010546
6474
007577 000000
007573
6475
007606 001000
000305
29060
PUSH
B
;SET UP ANSWER IN NEW TEMP
6476
29080
6477
29100
STROPY CREATES A COPY OF THE STRING
6478
29120
WHOSE DESCRIPTOR IS POINTED TO BY (H,L).
6479
29140
ON RETURN [D,E] POINTS TO DSCIMP
6480
29160
WHICH HAS THE STRING INFO (LENGTH,WH COPIED TO)
6481
29180
6482
007601 001000 000176
29200
STROPY: MOV
A,
;GET LENGTH
6483
007602'
001000
000643
29220
INX
H
;MOVE UP TO THE POINTER
6484
29240
IFN
LENGTH-2,4
6485
29260
INX
H>
6486
007603
001000
000345
29280
PUSH
H
IGET POINTER TO POINTER OF ARG
6487 007604 001000 000315
29300
CALL
GETSPA
;GET THE SPACE
6488
007605' 000000
007772'
6489
007606 000000
007576
6490
007607 001000
000341
29320
POP
H
;FIND OUT WHERE STRING TO COPY
6491
007610 001000
000367
29340
PUSHM
;REALLY IS IN [B, CJ
6492
007611' 001000
060301
29360
POP
8
6493
007612' 001000
000315
29380
CALL
STRAD2
;SETUP DSCTMP
6494
007613* 000000
007627
6495
007614* 000000
067605
6496
007615 001000
000345
29400
PUSH
H
1SAVE POINTER TO DSCTMP
6497
007616 001000
000157
29420
MOV
L,A
;GET CHARACTER COUNT INTO [L]
6498
007617 001000
000315
29440
CALL
MOVSTR
;MOVE THE CHARS IN
6499
007620 000000
010417
6500
007621 000000
007613
6501
007622' 001000
000321
29460
POP
D
IRESTORE POINTER TO OSCTMP
6502
007623' 001000 000311
29480
RET
RETURN
6503
6504
007624
001000
000315
29520
STRINI: CALL
GETSPA
;GET SOME STRING SPACE ([A] CHARS)
BASIC MCS 8080 GATES/ALLEN/DAVIDOFF
MACRO 47(113) 03:12 10-SEP-75 PAGE 26-1
F3
MAC
6-SEP-64 03:11
STRING FUNCTIONS
6505 007625 000000 007772'
6506 007626 000000 007620
6507 007627 001000 000041
29540
STRAD2: LXI
H,DSCTMP
;GET DESC. TEMP
6508 007630 000000
001570
6509 007631 000000 007625'
6510 007632 001000 000345
29560
STRADI: PUSH
H
;SAVE DESC. POINTER
6511 007633' 001000 000167
29580
MOV
M,A
;SAVE CHARACTER COUNT
6512
29600
IFN
LENGTH-2,5
6513
29620
INX
H>
;MOVE TO ADDRESS FIELD
6514
007634 001000 000303
29640
JMP
PUTDEI
;USE COMMON CODE TO
6515
007635' 000000 007524
6516
007636
000000
007630
6517
29660
;STORE [D, =POINTER TO FREE SPACE
6518
29680
;AND RESTORE (H,L) AS THE DESCRIPTOR POINTER
6519
29682
6520
29684
STRLT2 TAKES THE STRING LITERAL WHOSE FIRST CHARACTER
6521
29686
IS POINTED BY [H,L]*1 AND BUILDS A DESCRIPTOR FOR IT.
6522
29688
THE DESCRIPTOR IS INITIALLY BUILT IN DSCTMP, BUT PUTNEW
6523
29690
; TRANSFERS IT INTO A TEMPORARY AND LEAVES A POINTER
6524
29692
; AT THE TEMPORARY IN FACLO. THE CHARACTERS OTHER THAN
6525
29694
; ZERO THAT TERMINATE THE STRING SHOULD BE SET UP IN (B)
6526
29696
; AND [D] IT THE TERMINATOR IS A QUOTE, THE QUOTE IS SKIPPED
6527
29697
; OVER, LEADING QUOTES SHOULD BE SKIPPED BEFORE CALL. ON RETURN
6528
29698
; THE CHARACTER AFTER THE STRING LITERAL IS POINTED TO
6529
29700
; BY [H,L] AND IS IN [A], BUT THE CONDITION CODES ARE
6530
29702
; NOT SET UP.
6531
29704
;
6532
007637
001000
000053
29720
STRLIT: DCX
H
6533
007640 001000
000006
29740
STRLTI: MVI
8,34
;ASSUME STR ENDS ON QUOTE
6534 007641 000000
000042
6535 007642 001000
000120
29760
STRLT3: MOV
0,8
6536
007643 001000
000345
29780
STRLT2: PUSH
H
;SAVE POINTER TO START OF LITERAL
6537 007644 001000
000616
29800
MVI
C,255
;INITIALIZE CHARACTER COUNT
6538 007645 000000
000377
6539 007646 001000
000643
29820
STRGET: INX
H
6540 007647 001000
000176
29840
MDV
A,M
;GET CHAR
6541 007650 001000
060014
29860
INR
C
;BUMP CHARACTER COUNT
6542 007651 001000
000267
29880
ORA
A
;IF 0, (END OF LINE) DONE
6543 007652 001000
000312
29900
JZ
STRFIN
;TEST
6544 007653' 000000
007665
6545 007654 000000
007635
6546 007655' 001000
000272
29920
CMP
D
6547 007656 001000
060312
29940
JZ
STRFIN
6548 007657 000000
007665'
6549 007660 000000
007653
6550 007661 001000
000270
29960
CMP
B
;CLOSING QUOTE
6551 007662 001000
000302
29980
JNZ
STRGET
INO, GO BACK FOR MORE
6552 007663 000000
007646
6553 007664 000000
007657
6554 007665' 001000
000376
30000
STREIN: CPI
34
;IF QUOTE TERMINATES THE STRING
6555 007666° 000000
000042
6556 007667 001000 000314
30020
CZ
CHRGTR
;SKIP OVER THE QUOTE
6557 007676 000000 003426
BASIC MCS 8080 GATES/ALLEN/DAVIDOFE
MACRO (113) 03:12 10-SEP-75 PAGE 26-2
F3
MAC
6-SEP-64 03:11
STRING FUNCTIONS
6558
007671
000000
007663
6559 007672' 001000 000343
30040
XTHL
6560 007673' 001000 000043
30060
INX
H
6561 007674 001000 000353
30080
XCHG
;GET POINTER TO TEMP
6562 007675' 001000
000171
30100
MOV
A,C
;GET CHARACTER COUNT IN A
6563 007676 001000
000315
30120
CALL
STRAD2
;SAVE STR INFO
6564
007677° 000000
007627
6565
007700 000000
007670
6566
30140
;COMPARE DESC. POINTER & STR POINTER
6567
007701 001000
000347
30160
COMPAR
ITO SEE IF STR IN BUF
6568
007702 001000 000324
30180
CNC
STROPY
IIF IN BUF, MUST COPY IT.
6569
007703 000000 007601
6570
007704
000000
007677°
6571
30200
;OTHERWISE STR IN PROGRAM.
6572
30220
6573
30240
SOME STRING FUNCTION IS RETURNING A RESULT IN DSCTMP
6574
30260
WE WANT TO SETUP A TEMP DESCRIPTOR WITH DCSTMP IN IT
6575
30280
PUT A POINTER TO THE DESCRIPTOR IN FACLO AND FLAG THE
6576
30300
RESULT AS TYPE STRING
6577
30320
6578 007705 001000 000021
30340
PUTNEW: LXI
D,DSCTMP
1 (D, E) POINT AT RESULT DESCRIPTOR
6579 007706 000000
001576
6580 007707 000000
007703*
6581 007710 001000
000052
30360
LHLD
TEMPPT
TO FIRST FREE TEMP
6582 007711 000000
001547
6583 007712' 000000
007706
6584 007713 001000
060042
30380
SHLD
FACLO
POINTER AT WHERE RESULT DESCRIPTOR WILL BE
6585 007714° 000000
001637
6586
007715 000000
007711
6587
30400
IFE
LENGTH-2,
6588
007716 001000
000076
30420
MVI
A,3
6589
007717 000000
000003
6590 007720 001000
000062
30440
STA
VALTYP
;FLAG THIS AS A STRING
6591 007721 000000
001543
6592 007722' 000000
067714*
6593
007723* 001000
000315
30460
CALL
VMOVE>
AND MOVE THE VALUE INTO A TEMPORARY
6594
007724
000000
004233*
6595
007725'
000000
007721*
6596
30480
IFN
LENGTH-2,
6597
30500
MVI
A,1
;FLAG RESULT AS STRING
6598
30520
STA
VALTYP
ISTORE IN "VALUE-TYPE" LOCATION
6599
30540
CALL
MOVE>
;TRANSFER THE DESCRIPTOR IN
6600
007726
001000
060347
30560
COMPAR
;DSCTMP IS JUST BEYOND THE TEMPS
6601
30580
;AND IF TEMPPT POINTS AT IT THERE
6602
30600
FARE NO FREE TEMPS
6603
007727
001000
000636
30620
MVI
E,ERRST
;"STRING TEMPORARY" ERROR
6604 007730 000000 000020
6605 007731 001000 000312
30640
JZ
ERROR
;GO TELL HIM
6606 007732' 000000 002102'
6607 007733' 000000 007724
6608 007734* 001000 000042
30660
SHLD
TEMPPT
;SAVE NEW TEMPORARY POINTER
6609 007735' 000000 001547
6610
007736° 000000 007732
BASIC MCS 8080 GATES/ALLEN/DAVIDOFF
MACRO 47(113) 03:12 10-SEP-75 PAGE 26-3
F3
MAC
6-SEP-64 03:11
STRING FUNCTIONS
6611 007737 001000 000341
30680
POP
H
1GET THE TEXT POINTER
6612 007740 001000 000176
30700
MOV
A,M
IGET CURRENT CHARACTER INTO (A)
6613 007741 001000 000311
30720
RET
6614
30740
6615
30760
; PRINT THE STRING POINTED TO BY (H,L) WHICH ENDS WITH A ZERO
6616
30780
; IF THE STRING IS BELOW DSCTMP IT WILL BE COPIED INTO STRING SPACE
6617
30800
;
6618 007742 001000 000043
30820
STROUI: INX
H
;POINT AT NEXT CHARACTER
6619 007743* 001000 000315
30840
STROUT: CALL
STRLIT
;GET A STRING LITERAL
6620 007744 000000 007637
6621 007745 000000 007735'
6622
30860
6623
30880
; PRINT THE STRING WHOSE DESCRIPTOR IS POINTED TO BY FACLO,
6624
30900
;
6625 007746 001000 000315
30920
STRPRT: CALL
FREFAC
RETURN TEMP POINTER BY FACLO
6626 007747 000000 010434
6627 007750 000000 007744
6628
30940
IFE LENGTH-2,
6629 007751 001000 060315
30960
CALL
GETBCD
i [D] =LENGTH B,CJ=POINTER AT DATA
6630 007752 000000 000600*
6631 007753' 000000 007747
6632
007754 001000 000024
30970
INR
D
;INCREMENT AND DECREMENT EARLY
6633
30980
ITO CHECK FOR NULL STRING
6634
007755' 001000 000025
30990
STRPR2: DCR
D>
IDECREMENT THE LENGTH
6635
31060
IFN
LENGTH-2,<
6636
31080
CALL
MOVRM
;GET LENGTH IN (E)
6637
31100
INR
E
;AND POINTER TO CHARACTERS IN (B,C)
6638
31120
STRPR2: DCR
E>
6639 007756 001000 000310
31140
RZ
TALL DONE
6640 007757 001000 000012
31160
LDAX
B
;GET CHARACTER TO PRINT
6641 007760° 001000 000337
31180
OUTCHR
6642 007761 001000 000376
31200
CPI
CR
6643 007762' 000000 000015
6644 007763 001000 000314
31220
CZ
CRF IN
6645 007764 000000 004534
6646 007765' 000000 007752'
6647 007766 001000 000003
31240
INX
B
;POINT TO THE NEXT CHARACTER
6648 007767 001000 000303
31260
JMP
STRPR2
;AND PRINT IT
6649 007770 000000 007755
6650 007771' 000000 007764
6651
31280
6652
31300
GETSPA - GET SPACE FOR CHARACTER STRING
6653
31320
MAY FORCE GARBAGE COLLECTION.
6654
31340
6655
31360
OF CHARS (BYTES) IN (A)
6656
31380
;
RETURNS WITH POINTER IN [D,E] OTHERWISE IF CANT GET SPACE
6657
31400
; BLOWS OFF TO "OUT OF STRING SPACE" TYPE ERROR.
6658
31420
;
6659 007772' 001000 060267
31440
GETSPA: ORA
A
;MUST BE NON ZERO. SIGNAL NO GARBAG YET
6660 007773' 001000 000016
31460
XWD
*01000, -0016
;"MVI C" AROUND THE NEXT
6661 007774* 001000 000361
31480
TRYGI2: POP
PSW
;IN CASE COLLECTED WHAT WAS LENGTH?
6662 007775 001000 000365
31500
PUSH
PSW
;SAVE IT BACK
6663 007776° 001000 000052
31520
LHLD
STKTOP
;GET BOTTOM OF STRING SPACE
BASIC MCS 8080 GATES/ALLEN/DAVIDOFF
MACRO 47(113) 03:12 10-SEP-75 PAGE 26-4
F3
MAC
6-SEP-64 03:11
STRING FUNCTIONS
6664
007777°
000000
001615
6665
010000
000000
007776
6666
010001
001000
000353
31540
XCHG
;IN (0,E)
6667
010002'
001000
000052
31560
LHLD
FRETOP
;GET TOP OF FREE SPACE IN (H,L)
6668
010003
000000
001573
6669
010004 000000
007777°
6670
010005 001000
000057
31580
CMA
1-# OF CHARS
6671
010006 001000
000117
31600
MOV
C,A
;IN (8,0)
6672
010007 001000
000006
31620
MVI
8,255
6673
010010 000000
060377
6674
010011 001000
000011
31640
DAD
B
;SUBTRACT FROM TOP OF FREE
6675
010012 001000
000043
31660
INX
H
6676
010013
001000
000347
31680
COMPAR
;COMPARE THE TWO
6677
010014
001000
000332
31700
JC
GARBAG
;NOT ENOUGH ROOM FOR STRING, OFFAL TIME
6678
010015'
000000
010026
6679
010016
000000
010003
6680
010017
001000
000042
31720
SHLD
FRETOP
;SAVE NEW BOTTOM OF MEMORY
6681
010020
000000
001573
6682
010021
000000
010015'
6683
010022' 001000
000043
31740
INX
H
;MOVE BACK TO POINT TO STRING
6684
010023' 001000
000353
31760
XCHG
RETURN WITH POINTER IN [D,E]
6685
010024
001000
000361
31780
PPSWRT: POP
PSW
;GET CHARACTER COUNT
6686
010025
001000
000311
31800
RET
;RETURN FROM GETSPA
6687
6688
010026
001000
000361
31840
GARBAG: POP
PSW
IHAVE WE COLLECTED BEFORE?
6689
010027
001000
000636
31860
MVI
E,ERRSO
;GET READY FOR OUT OF STRING SPACE ERROR
6690
010030 000000
000016
6691
010031 001000
000312
31880
JZ
ERROR
;GO TELL USER HE LOST
6692
010032' 000000
002102'
6693
010033 000000
010620
6694
010034' 001000
000277
31900
CMP
A
;SET ZERO FLAG TO SAY WEVE GARBAGED
6695
010035' 001000
000365
31920
PUSH
PSW
;SAVE FLAG BACK ON STACK
6696
010036 001000
000001
31940
LXI
8,TRYGI2
:PLACE FOR GARBAG TO RETURN TO.
6697
010037 000000
007774
6698
010040 000000
010032
6699
010041 001000
000305
31960
PUSH
B
;SAVE ON STACK
6700
010042' 001000
000052
31980
GARBA2: LHLD
MEMSIZ
;START FROM TOP DOWN
6701
010043 000000
001545'
6702
010044 000000
010037
6703
32000
IFE
REALIO,<
6704
32020
MVI
A,7
RING THE BELL ON GARBAGE COLLECTION
6705
32040
OUTCHR>
6706
010045
001000
060042
32060
FNDVAR: SHLD
FRETOP
;LIKE so
6707
010046
000000
001573'
6708
010047 000000
010643
6709 010050 001000
000041
32080
LXI
H,SCODE
IGET DOUBLE ZERO
6710
010051 000000
000000
6711 010052 000000
010046
6712 010053 001000
000345
32100
PUSH
H
;SAY DIDNT SEE VARS THIS PASS
6713 010054 001000
000052
32120
LHLD
STKTOP
1FORCE DVARS TO IGNORE STRINGS
6714
010055 000000
001615
6715
010056
000000
010051
6716
32140
;IN THE PROGRAM TEXT (LITERALS, DATA)
BASIC MCS 8080 GATES/ALLEN/DAVIDOFF
MACRO 47(113) 03:12 10-SEP-75 PAGE 26-5
F3
MAC
6-SEP-64 03:11
STRING FUNCTIONS
6717
010057
001000
000345
32160
PUSH
H
;FORCE FIND HIGH ADDRESS
6718 010060' 001000 000041
32180
LXI
TEMPST
;GET START OF STRING TEMPS
6719
010061
000000
001551
6720
010062'
000000
010055'
6721
010063
001000
000353
32200
TVAR:
XCHG
;SAVE IN (D,E)
6722
010064 001000
000052
32220
LHLD
TEMPPT
ISEE IF DONE
6723
010065' 000000
001547
6724
010066' 000000
010061
6725 010067° 001000
000353
32240
XCHG
;FLIP
6726
010076 001000
000347
32260
COMPAR
ITEST
6727 010071 001000
000001
32280
LXI
B,TVAR
;FORCE JUMP TO TVAR
6728
010072' 000000
010063
6729 010073' 000000
010065'
6730
010074 001000
060302
32300
JNZ
DVAR2
100 TEMP VAR GARBAGE COLLECT
6731
010075' 000000
010213
6732
010076 000000
010072'
6733
6734
010077°
001000
000052
32340
SVARS:
LHLD
VARTAB
;GET START OF SIMPLE VARIABLES
6735
010100 000000
001621
6736
010101 000000
010075'
6737
010102 001000
000353
32360
SVAR:
XCHG
;GET IN (D,E)
6738
010103 001000
000052
32380
LHLD
ARYTAB
;GET END OF SIMPS
6739
010104
000000
001623
6740 010105 000000
010100
6741
010106 001000
000353
32400
XCHG
IFLIP
6742
010107 001000
000347
32420
COMPAR
;SEE IF AT END OF SIMPS
6743
010110 001000
000312
32440
JZ
ARYVAR
1IF YES, DO ARRAY TYPE STRINGS
6744
010111' 000000
010140
6745
010112' 000000
010104
6746
010113 001000
000176
32460
MOV
A,M
;GET 2ND CHARACTER OF VARIABLE
6747
010114 001000
000043
32480
INX
H
;BUMP POINTER TWICE
6748
010115'
001000
000043
32500
INX
H
,
6749
32520
IFE
LENGTH-2,4
6750
010116' 001000
000043
32540
INX
H
;POINT AT THE VALUE
6751
010117'
001000
000376
32560
CPI
3
;SEE IF ITS A STRING
6752
010120
000000
000003
6753
010121 001000
000302
32580
JNZ
SKPVAR
;IF NOT, JUST SKIP AROUND IT
6754
010122' 000000
010130
6755
010123 000000
010111
6756 010124 001000
000315
32600
CALL
OVARS
;COLLECT IT
6757
010125' 000000
010214
6758
010126 000000
010122'
6759
010127 001000
000257
32620
XRA
A
;AND DON'T SKIP ANYTHING MORE
6760
010130 001000
000137
32640
SKPVAR: MOV
E,A
6761
010131' 001000
000026
32660
MVI
0,0
; ID,E =AMOUNT TO SKIP
6762
010132' 000000
000000
6763
010133
001000
000031
32680
DAD
D>
6764
32700
IFN
LENGTH-2,4
6765
32720
ORA
A
;SET CC'S
6766
32740
CALL
DVARS>
;CALL THE VARIABLE GARB ROUT.
6767
010134
001000
000303
32760
JMP
SVAR
;GET NEXT ONE
6768
010135' 000000 010102
6769
010136 000000 010125
BASIC MCS 8080 GATES/ALLEN/DAVIDOFF
MACRO 47(113) 03:12 10-SEP-75 PAGE 26-6
F3
MAC
6-SEP-64 03:11
STRING FUNCTIONS
6770
6771
010137
001000
000301
32800
ARYVA2: POP
B
;GET RID OF STACK GARBAGE
6772
010140
001000
000353
32820
ARYVAR: XCHG
;SAVE ARYVAR IN (D,E)
6773
010141
001000
000052
32840
LHLD
STREND
;GET END OF ARRAYS
6774
010142'
000000
001625'
6775
010143
000000
010135'
6776
010144
001000
000353
32860
XCHG
;FLIP BACK
6777
010145 001000
000347
32880
COMPAR
ISEE IF DONE WITH ARRAYS
6778 010146 001000 000312
32900
JZ
GRBPAS
EYES, SEE IF DONE COLLECTING
6779
010147 000000
010254
6780
010150 000000
010142
6781
32920
IFE
LENGTH=2,
6782
010151 001000
000176
32940
MOV
A,M
;GET THE VALUE TYPE INTO [A]
6783
010152' 001000
000043
32960
INX
H>
6784
010153 001000
000315
32980
CALL
MOVRM
;GET LENGTH OF ARRAY IN (B,C)
6785
010154 000000
005302*
6786
010155 000000
010147
6787
33000
IFN
LENGTH-2,
6788
33020
MOV
A,E>
;GET 2ND CHAR OF VAR NAME IN A
6789
010156 001000
000345
33040
PUSH
H
;SAVE POINTER TO DIMS
6790
010157
001000
000011
33060
DAD
B
;ADD TO CURRENT POINTER POSITION
6791
33080
IFE
LENGTH=2, <
6792
010160 001000
000376
33100
CPI
3
ISEE IF ITS A STRING
6793
010161 000000
000003
6794
010162' 001000
000302
33120
JNZ
ARYVA2>
IIF NOT JUST SKIP IT
6795
010163
000000
010137
6796
010164 000000
010154
\
6797
33140
IFN
LENGTH-2, <
6798
33160
ORA
A
;SEE IF STRING VAR
6799
33180
JP
ARYVA2>
;NO, KEEP ON TRUCKIN
6800
010165' 001000
000642
33200
SHLD
TEMP3
;SAVE END OF ARRAY
6801
010166 000000
001575
6802
010167 000000
010163
6803 010170 001000
000341
33220
POP
H
IGET BACK CURRENT POSITION
6804 010171 001000
000116
33240
MOV
C,M
;PICK UP NUMBER OF DIMS
6805 010172' 001000
000006
33260
MVI
8,0
;MAKE DOUBLE WITH HIGH ZERO
6806 010173 000000
000000
6807 010174 001000
000011
33280
DAD
B
;GO PAST DIMS
6808 010175 001000
000011
33300
DAD
8
;BY ADDING ON TWICE #DIMS (2 BYTE GUYS)
6809 010176 001000
000043
33320
INX
H
JONE MORE TO ACCOUNT FOR #DIMS.
6810 010177 001000
000353
33340
ARYSTR: XCHG
;SAVE CURRENT POSIT IN (D,E)
6811 010200 001000
000652
33360
LHLD
TEMP3
;GET END OF ARRAY
6812 010201 000000
001575'
6813 010202' 000000
010166
6814 010203 001000
000353
33380
XCHG
IFIX [H,L] BACK TO CURRENT
6815 010204 001000
000347
33400
COMPAR
ISEE IF AT END OF ARRAY
6816 010205 001000
000312
33420
JZ
ARYVAR
;END OF ARRAY, TRY NEXT ARRAY
6817 010206 000000
010146
6818 010207 000000
010201
6819 010210 001000
000001
33440
LXI
B,ARYSTR
;ADDR OF WHERE TO RETURN TO
6820 010211 000000
010177
6821 010212' 000000 010206
6822 010213 001000 000305
33460
DVAR2:
PUSH
8
;GOES ON STACK
BASIC MCS 8080 GATES/ALLEN/DAVIDOFF
MACRO 47(113) 03:12 10-SEP-75 PAGE 26-7
F3
MAC
6-SEP-64 03:11
STRING FUNCTIONS
6823
33480
IFE
LENGTH-2,<
6824 010214
33500
OVAR:
6825 010214 001000 000257
33520
OVARS:
XRA
A
6826 010215 001000 000266
33540
ORA
M
;SEE IF ITS THE NULL STRING
6827 010216 001000 000043
33560
INX
H
6828 010217 001000 000136
33580
MOV
E,M
6829 010220' 001000 000043
33600
INX
H
6830 010221 001000 000126
33620
MOV
D,M
6831
010222' 001000 000043
33640
INX
H>
, (D,E) #POINTER AT THE VALUE
6832
33660
IFN
LENGTH-2,
6833
33680
DVAR:
ORI
128
;FORCE DVAR TO CALL GRBVAR
6834
33700
OVARS:
PUSHM
;SAVE LENGTH
6835
33720
PUSHM
;SKIP NEXT TWO BYTES
6836
33740
POP
D
IGET POINTER IN 10,E
6837
33760
POP
B
;POP OF STRING LENGTH
6838
33780
RP
;IF WASNT A STR, RETURN
6839
33800
MOV
A,C
;GET LENGTH OF STRING
6840
33820
ORA
A>
;SET CONDITION CODES
6841
010223' 001000
000310
33840
RZ
SULL STRING, RETURN
6842 010224' 001000 000104
33860
MOV
B,H
;MOVE [H,L] TO (8,0)
6843 010225' 001000 000115
33880
MOV
C,L
6844 010226 001000
000052
33900
LHLD
FRETOP
;GET POINTER TO TOP OF STRING FREE SPACE
6845 010227 000000
001573
6846
010230 000000
010211
6847 010231 001000
000347
33920
COMPAR
IIS THIS STRINGS POINTER .LT. FRETOP
6848 010232' 001000
000140
33940
MOV
H,B
;MOVE [B,C BACK TO (H,L)
6849 010233 001000
000151
33960
MOV
L,C
6850 010234 001000
000330
33980
RC
IIF NOT, NO NEED TO MESS WITH IT FURTHUR
6851
010235' 001000
000341
34000
POP
H
;GET RETURN ADDRESS OFF STACK
6852 010236 001000
000343
34020
XTHL
;GET MAX SEEN SO FAR & SAVE RETURN ADDRESS
6853
010237 001000
000347
34040
COMPAR
BLETS SEE
6854
010240 001000
000343
34060
XTHL
;SAVE MAX SEEN & GET RETURN ADDRESS OFF STACK
6855
010241 001000
000345
34080
PUSH
H
;SAVE RETURN ADDRESS BACK
6856 010242' 001000
000140
34100
MOV
H,B
;MOVE (B,C) BACK TO [H,L]
6857
010243 001000
000151
34120
MOV
L,C
6858 010244 001000
000320
34140
RNC
;IF NOT, LETS LOOK AT NEXT VAR
6859
010245 001000
000301
34160
POP
B
IGET RETURN ADDR OFF STACK
6860
010246 001000
000361
34180
POP
PSW
;POP OFF MAX SEEN
6861 010247 001000
000361
34200
POP
PSW
;AND VARIABLE POINTER
6862 010250 001000
000345
34220
PUSH
H
;SAVE NEW VARIABLE POINTER
6863
010251 001000
000325
34240
PUSH
D
;AND NEW MAX POINTER
6864
010252
001000
000305
34260
PUSH
B
;SAVE RETURN ADDRESS BACK
6865
010253' 001000
000311
34280
RET
;AND RETURN
6866
34300
6867
34320
;
HERE WHEN MADE ONE COMPLETE PASS THRU STRING VARS
6868
34340
;
6869
010254 001000 000321
34360
GRBPAS: POP
D
;POP OFF MAX POINTER
6870 010255 001000 000341
34380
POP
H
;AND GET VARIABLE POINTER
6871 010256 001000 000175
34400
MOV
A,L
;GET LOW IN
6872 010257 001000 000264
34420
ORA
H
;SEE IF ZERO POINTER
6873 010260 001000 000310
34440
RZ
;IF END OF COLLECTION,
6874
34460
;THEN MAYBE RETURN TO GETSPA
6875 010261 001000 000053
34480
DCX
H
;CURRENTLY JUST PAST THE DESCRIPTOR