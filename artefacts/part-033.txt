
MATHPK FOR BASIC MCS 8080 GATES/ALLEN/DAVIDOFF MACRO 47(113) 06:09 27-AUG-75 PAGE 12-7
F4
MAC
23-AUG-64 06:08
FLOATING POINT INPUT ROUTINE
2683
45200
THERE WE PACK IN THE NEXT DIGIT OF THE EXPONENT
2684
45220
IWE MUTIPLY THE OLD EXPONENT BY TEN AND ADD IN THE NEXT DIGIT
2685
45240
;NOTE: EXPONENT OVERFLOW IS NOT CHECKED FOR
2686
001742' 001000
000173
45260
FINEDG:
MOV
A,E
1 EXPONENT DIGIT -- MULTIPLY EXPONENT BY 10
2687
001743
001000
000007
45280
RLC
;FIRST BY 4
2688 001744 001000 000007
45300
RLC
2689 001745' 001000 000203
45320
ADD
E
PADD 1 TO MAKE 5
2690 001746 001000
000007
45340
RLC
,NOW DOUBLE TO GET 10
2691 001747 001000
000206
45360
ADD
M
PADD IT IN
2692 001750 001000
000326
45380
SUI
"0"
;SUBTRACT OFF ASCII CODE
2693 001751 000000
000060
2694 001752 001000
000137
45400
MOV
E,A
ISTORE EXPONENT
2695
001753 001000 000303
45420
JMP
FINEC
;CONTINUE
2696 001754 000000 001621'
2697 001755 000000 001740
2698
45440
PAGE
-
MATHPK FOR BASIC MCS 8080 GATES/ALLEN/DAVIDOFF MACRO 47(113) 06:09 27-AUG-75 PAGE 13
F4
MAC
23-AUG-64 06:08
FLOATING POINT OUTPUT ROUTINE
2699
45460
SUBTTL FLOATING POINT OUTPUT ROUTINE
2700
45480
;ENTRY TO LINPRT
2701
001756
001000
000345
45500
INPRT:
PUSH
H
1SAVE LINE NUMBER
2702 001757 001000 000041
45520
LXI
H, INTXT##
;PRINT MESSAGE
2703 001760° 000000 000000*
2704 001761 000000 001754*
2705 001762' 001000 000315
45540
CALL
STROUT
2706 001763 000000 000000*
2707 001764 000000 001766
2708 001765 001000 000341
45560
POP
H
;FALL INTO LINPRT
2709
2710
2711
45620
;PRINT THE 2 BYTE NUMBER IN H,L
2712
45640
;ALTERS ALL REGISTERS
2713 001766
45660
LINPRT:
2714
45680
IFN
LENGTH-2,<
2715 001766 001000 000353
45700
XCHG
ISET UP REGISTERS FOR FLOATR
2716 001767 001000 000257
45720
XRA
A
2717 001770* 001000 060006
45740
MVI
8,230
2718 001771 000000 000230
2719 001772' 001000 000315
45760
CALL
FLOATRO
;CONVERT TO FLOATING POINT
2720 001773* 000000 001155'
2721 001774* 000000 001763
2722
45780
IFE
LENGTH-2,4
2723
45800
CALL
CONISS
IPUT THE LINE NUMBER IN THE FAC AS AN INTEGER
2724
45820
XRA
A
ISET FORMAT TO FREE FORMAT
2725
45840
CALL
FOUINIO
1SET UP THE SIGN
2726
001775' 001000 000041
45860
LXI
,STROUI##
IPUT PRINT STRING ADDRESS ON STACK SO WE WILL
2727
001776 000000 000000*
2728 001777 000000 001773
2729
002000 001000 000345
45880
PUSH
; RETURN TO IT AND DO AN "INX H"
2730
45900
THIS GETS RID OF THE SPACE FOR THE SIGN AT
2731
45920
, THE BEGINNING OF A LINE NUMBER
2732
45940
1FALL INTO FOUT
2733
45960
IFE
LENGTH-2
<
2734
45900
PUSA
+PUT DUNNY FIELD ON STACK
CALL FOUTZ
2735
46000
JMP
TPRINT THE NUMBER
2736
STROUI##
2737
2738
46060
;FLOATING OUTPUT OF FAC
2739
46080
TALTERS ALL REGISTERS
2740
46100
;THE ORIGINAL CONTENTS OF THE FAC IS LOST
2741
46120
IFN
LENGTH-2,5
2742 002001 001000 000041
46140
FOUT:
LXI
H,FBUFFR
;GET BEGINING OF CHARACTER BUFFER
2743 002002' 000000 000000*
2744 002003 000000 001776
2745 002004 001000 000345
46160
PUSH
H
;SAVE IT FOR WHEN WE RETURN
2746
46180
1PUT THE SIGN OF THE NUMBER IN THE BUFFER AND MAKE IT POSITIVE
2747 002005' 001000 000357
46200
FSIGN
;GET SIGN OF NUMBER
2748 002006 001000 000066
46220
MVI
M, "
;PRINT SPACE IF POSITIVE
2749
002007 000000 000040
2750 002010 001000 000362
46240
JP
FOUT1
2751 002011 000000 002015
MATHPK FOR BASIC MCS 8080 GATES/ALLEN/DAVIDOFF MACRO 47(113) 06:09 27-AUG-75 PAGE 13-1
F4
MAC
23-AUG-64 06:08
FLOATING POINT OUTPUT ROUTINE
2752 002012 000000 002002'
2753 002013 001000 000066
46260
MVI
M,
IPRINT A MINUS SIGN IF NEGATIVE
2754 002014 000000 000055
2755 002015 001000 000643
46280
FOUT1:
INX
H
;INCREMENT POINTER 10 NEXT CHRACTER POSITION
2756 002016 001000
000066
46300
MVI
M, "0"
;PUT A ZERO IN BUFFER IN CASE NUMBER=0
2757 002017 000000
000060
2758 002020 001000
000312
46320
JZ
FOUT19
100 IT IF THE NUMBER IS ZERO
2759 002021 000000 002266
2760 002022' 000000
002011
2761 002023 001000 000345
46340
PUSH
H
1SAVE BUFFER POINTER
2762 002024 001000 000374
46360
CM
NEG
INEGATE NUMBER IF NEGATIVE
2763 002025' 000000 001175'
2764
002026 000000 002021
2765
2766
46400
THERE WE GET THE FAC IN THE RANGE 100000 ,LE, FAC ,LE, 999999 AND ROUND IT TO
2767
46420
;AN INTEGER. WE KEEP A COUNT OF HOW MANY TIMES WE MULTIPLY OR DIVIDE BY TEN
2768
46440
iso WE KNOW WHAT THE EXPONENT WILL BE. THE FAC IS THEN CONVERTED TO AN
.
2769
46460
;INTEGER IN C,D,E, WE USE A TABLE OF POWERS OF TEN TO CALCULATE EACH DIGIT.
2770
46480
,THIS ALGORITHM IS USED FOR SPEED.
2771
002027 001000
000257
46500
XRA
A
;PUT TEN'S EXPONENT COUNT ON STACK
2772
002030
001000
000365
46520
PUSH
PSW
2773 002031 001000
000315
46540
CALL
FOUTCH
;SEE IF NUMBER IS TOO BIG OR TOO SMALL
2774 002032' 000000 002274
2775 002033 000000
002025
2776 002034 001000
000001
46560
FOUT3:
MOVRI
221,103,117,370 HIS NUMBER ,LE, 99999.94997 IT IS TOO SMALL
2777 002035' 000000
000103
2778 002036 000000
000221
2779 002037 001000
000021
2780 002040 000000
000370
2781 002041 000000 000117
2782 002042' 001000 000315
46580
CALL
FCOMP
1FCOMP RETURNS 377, 0 OR 1 IN A, so THE
2783 002043 000000 001317
2784 002044* 000000
002032'
2785
46600
, PARITY WILL BE ODD IFF 1 IS RETURNED
2786 002045' 001000
060342
46620
JPO
FOUTS
INO, NUMBER IS IN RANGE
2787 002046 000000
002071
2788 002047° 000000
002043
2789 002050 001000
000361
46640
POP
PSW
2790 002051 001000
000315
46660
CALL
FINMLT
EYES, MULTIPLY IT BY TEN TO GET
2791 002052 000000
001673
2792 002053 000000
002646
2793 002054 001000
000365
46680
PUSH
PSW
, IT IN RANGE
2794 002055' 001000
000303
46700
JMP
FOUT3
;SEE IF NUMBER IS NOW IN RANGE
2795 002056 000000
002034
2796 002057 000000
002052'
2797 002066 001000
000315
46720
FOUT9: CALL
DIV10
INO, DIVIDE NUMBER BY TEN, IT IS TOO BIG
2798 002061 000000
000637
2799 002062' 000000
002056
2800 002063 001000
000361
46740
POP
PSW
;ADD ONE TO EXPONENT
2801 002064* 001000
000074
46760
INR
A
2802 002065 001000 000365
46780
PUSH
PSW
2803 002066 001000 000315
46800
CALL
FOUTCB
;IS NUMBER LE. 999999.499?
2804 002067 000000 002274
MATHPK FOR BASIC MCS 8080 GATES/ALLEN/DAVIDOFF MACRO 47(113) 06:09 27-AUG-75 PAGE 13-2
F4
MAC
23-AUG-64 06:08
FLOATING POINT OUTPUT ROUTINE
2805 002070 000000 002061
2806
46820
EYES, NUMBER IS IN PRINTING RANGE, I.E.
2807
46840
; ALL DIGITS TO BE PRINTED ARE THE INTEGER PART
2808
2809 002071 001000 000315
46860
FOUTS: CALL
FADDH
;ROUND NUMBER TO NEAREST INTEGER
2810 002072 000000 000000
2811 002073 000000 002067
2812 002074 001000 000074
46880
INR
A
; MAKE A NON-ZERO, SINCE NUMBER IS POSITIVE
2813
46900
; AND NON-ZERO, ROUND WILL EXIT WITH THE HO
2814
46920
, IN A, so THE MSB WILL ALWAYS BE ZERO AND
2815
46940
, ADDING ONE WILL NEVER CAUSE A TO BE ZERO
2816 002075 001000 000315
46960
CALL
QINT
;GET INTEGER PART IN C,D,E
2817 002076 000000 001372'
2818 002077* 000000 002072'
2819 002100 001000 000315
46980
CALL
MOVER
;SAVE NUMBER IN FAC
2820 002101 000000 061225'
2821 002102' 000000 002076
2822
47000
;DECIDE IF THE NUMBER SHOULD BE PRINTED IN FIXED OR FLOATING NOTATION
2823 002103 001000 000001
47020
LXI
8,2*400+6+SCODE ;SET DECIMAL POINT COUNT FOR E NOTATION
2824 002104 000000 001006*
2825 002105' 000000 002101'
2826
47040
iC # DIGIT COUNT
2827 002106' 001000 000361
47060
POP
PSW
1 GET EXPONENT
2828
47080
ADD
C
; - NUMBER SHOULDEBE PRINTED IN E NOTATION?
2829 002107 001000 000201
SHOULD
2830 002110 001000 000372
47100
JM
FOUT6
EYES, IT IS .LT. .1
2831 002111 000000
002124
2832 002112' 000000 002104
2833 002113 001000 000376
47120
CPI
7
2834 002114 000000
000007
2835 002115 001000
060322
47140
JNC
FOUT6
EYES, IT IS ,GT. 999999
2836 002116 000000
002124
2837 002117 000000
002111
2838 002120 001000
000674
47160
INR
A
2839 002121' 001000 000107
47180
MOV
B,A
18 = DECIMAL POINT COUNT
2840 002122' 001000 000076
47200
MVI
A,1
;SET FIXED POINT FLAG, THE EXPONENT IS ZERO
2841 002123 000000 080601
2842
47220
; IF WE ARE USING FIXED POINT NOTATION
2843 002124 001000 000675
47240
FOUT6:
DCR
A
IE NOTATION: ADD 5 10 ORIGINAL EXPONENT
2844 002125 001000 000341
47260
POP
H
;GET BUFFER POINTER FROM STACK
2845 002126 001000 060365
47280
PUSH
PSW
;SAVE EXPONENT FOR LATER
2846
47300
;CALCULATE THE DIGITS OF THE NUMBER
2847 002127 001000
000021
47320
LXI
,FOUTBL
;STORE LOC OF LARGEST POWER OF TEN
2848 002136 000000 002316
2849 002131 000000
002116
2850 002132 001000 000005
47340
FOUT8:
DCR
8
;SEE IF IT IS TIME TO PRINT A DECIMAL POINT
2851 002133 001000 060066
47360
MVI
M,
:PUT A DECIMAL POINT IN THE BUFFER
2852 002134 000000 000056
2853 002135' 001000 060314
47380
CZ
INXHRT
;INCREMENT THE BUFFER POINTER IF IT IS TIME
2854 002136 000000 001252
2855 002137 000000 002130
2856 002140 001000 080305
47400
PUSH
8
;SAVE FLAGS
2857 002141 001000 000345
47420
PUSH
H
;SAVE CHARACTER POINTER
MATHPK FOR BASIC MCS 8080 GATES/ALLEN/DAVIDOFF MACRO 47(113) 06:09 27-AUG-75 PAGE 13-3
F4
MAC
23-AUG-64 06:08
FLOATING POINT OUTPUT ROUTINE
2858
002142'
001000
000325
47440
PUSH
D
;SAVE POWER OF TEN POINTER
2859 002143 001000 000315
47460
CALL
MOVRF
IGET NUMBER IN C,D,E
.
2860
002144
000000
001240
2861
002145 000000
002136
2862 002146 001000
000341
47480
POP
H
;GET POWER OF TEN POINTER
.
2863 002147 001000
000006
47500
MVI
B,"0"-1
18 # NEXT DIGIT TO BE PRINTED
2864 002150 000000
000057
2865 002151 001000
000004
47520
FOUT10: INR
B
;ADD ONE TO DIGIT
2866
002152 001000
000173
47540
MOV
A,E
;SUBTRACT LO
2867 002153 001000
000226
47560
SUB
M
2868 002154 001000
000137
47580
MOV
E,A
2869 002155 001000
000043
47600
INX
H
POINT TO NEXT BYTE OF POWER OF TEN
2870 002156 001000
000172
47620
MOV
A,D
;SUBTRACT MO
2871 002157 001000
000236
47640
SBB
M
2872 002160° 001000
000127
47660
MOV
D,A
2873
0021619 001000
000043
47680
INX
H
2874 002162' 001000
000171
47700
MOV
A,C
;SUBTRACT HO
2875 002163 001000
000236
47720
SBB
M
2876 002164 001000
000117
47740
MOV
C,A
2877 002165 001000
000053
47760
DCX
H
;POINT TO BEGINNING OF POWER OF TEN
2878 002166 001000
000053
47780
OCX
H
2879 0021679 001000
000322
47800
JNC
FOUT10
;SUBTRACT AGAIN IF RESULT WAS POSITIVE
2880 002170 000000
002151
2881 002171 000000
002144
2882 002172 001000
000315
47820
CALL
FADDA
;IT WASN'T, ADD POWER OF TEN BACK IN
2883 002173* 000000
000274*
2884 002174* 000000
002170
2885 002175 001000
000043
47840
INX
H
INCREMENT POINTER TO NEXT POWER OF TEN
2886 002176 001000
000315
47860
CALL
MOVER
;SAVE C,O,E IN FAC
2887 002177 000000
001225'
2888 002200° 000000
002173
2889 002201 001000
000353
47880
XCHG
;GET POWER OF TEN POINTER IN (DE)
2890 002202' 001000
000341
47900
POP
H
;GET BUFFER POINTER
2891 002203 001000
000160
47920
MOV
M,B
;PUT CHARACTER IN BUFFER
2892 002204* 001000
060043
47940
INX
H
;INCREMENT BUFFER POINTER
2893 002205 001000
000301
47960
POP
B
;GET COUNTERS OFF STACK
2894 002206' 001000
000015
47980
OCR
C
IWAS THAT THE LAST DIGIT?
2895 002207 001000
000302
48000
JNZ
FOUT8
100 MORE IF NOT
2896 002210 000000
002132'
2897 002211 000000
002177°
2898 002212 001000
000605
48020
DCR
B
ISEE IF DECIMAL POINT GOES AFTER LAST DIGIT
2899 002213 001000
000312
48040
JZ
FOUT12
IIT DOES, WE HAVE NO ZEROS TO SUPPRESS
2900
002214 000000
002232
2901
002215
000000
002210*
2902
48060
;SUPPRESS THE TRAILING ZEROS
2903
002216 001000
000053
48080
FOUT11: DCX
H
GO BACK TO LAST CHARACTER
2904 0022179 001000 000176
48100
MOV
A,M
;GET IT
2905 002220* 001000 000376
48120
CPI
"0"
I G N O R E TRAILING ZEROS
2906 002221 000000 000060
2907 002222' 001000 000312
48140
JZ
FOUT11
2908 002223 000000 002216
2909 002224* 000000 002214
2910
48160
;SUPPRESS DECIMAL POINT IF WE HAVE AN INTEGER
MATHPK FOR BASIC MCS 8080 GATES/ALLEN/DAVIDOFF MACRO 47(113) 06:09 27-AUG-75 PAGE 13-4
F4
MAC
23-AUG-64 06:08
FLOATING POINT OUTPUT ROUTINE
2911 002225' 001000 000376
48180
CPI
","
;IGNORE DECIMAL POINT BEFORE TRAILING ZEROS
2912 002226* 000000 000056
2913 002227 001000 000304
48200
CNZ
INXHRT
;IF NO DP, MOVE POINTER TO NEXT POSITION
2914 002230 000000 001252
2915 002231 000000 002223'
2916 002232' 001000 000361
48220
FOUT12: POP
PSW
;GET DECIMAL EXPONENT
2917 002233 001000 000312
48240
J2
FOUT17
;RETURN IF NUMBER WAS IN FIXED POINT FORMAT
2918 002234 000000 002271
2919 002235' 000000
002230*
2920
48260
;FLOATING POINT NOTATION -- PUT AN "E" IN THE BUFFER
2921
002236* 001000
000066
48280
MVI
M, "E"
;PUT AN "E" IN THE BUFFER
2922 002237 000000 000105
2923 002240 001000 000043
48300
INX
H
;PUT SIGN OF EXPONENT IN BUFFER
2924
48320
;PUT IN THE SIGN OF THE EXPONENT
2925
002241 001000
000066
48340
MVI
M,
iA PLUS IF POSITIVE
2926
002242' 000000
000053
2927 002243 001000
000362
48360
JP
FOUT14
2928
002244 000000
002252'
2929 002245 000000
002234*
2930 002246 001000 000066
48380
MVI
M,"-"
iA MINUS IF NEGATIVE
2931 002247 000000
000055
2932 002250 001000
000057
48400
CMA
INEGATE EXPONENT
2933
002251
001000
000074
48420
INR
A
2934
48440
;CALCULATE THE TWO DIGIT EXPONENT
2935 002252' 001000
000006
48460
FOUT14: MVI
B, "0"-1
;INITIALIZE TEN'S DIGIT COUNT
2936
002253 000000
000057
2937 002254 001000
000004
48480
FOUT15: INR
B
;INCREMENT DIGIT
2938 002255' 001000
000326
48500
SUI
12
;SUBTRACT TEN
2939 002256 000000
000012
2940 002257 001000
000322
48520
JNC
FOUT15
100 IT AGAIN IF RESULT WAS POSITIVE
2941 002260' 000000
002254
2942 002261 000000
002244
2943 002262' 001000
000306
48540
ADI
"0"+12
;ADD BACK IN TEN AND CONVERT TO ASCII
2944
002263 000000
000072
2945
48560
1PUT THE EXPONENT IN THE BUFFER
2946 002264 001000
000043
48580
INX
H
2947 002265 001000
000160
48600
MOV
M,8
PUT TEN'S DIGIT OF EXPONENT IN BUFFER
2948 002266 001000
000043
48620
FOUT19: INX
H
;WHEN WE JUMP TO HERE, A IS ZERO
2949 002267 001000
000167
48640
MOV
M.A
;PUT ONE'S DIGIT IN BUFFER
2950 002270* 001000
000043
48660
INX
H
;INCREMENT POINTER
2951 002271 001000
000161
48680
FOUT17:
MOV
M,C
;PUT ZERO AT END OF BUFFER
2952
002272' 001000
000341
48700
POP
H
EXIT WITH (HL) POINTING TO STRING
2953
002273
001000
000311
48720
RET
FALL DONE
2954
2955
48760
;SEE IF FAC .LE. 999999.499
2956
002274 001000
000001
48780
FOUTCH: MOVRI
224,164,043,367 ;COMPARE NUMBER WITH CONSTANT
2957 002275' 000000 000164
2958 002276 000000 000224
2959 002277* 001000 000621
2960 002300° 000000 000367
2961 002301 000000 000043
2962 002302' 001000 000315
48800
CALL
FCOMP
2963 002303 000006 001317
MATHPK FOR BASIC MCS 8080 GATES/ALLEN/DAVIDOFF MACRO 47(113) 06:09 27-AUG-75 PAGE 13-5
F4
MAC
23-AUG-64 06:08
FLOATING POINT OUTPUT ROUTINE
2964 002304 000000 002260
2965 002305' 001000 000341
48820
POP
H
;GET RETURN ADDRESS OFF STACK
2966 002306' 001000 000342
48840
JPO
FOUT9
NUMBER TOO BIG, DIVIDE BY TEN
2967 002307 000000 002060
2968 002310* 000000 002303
2969 002311 001000 000351
48860
PCHL
;NUMBER OK, RETURN
2970
2971
48900
;CONSTANTS FOR FOUT
2972
002312' 000000
000000
48920
FHALF:
000
; 1/2
2973
002313 000000
000000
48940
000
;THIS CONSTANT IS ALSO USED BY SQR, SIN, COS
2974
002314 000000
000000
48960
000
2975
002315 000000
000200
48980
200
2976
49000
IPOWER OF TEN TABLE
2977
002316 000000
000240
49020
FOUTBL: 240
, 100000
2978 002317 000000
000206
49040
206
2979 002320 000000
000001
49060
001
2980 002321' 000000
000020
49080
020
, 10000
2981 002322' 000000
000047
49100
047
2982 002323' 000000
000000
49120
000
2983 002324* 000000
000350
49140
350
; 1000
2984 002325* 000000
000003
49160
003
2985 002326' 000000
000000
49180
000
2986 002327' 000000
000144
49200
144
, 100
2987 002330 000000
000000
49220
000
2988 002331' 000000
000000
49240
000
2989 002332' 000000
000012
49260
012
; 10
2990 002333' 000000
000000
49280
000
2991 002334 000000
000000
49300
000
2992 002335' 000000 000601
49320
001
2993
002336* 000000 000000
49340
000
2994
002337' 000000 000000
49360
000>
2995
49380
IFE
LENGTH-2,4
2996
49400
,OUTPUT THE VALUE IN THE FAC ACCORDING TO THE FORMAT SPECIFICATIONS
2997
49420
, IN A,B,C
2998
49440
;ALL REGISTERS ARE ALTERED
2999
49460
THE ORIGINAL CONTENTS OF THE FAC IS LOST
3000
49480
3001
49500
;THE FORMAT IS SPECIFIED IN A, B AND C AS FOLLOWS:
3002
49520
;THE BITS OF A MEAN THE FOLLOWING:
3003
49540
;BIT 7
0 MEANS FREE FORMAT OUTPUT, I.E. THE OTHER BITS OF A MUST BE ZERO,
3004
49560
,
TRAILING ZEROS ARE SUPPRESSED, A NUMBER IS PRINTED IN FIXED OR FLOATING
3005
3006
49580
POINT NOTATION ACCORDING TO ITS MAGNITUDE, THE NUMBER IS LEFT
3007
49600
JUSTIFIED IN ITS FIELD, 8 AND C ARE IGNORED.
3008
49620
1 MEANS FIXED FORMAT OUTPUT, I.E. THE OTHER BITS OF A ARE CHECKED FOR
3009
49640
FORMATTING INFORMATION, THE NUMBER IS RIGHT JUSTIFIED IN ITS FIELD,
3010
49660
TRAILING ZEROS ARE NOT SUPPRESSED. THIS IS USED FOR PRINT USING,
3011
49680
BIT
6 1 MEANS GROUP THE DIGITS IN THE INTEGER PART OF THE NUMBER INTO GROUPS
3012
49700
OF THREE AND SEPARATE THE GROUPS BY COMMAS
3013
49720
0 MEANS DON'T PRINT THE NUMBER WITH COMMAS
3014
49740
;BIT 5 1 MEANS FILL THE LEADING SPACES IN THE FIELD WITH ASTERISKS ("*")
3015
49760
BIT 4 1 MEANS OUTPUT THE NUMBER WITH A FLOATING DOLLAR SIGN ("S")
3016
49780
,BIT 3 1 MEANS PRINT THE SIGN OF A POSITIVE NUMBER AS A PLUS SIGN ("+")
MATHPK FOR BASIC MCS 8080 GATES/ALLEN/DAVIDOFF MACRO 47(113) 06:09 27-AUG-75 PAGE 13.6
F4
MAC
23-AUG-64 06:08
FLOATING POINT OUTPUT ROUTINE
3017
49800
,
INSTEAD OF A SPACE
3018
49820
;BIT 2 1 MEANS PRINT THE SIGN OF THE NUMBER AFTER THE NUMBER
3019
49840
;BIT 1 UNUSED
3020
49860
;BIT 0 1 MEANS PRINT THE NUMBER IN FLOATING POINT NOTATION I.E. "E NOTATION"
3021
49880
IF THIS BIT IS ON, THE COMMA SPECIFICATION (BIT 6) IS IGNORED.
3022
49900
0 MEANS PRINT THE NUMBER IN FIXED POINT NOTATION. NUMBER .GE. 1E16
3023
49920
CANNOT BE PRINTED IN FIXED POINT NOTATION.
3024
49940
3025
49960
18 AND C TELL HOW BIG THE FIELD IS:
3026
49980
18
=
THE NUMBER OF PLACES IN THE FIELD TO THE LEFT OF THE DECIMAL POINT
3027
50000
;
(B DOES NOT INCLUDE THE DECIMAL POINT)
3028
50020
IC
#
THE NUMBER OF PLACES IN THE FIELD TO THE RIGHT OF THE DECIMAL POINT
3029
50040
CC INCLUDES THE DECIMAL POINT)
3030
50060
B AND C DONOT INCLUDE THE 4 POSITIONS FOR THE EXPONENT IF BIT 0 IS ON
3031
50080
;FOUT ASSUMES B+C .LE. 24 (DECIMAL)
3032
50100
3033
50120
IENTRY TO PRINT THE FAC IN FREE FORMAT
3034
50140
FOUT:
XRA
A
;SET FORMAT FLAGS TO FREE FORMATED OUTPUT
3035
50160
;ENTRY TO PRINT THE FAC USING THE FORMAT SPECIFICATIONS IN A, B AND
C
3036
50180
PUFOUT: CALL
FOUINI
;SAVE THE FORMAT SPECIFICATION IN A AND PUT
3037
50200
iA SPACE FOR POSITIVE NUMBERS IN THE BUFFER
3038
50220
PUSH
8
;SAVE THE FIELD LENGTH SPECIFICATIONS
3039
50240
ANI
10
;CHECK IF POSITIVE NUMBERS GET A PLUS SIGN
3040
50260
JZ
FOUT1
;THEY DON'T
3041
50280
MVI
M,"+"
;THEY DO, PUT IN A PLUS SIGN
3042
50300
FOUT1:
LOA
VALTYP
;SEE WHAT KIND OF A VALUE WE HAVE
3043
50320
MOV
B,A
ISAVE IT
3044
50340
XCHG
;SAVE BUFFER POINTER
3045
50360
CALL
VSIGN
;GET THE SIGN OF THE FAC
3046
50380
XCHG
;PUT THE BUFFER POINTER BACK IN (HL)
3047
50400
MOV
A,B
;GET THE VALTYP BACK
3048
50420
JP
FOUT2
;IF WE HAVE A NEGATIVE NUMBER, NEGATE IT
3049
50440
MVI
M,"-"
, AND PUT A MINUS SIGN IN THE BUFFER
3050
50460
PUSH
H
;SAVE THE BUFFER POINTER
3051
50480
CALL
VNEG
INEGATE THE NUMBER
3052
50500
POP
H
;GET THE BUFFER POINTER BACK
3053
50520
FOUT2:
INX
H
;POINT TO WHERE THE NEXT CHARACTER GOES
3054
50540
LDA
TEMP3
;GET THE FORMAT SPECIFICATION
3055
50560
MOV
D,A
;SAVE IT FOR LATER
3056
50580
RAL
;PUT THE FREE FORMAT OR NOT BIT IN THE CARRY
3057
50600
LDA
VALTYP
;GET THE VALTYP, VNEG COULD HAVE CHANGED THIS
3058
50620
; SINCE -32768 IS INT AND 32768 IS SNG,
3059
50640
,
so B IS NOT ACCURATE
3060
50660
JC
FOUTFX
,THE MAN WANTS FIXED FORMATED OUTPUT
3061
50680
;HERE TO PRINT NUMBERS
IN FREE FORMAT
3062
50700
POP
B
;WE CAN IGNORE THE OLD B AND C
3063
50720
MVI
M, "0"
;PUT A ZERO IN THE BUFFER IN CASE THE NUMBER
3064
50740
JZ
FOUTZR
, IS ZERO. IT IS, FINISH IT UP
3065
50760
CPI
4
;DECIDE WHAT KIND OF A VALUE WE HAVE
3066
50780
JNC
FOUFRV
,WE HAVE A SNG OR DBL
3067
50800
;HERE TO PRINT AN INTEGER IN FREE FORMAT
3068
50820
LXI
SCODE
1SET THE DECIMAL POINT COUNT AND COMMA COUNT
3069
50840
, TO ZERO