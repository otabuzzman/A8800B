
MATHPK FOR BASIC MCS 8080 GATES/ALLEN/DAVIDOFF MACRO 47(113) 06:09 27-AUG-75 PAGE 11.7
F4
MAC
23-AUG-64 06:08
DOUBLE PRECISION ARITHMETIC ROUTINES
2309
38780
RNZ
FALL DONE IF OVERFLOW DID NOT OCCUR
2310
38800
JMP
OVERR>
IIT DID, GIVE THE APPROPRIATE MESSAGE
2311
38820
PAGE
MATHPK FOR BASIC MCS 8080 GATES/ALLEN/DAVIDOFF MACRO 47(113) 06:09 27-AUG-75 PAGE 12
F4
MAC
23-AUG-64 06:08
FLOATING POINT INPUT ROUTINE
2312
38840
SUBTTL
FLOATING POINT INPUT ROUTINE
2313
38860
BALTERS ALL REGISTERS
2314
38880
;THE NUMBER IS LEFT IN FAC
2315
38900
1AT ENTRY, (HL) POINTS TO THE FIRST CHARACTER IN A TEXT BUFFER.
2316
38920
;THE FIRST CHARACTER IS ALSO IN A. WE PACK THE DIGITS INTO THE FAC
2317
38940
IAS AN INTEGER AND KEEP TRACK OF WHERE THE DECIMAL POINT IS.
2318
38960
IC IS 377 IF WE HAVE NOT SEEN A DECIMAL POINT, 0 IF WE HAVE,
2319
38980
18 IS THE NUMBER OF DIGITS AFTER THE DECIMAL POINT.
2320
39000
,AT THE END, B AND THE EXPONENT (IN E) ARE USED TO DETERMINE HOW MANY
2321
39020
TIMES WE MULTIPLY OR DIVIDE BY TEN TO GET THE CORRECT NUMBER,
2322 001531
39040
FIN:
2323
39060
IFN
STRING,<
2324
39080
;IF WE ARE CALLED BY VAL, THE SIGNS MAY NOT BE CRUNCHED
2325
001531 001000
000376
39100
CPI
"-"
;SEE IF NUMBER IS NEGATIVE
2326
001532' 000000
000055
2327
001533 001000
000365
39120
PUSH
PSW
;SAVE SIGN
2328 001534 001000
000312
39140
JZ
FIN1
;IGNORE MINUS SIGN
2329 001535 000000
001545
2330 001536 000000
001526
2331 001537 001000
000376
39160
CPI
"+"
;IGNORE A LEADING SIGN
2332 001540 000000
000653
2333 001541 001000
000312
39180
JZ
FIN1>
2334
001542' 000000
001545'
2335 001543 000000
001535'
2336 001544 001000 000053
39200
DCX
H
;SET CHARACTER POINTER BACK ONE
2337 001545'
39220
FINI:
2338
39240
IFN
LENGTH-2,4
2339
001545' 001000
000315
39260
CALL
ZERO
;CLEAR FAC
2340 001546 000000
060173
2341 001547° 000000
001542
2342
001550* 001000
000107
39280
MOV
B,A
;CLEAR FLAGS: B=DECIMAL PLACE COUNT
2343 001551 001000
000127
39300
MOV
D,A
ID=SIGN OF EXPONENT
2344 001552' 001000
000137
39320
MOV
E,A
E EXPONENT
2345
001553 001000
000057
39340
CMA
2346
001554 001000
000117
39360
MOV
C,A
ICE" " FLAG
2347
39380
;HERE TO GET THE NEXT DIGIT OF THE NUMBER, A DECIMAL POINT OR AN "E"
2348 001555 001000
000327
39400
FINC:
CHRGET
;GET A CHARACTER
2349 001556 001000
060332
39420
JC
FINDIG
100 WE HAVE A DIGIT?
2350 001557 000000
001702
2351 001560 000000
001546
2352 001561 001000
000376
39440
CPI
","
;TEST FOR DECIMAL POINT
2353 001562' 000000
000056
2354 001563 001000
060312
39460
JZ
FINDP
2355 001564 000000
001635'
2356 001565 000000
001557
2357 001566 001000
000376
39480
CPI
"E"
;CHECK FOR BEGINNING OF EXPONENT
2358 001567 000000
000105
2359 001570 001000
000302
39500
JNZ
FINE
;"NONE OF THE ABOVE" so END OF NUMBER
2360
001571 000000
001641
2361
001572' 000000
001564
2362
39520
THERE TO CHECK FOR THE SIGN OF THE EXPONENT
2363
001573 001000 000327
39540
CHRGET
CHECK FOR ITS SIGN
2364
39560
IFN
STRING,<
MATHPK FOR BASIC MCS 8080 GATES/ALLEN/DAVIDOFF MACRO 47(113) 06:09 27-AUG-75 PAGE 12-1
F4
MAC
23-AUG-64 06:08
FLOATING POINT INPUT ROUTINE
2365 001574 001000 000345
39580
PUSH
H
;SAVE TEXT POINTER
2366 001575' 001000 000041
39600
LXI
,FINEC
PUT FINEC ON STACK so WE CAN JUMP
2367 001576 000000 001621
2368 001577* 000000 001571
2369 001600 001000 000343
39620
XTHL>
, TO IT IN LESS BYTES
2370 001601 001000 000025
39640
DCR
D
;SET SIGN OF EXPONENT FLAG
2371 001602' 001000 000376
39660
CPI
MINUTK
;NEGATIVE EXPONENT?
2372 001603 000000 000000*
2373
39680
IFE
STRING,
2374
39700
JZ
FINEC>
2375
39720
IFN
STRING,
2376 001604 001000 000310
39740
RZ
2377 001605 001000 000376
39760
CPI
"-"
2378 001606 000000 000055
2379 001607 001000 000310
39780
RZ>
2380 001610 001000 000024
39800
INR
D
INO, RESET FLAG
2381
39820
IFN
STRING,
2382 001611 001000
000376
39840
CPI
"+"
2383 001612 000000 000053
2384 001613 001000 000310
39860
RZ>
2385 001614 001000 000376
39880
CPI
PLUSTK
IGNORE "+"
2386 001615 000000 000000*
2387
39900
IFE
STRING,
2388
39920
JZ
FINEC>
2389
39940
IFN
STRING,<
2390
001616 001000
000310
39960
RZ
2391
001617 001000 000361
39980
POP
PSW>
;GET FINEC OFF STACK
2392
001620
001000
000053
40000
DCX
H
;CHECK IF LAST CHARACTER WAS A DIGIT
2393
40020
THERE TO GET THE NEXT DIGIT OF THE EXPONENT
2394
001621 001000
000327
40040
FINEC:
CHRGET
;GET NEXT CHARACTER
2395
001622' 001000
000332
40060
JC
FINEDG
;IS IT A DIGIT?
2396
001623 000000
001742'
2397 001624 000000
001576
2398
001625 001000
000024
40080
INR
D
INO, EXPONENT ALL IN
2399 001626 001000
000302
40100
JNZ
FINE
1SET ITS SIGN
2400 001627 000000
001641
2401
001630 000000
001623
2402 001631 001000
000257
40120
XRA
A
2403 001632 001000
000223
40140
SUB
E
2404 001633 001000 000137
40160
MOV
E,A
2405 001634 001000 000014
40180
INR
C
;MAKE SURE C IS NOT 377
2406
40200
HERE TO CHECK IF WE HAVE SEEN 2 DECIMAL POINTS AND SET THE DECIMAL
2407
40220
: POINT FLAG
2408 001635 001000 000014
40240
FINDP:
INR
C
;DECIMAL POINTS -- SET FLAG
2409 001636 001000 000312
40260
JZ
FINC
;CONTINUE SCANNING CHARACTERS
2410 001637 000000 001555'
2411 001640 000000 001627
2412
40280
;WE DON'T WANT TWO so END OF NUMBER
2413
40300
THERE TO MULTIPLY OR DIVIDE BY 10 THE CORRECT NUMBER OF TIMES.
2414
40320
,WE HAVE ALREADY READ IN ALL THE DIGITS.
2415 001641 001000 000345
40340
FINE:
PUSH
H
1SAVE POINTER FOR LATER
2416 001642 001000 000173
40360
MOV
A,E
PEXPONENT=EXPONENTe# OF DECIMAL PLACES
2417 001643 001000 080220
40380
SUB
a
MATHPK FOR BASIC MCS 8080 GATES/ALLEN/DAVIDOFF MACRO 47(113) 06:09 27-AUG-75 PAGE 12-2
F4
MAC
23-AUG-64 06:08
FLOATING POINT INPUT ROUTINE
2418 001644 001000 000364
40400
FINE2: CP
FINMUL
;MULTIPLY BY TEN IF EXPONENT IS POSITIVE
2419 001645 000000
001672'
2420 001646 000000 001637
2421 001647 001000 000362
40420
JP
FINE3
;DIVIDE BY TEN IF EXPONENT IS NEGATIVE
2422 001650 000000 001660°
2423 001651 000000
001645'
2424 001652' 001000
000365
40440
PUSH
PSW
;SAVE EXPONENT
2425 001653* 001000
000315
40460
CALL
DIV10
;DIVIDE NUMBER BY TEN
2426 001654 000000
000637
2427 001655' 000000
001650
2428 001656 001000
000361
40480
POP
PSW
;GET EXPONENT
2429 001657 001000 000074
40500
INR
A
;INCREMENT IT
2430 001660 001000 000302
40520
FINE3:
JNZ
FINE2
100 AGAIN IF WE ARE NOT DONE
2431 001661 000000 001644
2432 001662' 000000 001654
2433
40540
IFE
STRING,
2434
40560
POP
H>
;GET CHARACTER POINTER
2435
40580
IFN
STRING,
2436 001663 001000 000321
40600
POP
D
;GET CHARACTER POINTER
2437
001664 001000 000361
40620
POP
PSW
;GET SIGN
2438 001665' 001000 000314
40640
CZ
NEG
INEGATE IF NECESSARY
2439 001666 000000 001175*
2440 001667 000000 001661
2441 001676° 001000 000353
40660
XCHG>
;GET CHARACTER POINTER IN (HL)
2442 001671 001000 000311
40680
RET>
FALL DONE
2443
40700
IFE
LENGTH-2,5
2444
40720
XCHG
;SAVE THE TEXT POINTER IN (DE)
2445
40740
LXI
8,377+SCODE
;CLEAR FLAGS: B=DECIMAL PLACE COUNT
2446
40760
IC=". FLAG
2447
40780
MOV
H,C
IZERO (HL)
2448
40800
MOV
L,C
2449
40820
CALL
CONISS
IZERO FAC, SET VALTYP TO "INTEGER"
2450
40840
XCHG
;GET THE TEXT POINTER BACK IN (HL)
2451
40860
;HERE TO CHECK FOR A DIGIT, A DECIMAL POINT, "E" OR "0"
2452
40880
FINC:
CHRGET
;GET THE NEXT CHARACTER OF THE NUMBER
2453
40900
JC
FINDIG
;WE HAVE A DIGIT
2454
40920
CPI
"."
;CHECK FOR A DECIMAL POINT
2455
40940
JZ
FINDP
;WE HAVE ONE, I GUESS
2456
40960
CPI
"E"
;CHECK FOR A SINGLE PRECISION EXPONENT
2457
40980
JZ
FINEX
;WE HAVE A SINGLE PRECISION NUMBER
2458
41000
CPI
"D"
;CHECK FOR A DOUBLE PRECISION EXPONENT
2459
41020
JNZ
FINE
IWE DON'T HAVE ONE, THE NUMBER IS FINISHED
2460
41040
OKA
A
;DOUBLE PRECISION NUMBER -- TURN OFF ZERO FLAG
2461
41060
FINEX:
CALL
INFRC
;FORCE THE FAC TO BE SNG OR DBL
2462
41080
PUSH
H
;SAVE THE TEXT POINTER
2463
41100
LXI
,FINEC
;GET ADDRESS TO JUMP TO, THIS IS TO SAVE BYTES
2464
41120
XTHL
;PUT IT ON STACK AND GET TEXT POINTER
2465
41140
;HERE
TO
CHECK
FOR THE SIGN OF THE EXPONENT
2466
41160
CHRGET
;GET THE FIRST CHARACTER OF THE EXPONENT
2467
41180
DCR
D
;SET SIGN OF EXPONENT TO MINUS
2468
41200
CPI
MINUTK
;CHECK IF THE EXPONENT IS NEGATIVE
2469
41220
RZ
IIT IS
2470
41240
CPI
;THIS IS IN CASE WE ARE CALLED BY VAL
MATHPK FOR BASIC MCS 8080 GATES/ALLEN/DAVIDOFF MACRO 47 (113) 06:09 27-AUG-75 PAGE 12-3
F4
MAC
23-AUG-64 06:08
FLOATING POINT INPUT ROUTINE
2471
41260
RZ
2472
41280
INR
D
;EXPONENT IS STILL POSITIVE, RESET FLAG
2473
41300
CPI
PLUSTK
;IGNORE A LEADING PLUS SIGN
2474
41320
RZ
2475
41340
CPI
"+"
2476
41360
RZ
2477
41380
DCX
H
;THE FIRST CHARACTER WAS NOT A SIGN, GO BACK
2478
41400
, AND CHECK FOR A DIGIT
2479
41420
POP
PSW
1POP FINEC OFF THE STACK, WE NO LONGER NEED IT
2480
41440
THERE TO GET THE NEXT DIGIT OF THE EXPONENT
2481
41460
FINEC:
CHRGET
;GET THE NEXT CHARATER
2482
41480
JC
FINEDG
;PACK THE NEXT DIGIT INTO THE EXPONENT
2483
41500
INR
D
;IT WAS NOT A DIGIT, PUT THE CORRECT SIGN ON
2484
41520
JNZ
FINE
; THE EXPONENT, IT IS POSITIVE
2485
41540
XRA
A
;THE EXPONENT IS NEGATIVE
2486
41560
SUB
E
;NEGATE IT
2487
41580
MOV
E,A
;SAVE IT AGAIN
2488
41600
;HERE TO FINISH UP THE NUMBER
2489
41620
FINE:
LDA
VALTYP
;FINISH UP -- WHAT KIND OF A NUMBER IS IT?
2490
41640
CPI
2
2491
41660
JNZ
FINEF
IIT IS A FLOATING POINT ONE
2492
41680
THERE TO FINISH UP AN INTEGER
2493
41700
POP
PSW
IIT IS AN INTEGER, GET ITS SIGN
2494
41720
XCHG
;SAVE THE TEXT POINTER IN (DE)
2495
41740
C2
INEG
;NEGATE IT IF NECESSARY
2496
41760
XCHG
;GET THE TEXT POINTER BACK IN (HL)
2497
41780
RET
;ALL DONE
2498
41800
;HERE TO FINISH UP A FLOATING POINT NUMBER
2499
41820
FINEF:
PUSH
H
;SAVE THE TEXT POINTER
2500
41840
MOV
;FIND OUT HOW MANY TIMES WE HAVE TO MULTIPLY
2501
41860
SUB
B
, OR DIVIDE BY TEN
2502
41880
THERE TO MULTIPLY OR DIVIDE BY TEN THE CORRECT NUMBER OF TIMES
2503
41900
FINEF2: CP
FINMUL
;MULTIPLY IF WE HAVE TO
2504
41920
CM
FINDIV
;DIVIDE IF WE HAVE TO
2505
41940
JNZ
FINEF2
MULTIPLY OR DIVIDE AGAIN IF WE ARE NOT DONE
2506
41960
;HERE TO PUT THE CORRECT SIGN ON THE NUMBER
2507
41980
POP
D
;GET THE TEXT POINTER
2508
42000
POP
PSW
IGET THE SIGN
2509
42020
CZ
NEG
INEGATE IF NECESSARY
2510
42040
XCHG
;GET THE TEXT POINTER IN (HL)
2511
42060
LDA
VALTYP
IWE WANT -32768 TO BE AN INT, BUT UNTIL NOW
2512
42080
CPI
4
; IT WOULD BE A SNG
2513
42100
RNZ
IT IS NOT SNG, so IT IS NOT -32768
2514
42120
PUSH
H
;WE HAVE A SNG, SAVE TEXT POINTER
2515
42140
LXI
,POPHRT
IGET ADDRESS THAT POP'S H OFF STACK BECAUSE
2516
42160
PUSH
H
, CONIS2 DOES FUNNY THINGS WITH THE STACK
2517
42180
CALL
CONIS2
;CHECK IF WE HAVE -32768
2518
42200
RET
;WE DON'T, POPHRT IS STILL ON THE STACK so
2519
42220
i WE CAN JUST RETURN
2520
42240
2521
42260
THERE TO CHECK IF WE HAVE SEEN 2 DECIMAL POINTS AND SET THE DECIMAL
2522
42280
, POINT FLAG
2523
42300
FINDP: INR
C
;SET THE FLAG
MATHPK FOR BASIC MCS 8080 GATES/ALLEN/DAVIDOFF MACRO 47(113) 06:09 27-AUG-75 PAGE 12-4
F4
MAC
23-AUG-64 06:08
FLOATING POINT INPUT ROUTINE
2524
42320
JNZ
FINEF
;WE HAD 2 DECIMAL POINTS, NOW WE ARE DONE
2525
42340
CALL
FINFRC
;THIS IS THE FIRST ONE, CONVERT FAC TO SNG
2526
42360
JMP
FINC
;CONTINUE LOOKING FOR DIGITS
2527
42380
2528
42400
;FORCE THE FAC TO BE SNG OR DBL
2529
42420
;IF THE ZERO FLAG IS ON, THEN FORCE THE FAC TO BE SNG
2530
42440
IIF THE ZERO FLAG IS OFF, FORCE THE FAC TO BE DBL
2531
42460
FINFRC: PUSH
H
;SAVE TEXT POINTER
2532
42480
PUSH
D
;SAVE EXPONENT INFORMATION
2533
42500
PUSH
B
;SAVE DECIMAL POINT INFORMATION
2534
42520
PUSH
PSW
;SAVE WHAT WE WANT THE FAC TO BE
2535
42540
CZ
FRCSNG
;CONVERT TO SNG IF WE HAVE TO
2536
42560
POP
PSW
;GET TYPE FLAG BACK
2537
42580
CNZ
FRCOBL
;CONVERT TO DBL IF WE HAVE TO
2538
42600
POP
B
;GET DECIMAL POINT INFORMATION BACK
2539
42620
POP
D
IGET EXPONENT INFORMATION BACK
2540
42640
POP
H
IGET TEXT POINTER BACK
2541
42660
RET>
BALL DONE
2542
2543
42700
;THIS SUBROUTINE MULIPLIES BY TEN ONCE.
2544
42720
IIT IS A SUBROUTINE BECAUSE IT SAVES BYTES WHEN WE CHECK IF A IS ZERO
2545
001672' 001000 000310
42740
FINMUL: RZ
;RETURN IF EXPONENT IS ZERO, ENTRY FROM FOUT
2546
001673' 001000 000365
42760
FINMLT: PUSH
PSW
;SAVE EXPONENT, ENTRY FROM FOUT
2547
42780
IFN
LENGTH-2,<
2548
001674 001000 000315
42800
CALL
MUL10>
;MULTIPLY BY TEN
2549
001675' 000000 001106'
2550
001676 000000 001666
2551
42820
IFE
LENGTH-2,
2552
42840
LDA
VALTYP
;SEE WHAT KIND OF NUMBER WE HAVE
2553
42860
CPI
4
2554
42880
PUSH
PSW
;SAVE THE TYPE
2555
42900
CZ
MUL10
I WE HAVE A SNG, MULTIPLY BY 10.0
2556
42920
POP
PSW
IGET THE TYPE BACK
2557
42940
CNZ
DMUL10>
;WE HAVE A DBL, MULTIPLY BY 1000
2558
001677' 001000 000361
42960
POP
PSW
IGET EXPONENT
2559
001700 001000 000075
42980
DCRART: DCR
A
;DECREASE IT
2560
001701 001000 000311
43000
RET
FALL DONE
2561
2562
43040
IFE
LENGTH-2,4
subRative
2563
43060
FINDIV: PUSH
PSW
;WE HAVE TO DIVIDE -- SAVE COUNT
Ten
2564
43080
LDA
VALTYP
ISEE WHAT KIND OF NUMBER WE HAVE
2565
43100
CPI
4
2566
43120
PUSH
PSW
;SAVE THE TYPE
2567
43140
CZ
DIV10
;WE HAVE A SNG NUMBER
2568
43160
POP
PSW
;GET THE TYPE BACK
2569
43180
CNZ
DDIV10
TWE HAVE A DBL NUMBER
2570
43200
POP
PSW
;GET COUNT BACK
2571
43220
INR
A
JUPDATE IT
2572
43240
RET>
2573
2574
43280
THERE TO PACK THE NEXT DIGIT OF THE NUMBER INTO THE FAC
2575
43300
IWE MULTIPLY THE FAC BY TEN AND ADD IN THE NEXT DIGIT
2576 001702'
43320
FINDIG:
MATHPK FOR BASIC MCS 8080 GATES/ALLEN/DAVIDOFF MACRO 47(113) 06:09 27-AUG-75 PAGE 12-5
F4
MAC
23-AUG-64 06:08
FLOATING POINT INPUT ROUTINE
2577
43340
IFN
LENGTH=2,
2578 001702 001000
000325
43360
PUSH
D
DIGITS: SAVE EXPONENT INFORMATION
2579 001703' 001000
000127
43380
MOV
D,A
;PROTECT DIGIT FROM BELOW
2580 001704 001000
000170
43400
MOV
A,B
;INCREMENT DECIMAL PLACE COUNT
2581 001705 001000
000211
43420
ADC
C
; IF PAST THE DECIMAL POINT
2582 001706 001000
000107
43440
MOV
B,A
2583 001707 001000
000305
43460
PUSH
B
;SAVE NECESSARY DATA
2584 001710' 001000
000345
43480
PUSH
H
2585 001711 001000
000325
43500
PUSH
D
;SAVE DIGIT
2586 001712' 001000
000315
43520
CALL
MUL10
MULTIPLY OLD NUMBER BY 10
2587 001713 000000
001106
2588 001714* 000000
001675
2589 001715' 001000
000361
43540
POP
PSW
;GET NEXT DIGIT
2590
001716 001000
060326
43560
SUI
"0"
;SUBTRACT OFF ASCII CODE
2591
001717 000000 000060
2592
43580
IFE
EXTENC,<
2593
43600
CALL
PUSHF
;PUT NUMBER ON STACK
2594
43620
CALL
FLOAT
;CONVERT TO FLOATING POINT NUMBER
2595
43640
POPR
2596
43660
CALL
FADD>
ADD IN NEXT DIGIT
2597
43680
IFN
EXTENC,
2598
001720* 001000
000315
43700
CALL
FINLOG>
2599
001721 000000
001731
2600 001722' 000000
001713*
2601 001723' 001000
000341
43720
POP
H
RECALL DATA
2602 001724 001000
000301
43740
POP
8
2603 001725' 001000
000321
43760
POP
D
2604
001726 001000
000303
43780
JMP
FINC>
;GET NEXT CHARACTER
2605
001727 000000
001555
2606
001730 000000
001721
2607
43800
IFE
LENGTH-2,
2608
43820
PUSH
D
:SAVE EXPONENT INFORMATION
2609
43840
MOV
A,B
;INCREMENT DECIMAL PLACE COUNT IF WE ARE
2610
43860
ADC
C
; PAST THE DECIMAL POINT
2611
43880
MOV
B,A
2612
43900
PUSH
B
;SAVE DECIMAL POINT INFORMATION
2613
43920
PUSH
H
;SAVE TEXT POINTER
2614
43940
MOV
A,M
IGET THE DIGIT
2615
43960
SUI
"0"
;CONVERT IT TO ASCII
2616
43980
PUSH
PSW
;SAVE THE DIGIT
2617
44000
LDA
VALTYP
ISEE WHAT KIND OF A NUMBER WE HAVE
2618
44020
CPI
4
2619
44040
JNC
FINDGV
IWE DO NOT HAVE AN INTEGER
2620
44060
THERE TO PACK THE NEXT DIGIT OF AN INTEGER
2621
44080
LALD
FACLO
,WE HAVE AN INTEGER, GET IT IN (HL)
2622
44100
LXI
D, 703277+SCODE
;SEE IF WE WILL OVERFLOW
2623
44120
COMPAR
/COMPAR RETURNS WITH CARRY ON IF
2624
44140
JNC
FINDG2
, (HL) .LT. (DE), so THE NUMBER IS TOO BIG
2625
44160
MOV
D,H
;COPY (HL) INTO (DE)
2626
44180
MOV
E,L
2627
44200
DAD
H
;MULTIPLY (HL) BY 2
2628
44220
DAD
H
;MULTIPLY (HL) BY 2, (HL) NOW IS 4*(DE)
2629
44240
DAD
D
;ADD IN OLD (HL) TO GET 5* (DE)
MATHPK FOR BASIC MCS 8080 GATES/ALLEN/DAVIDOFF MACRO 47(113) 06:09 27-AUG-75 PAGE 12-6
F4
MAC
23-AUG-64 06:08
FLOATING POINT INPUT ROUTINE
2630
44260
DAD
H
;MULTIPLY BY 2 TO GET TEN TIMES THE OLD (HL)
2631
44280
POP
PSW
;GET THE DIGIT
2632
44300
MOV
C,A
;SAVE IT so WE CAN USE DAD, B IS ALREADY ZERO
2633
44320
DAD
8
;ADD IN THE NEXT DIGIT
2634
44340
MOV
A,H
;CHECK FOR OVERFLOW
2635
44360
ORA
A
;OVERFLOW OCCURED IF THE MSB IS ON
2636
44380
JM
FINDGI
IWE HAVE OVERFLOW!!
2637
44400
SHLD
FACLO
;EVERYTHING IS FINE, STORE THE NEW NUMBER
2638
44420
FINDEE POP
H
BALL DONE, GET TEXT POINTER BACK
2639
44440
PDP
B
;GET DECIMAL POINT INFORMATION BACK
2640
44460
POP
D
;GET EXPONENT INFORMATION BACK
2641
44480
JMP
FINC
;GET THE NEXT CHARACTER
2642
44500
THERE TO HANDLE 32768, 32769
2643
44520
FINDGI: MOV
A,C
;GET THE DIGIT
2644
44540
PUSH
PSW
;PUT IT BACK ON THE STACK
2645
44560
THERE TO CONVERT THE INTEGER DIGITS TO SINGLE PRECISION DIGITS
2646
44580
FINDG2: CALL
CONSI
;CONVERT THE INTEGER TO SINGLE PRECISION
2647
44600
XRA
A
:DO NOT TAKE THE FOLLOWING JUMP
2648
44620
THERE
TO
DECIDE
IF WE HAVE A SINGLE OR DOUBLE PRECISION NUMBER
2649
44640
FINDGV:
JNZ
FINDGO
;FALL THROUGH IF VALTYP WAS 4 I.E. SNG PREC
2650
44660
MOVRI
24,164,044,000
IGET 1000000, DO WE HAVE 7 DIGITS ALREADY?
2651
44680
CALL
FCOMP
IIF so, FAC ,GE. 1000000
2652
44700
JP
FINDG3
;WE DO, CONVERT TO DOUBLE PRECISION
2653
44720
POP
PSW
1GET THE NEXT DIGIT
2654
44740
CALL
FINLOG
;PACK IT INTO THE FAC
2655
44760
JMP
FINDGE
;GET FLAGS OFF STACK AND WE ARE DONE
2656
44780
;HERE
TO
CONVERT
A
7 DIGIT SINGLE PRECISION NUMBER TO DOUBLE PRECISION
2657
44800
FINDG3:
CALL
CONDS
;CONVERT SINGLE TO DOUBLE PRECISION
2658
44820
;HERE
TO
PACK IN THE NEXT DIGIT OF A DOUBLE PRECISION NUMBER
2659
44840
FINDGO: CALL
DMUL10
MULTIPLY THE FAC BY 10
2660
44860
CALL
VMOVAF
;SAVE THE FAC IN ARG
2661
44880
POP
PSW
;GET THE NEXT DIGIT
2662
44900
CALL
FLOAT
;CONVERT THE DIGIT TO SINGLE PRECISION
2663
44920
CALL
CONDS
;NOW, CONVERT THE DIGIT TO DOUBLE PRECISION
2664
44940
CALL
DADO
;ADD IN THE DIGIT
2665
44960
JMP
FINDGE
;GET THE FLAGS OFF THE STACK AND WE ARE DONE
2666
2667
45000
IFN
EXTENC,
2668
45020
;SUBROUTINE FOR FIN, LOG
2669 001731 001000 000315
45040
FINLOG: CALL
PUSHF
;SAVE FAC ON STACK
2670 001732' 000000 001205
2671 001733 000000 001727
2672 001734 001000 000315
45060
CALL
FLOAT
;CONVERT A TO A FLOATING POINT NUMBER
2673 001735 000000 001150
2674 001736 000000 001732
2675
45080
IFN
LENGTH-2,<
2676 001737 001000 000303
45100
JMP
FADDT>
;ADD IT IN
2677 001740 000000 000023
2678 001741 000000 001735'
2679
45120
IFE
LENGTH-2,<
2680
45140
POPR
;GET PREVIOUS NUMBER OFF STACK
2681
45160
JMP
FAOD>>
;ADD IT IN
2682