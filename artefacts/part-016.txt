
BASIC MCS 8080 GATES/ALLEN/DAVIDOFF
MACRO 47(113) 03:12 10-SEP-75 PAGE 22-4
F3
MAC
6-SEP-64 03:11
DIMENSION & VARIABLE SEARCHING
5708 006703 001000 000345
17200
PUSH
H
;SAVE THIS #
5709 006704 001000 000011
17220
DAD
B
BADD ON THE AMOUNT OF SPACE
5710
17240
1EXTRA NOW BEING USED
5711 006705 001000 000301
17260
POP
B
;POP OFF HIGH ADDRESS TO MOVE
5712 006706 001000 000345
17280
PUSH
H
;SAVE NEW CANDIDATE FOR STREND
5713 006707 001000 000315
17300
CALL
BLTU
BLOCK TRANSFER AND MAKE SURE
5714 006710 000000 002005
5715 006711 000000 006701
5716
17320
I WE ARE NOT OVERFLOWING THE
5717
17340
;STACK SPACE
5718 006712' 001000 000341
17360
POP
H
; [H,L]=NEW STREND
5719 006713 001000 000042
17380
SHLD
STREND
;STORE SINCE WAS OK
5720 006714 000000 001625
5721
006715
000000
006710
5722
17400
;THERE WAS ROOM, AND BLOCK TRANSFER
5723
17420
IWAS DONE, so UPDATE POINTERS
5724
006716
001000
000140
17440
MOV
H,B
;GET BACK [H,L] POINTING AT THE END
5725 006717 001000 000151
17460
MOV
L,C
10F THE NEW VARIABLE
5726 006720 001000 000042
17480
SHLD
ARYTAB
;UPDATE THE ARRAY TABLE POINTER
5727 006721 000000 001623'
5728 006722' 000000
006714
5729 006723' 001000
000053
17500
ZERDER: DCX
H
(CH,L) IS RETURNED POINTING TO THE
5730 006724 001000
000066
17520
MVI
M,O
IEND OF THE VARIABLE so WE
5731 006725' 000000
000600
5732 006726 001000
000347
17540
COMPAR
;ZERO BACKWARDS TO ID, WHICH
5733 006727 001000
000302
17560
JNZ
ZEROER
;POINTS TO THE START OF THE VARIABLE
5734 006730 000000
006723
5735 006731 000000
006721
5736
17580
IFE
LENGTH-2,<
5737 006732 001000
000321
17600
POP
D
;(E)=VALTYP
5738 006733 001000
000163
17620
MOV
M,E
;STORE AS PART OF THE LOOKS
5739 006734 001000 000043
17640
INX
H>
5740 006735' 001000
000321
17660
POP
D
5741 006736 001000 060163
17680
MOV
M,E
;PUT DESCRIPTION
5742 006737 001000 000643
17700
INX
H
5743 006740 001000 000162
17720
MOV
M,D
10F THIS VARIABLE
5744
17740
;INTO MEMORY
5745
17760
IFE
LENGTH-2,
5746 006741 001000 000353
17780
XCHG
;POINTER AT VARIABLE INTO (D,E)
5747 006742 001000 000023
17800
FINPTR: INX
D>
;POINT AT THE VALUE
5748
17820
IFN
LENGTH-2,
5749
17840
INX
H
5750
17860
FINPTR: XCHG>
;VARIABLE POINTER INTO (D,E)
5751
006743 001000 000341
17880
POP
H
IRESTORE THE TEXT POINTER
5752
006744 001000 000311
17900
RET
5753
5754
17940
IFE
MULDIM,
5755
17960
ISARY:
PUSH
B
;REMEMBER WHAT VARIABLE LOOKS
5756
17980
ILIKE
5757
18000
IFN
STRING,
5758
18020
PUSH
H
;SAVE THE TXTPTR
5759
18040
LHLD
DIMFLG
(LL) DIMFLG [H]=VALTYP
5760
18060
XTHL>
;PUT VALTYP AND DIMFLG ON THE STACK
BASIC MCS 8080 GATES/ALLEN/DAVIDOFF
MACRO 47(113) 03:12 10-SEP-75 PAGE 22-5
F3
MAC
6-SEP-64 03:11
DIMENSION & VARIABLE SEARCHING
5761
18080
AND RESTORE THE TEXT POINTER
5762
18100
IFE
STRING,<
5763
18120
LDA
DIMFLG
;SINCE THIS CALL IS RECURSIVE
5764
18140
PUSH
PSW>
;DIMFLG MUST BE SAVED ON THE STACK
5765
18160
CALL
INTIOX
EVALUATE THE INDEX INTO [0,E]
5766
18180
SYNCHK
")"
;MAKE SURE HE CLOSED IT
5767
18200
IFN
STRING,
5768
18220
XTHL
(L) #DIMFLG [H]=VALTYP
5769
18240
TEXT POINTER ONTO THE STACK
5770
18260
SHLD
DIMFLG
;SAVE BOTH VALUES BACK
5771
18280
POP
H>
RESTORE THE TEXT POINTER
5772
18300
IFE
STRING,
5773
18320
POP
PSW
;GET DIMFLG OFF THE STACK
5774
18340
STA
DIMFLG>
IRESTORE IT
5775
18360
XTHL
[H,L] GET VARIABLE DESCRIPTOR
5776
18380
TEXT POINTER IS PUT ONTO
5777
18400
,THE STACK
5778
18420
XCHG
E)=DESCRIPTOR
5779
18440
[H,L]=INDEX
5780
18460
DAD
H
MULTIPLY BY 4 TO GET
5781
18480
DAD
H
IBYTE OFFSET
5782
18500
PUSH
H
1SAVE THE INDEX
5783
18520
LALD
ARYTAB
PLACE TO START SEARCH
5784
18540
XWD
01000,1
1"LXI 8, " OVER THE NEXT 2
5785
18560
LOPFO2: POP
8
OF LAST VARIABLE
5786
18580
DAD
8
;SKIP OVER LAST VARIABLE BY ADDING ITS
5787
18600
ILENGTH ONTO (H,L)
5788
18620
XCHG
[D,E] GET CURRENT SEARCH POINT
5789
18640
PUSH
H
;SAVE THE VARIABLE LOOK
5790
18660
LHLD
STREND
;GET PLACE TO STOP
5791
18680
COMPAR
;SEE IF WE ARE THERE
5792
18700
XCHG
[[H,L] GETS SEARCH POINT
5793
18720
POP
D
1POP OFF VARIABLE LOOKS
5794
18740
JZ
NOTFDO
;COULDN'T FIND IT
5795
18760
PUSHM
;PUT ON LOOKS OF VARIABLE
5796
18780
I WE ARE EXAMINING
5797
18800
XTHL
;PUT [H,L] ON THE STACK AND
5798
18820
BLOOKS OF VARIABLE WE ARE
5799
18840
;EXAMINING INTO [H,L]
5800
18860
COMPAR
;IS THIS THE VARIABLE
5801
18880
POP
H
;POP OFF SEARCH POINTER
5802
18900
PUSHM
;PUSH LENGTH OF VARIABLE
5803
18920
;BEING EXAMINED ONTO THE STACK
5804
18940
JNZ
LOPFD2
IIF NO MATCH,GO LOOK SOMEMORE
5805
18960
LDA
DIMFLG
;IS THIS VARIABLE TRYING TO BE
5806
18980
;DIMENSIONED AND ALREADY
5807
19000
ORA
A
:EXISTS?
5808
19020
MVI
E,RROO
;THATS ERROR ERRDO
5809
19040
JNZ
ERROR
5810
19060
MAKDFN: POP
D
;POP OFF LENGTH OF THIS VARIABLE
5811
19080
DCX
D
IDECREMENT LENGTH so WE CAN
5812
19100
;JUST LOOK AT *CARRY' AFTER
5813
19120
;CALLING COMPAR
BASIC MCS 8080 GATES/ALLEN/DAVIDOFF
MACRO 47 (113) 03:12 10-SEP-75 PAGE 22-6
F3
MAC
6-SEP-64 03:11
DIMENSION & VARIABLE SEARCHING
5814
19140
XTHL
;TRADE POINTER AT VARIABLE WITH
5815
19160
;INDEX INTO THE VARIABLE
5816
19180
COMPAR
;SEE IF INDEX IS TOO BIG
5817
19200
MVI
E,ERRBS
;THATS ERROR ERRBS
5818
19220
JNC
ERROR
;SINCE LENGTH REALLY HAS AN
5819
19240
;EXTRA ONE ADDED TO IT
5820
19260
IIF INDEX-LENGTH DOESN'T CARRY
5821
19280
THE IS IN TROUBLE
5822
19300
POP
D
;POP OFF POINTER AT VARIABLE
5823
19320
DAD
D
BADO IT TO THE INDEX
5824
19340
POP
D
1POP OFF TEXT POINTER
5825
19360
XCHG
;TEXT POINTER INTO [H,L]
5826
19380
RET
;VARIABLE POINTER INTO (D,E)
5827
19400
5828
19420
NOTFOD: MOV
M,E
IPUT LOOKS DOWN
5829
19440
INX
H
5830
19460
MOV
M.D
5831
19480
INX
H
5832
19500
LXI
,SCODE+44
IDEFAULT SIZE IS 10
5833
19520
LDA
DIMFLG
IARE WE DIMENSIONING
5834
19540
ORA
A
5835
19560
JZ
NOTDIM
5836
19580
POP
D
;POP OFF INDEX
5837
19600
PUSH
D
:PUT INDEX BACK ON
5838
19620
INX
0
5839
19640
INX
D
5840
19660
INX
D
5841
19680
INX
D
5842
19700
NOTDIM: PUSH
D
5843
19720
MOV
M,E
;PUT LENGTH DOWN
5844
19740
INX
H
5845
19760
MOV
M,D
5846
19780
INX
H
5847
19800
PUSH
H
5848
19820
DAD
D
5849
19840
CALL
REASON
;MAKE SURE WE'RE NOT RUNNING
5850
19860
;INTO THE STACK
5851
19880
SHLD
STREND
ISETUP NEW STORAGE END
5852
19900
POP
D
5853
19920
ZERIT2: DCX
H
5854
19940
MVI
M,0
5855
19960
COMPAR
5856
19980
JNZ
ZERIT2
5857
20000
JMP
MAKOFN>
FINISH UP
5858
5859
20040
PAGE
BASIC MCS 8080 GATES/ALLEN/DAVIDOFE
MACRO 47(113) 03:12 10-SEP-75 PAGE 23
F3
MAC
6-SEP-64 03:11
MULTIPLE DIMENSION CODE
5860
20060
SUBTTL MULTIPLE DIMENSION CODE
5861
5862
20100
IFN
MULDIM,<
5863
20120
5864
20140
FORMAT OF ARRAYS IN CORE
5865
20160
5866
20180
DESCRIPTOR
5867
20200
LOW BYTE = SECOND CHARCTER (200 BIT IS STRING FLAG)
5868
20220
HIGH BYTE = FIRST CHARACTER
5869
20240
LENGTH OF ARRAY IN CORE IN BYTES (DOES NOT INCLUDE DESCRIPTOR)
5870
20260
NUMBER OF DIMENSIONS 1 BYTE
5871
20280
FOR EACH DIMENSION STARTING WITH THE FIRST A LIST
5872
20300
(2 BYTES EACH) OF THE MAX INDICE+1
5873
20320
;
THE VALUES
5874
20340
5875
006745 001000
000345
20360
ISARY:
PUSH
H
;SAVE DIMFLG AND VALTYP FOR RECURSION
5876
006746 001090
000052
20380
LHLO
DIMFLG
5877 006747° 000000
001542
5878 006750° 000000
006730
5879 006751 001000
000343
20400
XTHL
STEXT POINTER BACK INTO (H,L)
5880 006752' 001000
000026
20420
MVI
0,0
1SET # DIMENSIONS =0
5881 006753 000000
000000
5882 006754 001000
000325
20440
INDLOP: PUSH
D
;SAVE NUMBER OF DIMENSIONS
5883 006755' 001000
000305
20460
PUSH
B
;SAVE LOOKS
5884 006756 001000
000315
20480
CALL
INTIOX
EVALUATE INDICE INTO (D,E)
5885 006757 000000
003622'
5886 006760 000000
006747
5887 006761 001000
000301
20500
POP
8
;POP OFF THE LOOKS
5888 006762 001000
000361
20520
POP
PSW
(A) # NUMBER OF DIMENSIONS so FAR
5889
006763' 001000
000353
20540
XCHG
POINTER
5890
20560
J(H,L)=INDICE
5891
006764' 001000
000343
20580
XTHL
;PUT THE INDICE ON THE STACK
5892
20600
, [H,L] #VALTYP & DIMFLG
5893
006765 001000
000345
20620
PUSH
H
;RESAVE VALTYP AND DIMFLG
5894 006766 001000
000353
20640
XCHG
(H,L) #TEXT POINTER
5895 006767 001000
000074
20660
INR
A
;INCREMENT # OF DIMENSIONS
5896 006770 001000
000127
20680
MOV
D,A
(D) #NUMBER OF DIMENSIONS
5897 006771 001000
000176
20700
MOV
A,M
;GET TERMINATING CHARACTER
5898 006772' 001000
000376
20720
CPI
44
IA COMMA SO MORE INDICES FOLLOW?
5899 006773 000000
000054
5900
006774 001000
000312
20740
JZ
INDLOP
IIF so, READ MORE
5901 006775 000000
006754
5902 006776* 000000
006757
5903 006777 001000
000317
20760
SYNCHK
")"
SMAKE SURE IT ENDED PROPERLY
5904 007000 000000
000051
5905 007001 001000
000042
20780
SHLO
TEMP2
;SAVE THE TEXT POINTER
5906 007002' 000000
001605
5907 007003 000000
006775
5908 007004 001000
000341
20800
POP
H
; (H,L) VALTYP & DIMFLG
5909 007005 001000
000042
20820
SHLD
DIMFLG
;SAVE VALTYP AND DIMFLG
5910 007006 000000
001542'
5911 007007 000000
007002
5912
007010 001000
000325
20840
PUSH
D
;SAVE NUMBER OF DIMENSIONS
BASIC
MCS 8080 GATES/ALLEN/DAVIDOFF
MACRO /(113) 03:12 10-SEP-75 PAGE 23-1
F3
MAC
6-SEP-64 03:11
MULTIPLE DIMENSION CODE
5913
20860
5914
20880
AT THIS POINT [B,C]=LOOKS. THE TEXT POINTER IS IN TEMP2.
5915
20900
THE INDICES ARE ALL ON THE STACK, FOLLOWED BY THE NUMBER OF DIMENSIONS.
5916
20920
5917 007011 001000 000052
20940
LHLD
ARYTAB
; CH,LI=PLACE TO START THE SEARCH
5918 007012 000000 001623
5919 007013 000000 007006
5920 007014 001000 000076
20960
XWD
01000, -076
1"MVI A," AROUND THE NEXT BYTE
5921 007015 001000 000031
20980
LOPFDA: DAD
D
ISKIP OVER THIS ARRAY SINCE IT'S
5922
21000
NOT THE ONE
5923 007016 001000 000353
21020
XCHG
(D,E) =CURRENT SEARCH POINT
5924 007017 001000 000052
21040
LHLD
STREND
;GET THE PLACE TO STOP INTO [H,L]
5925 007020 000000
001625
5926 007021 000000 007012'
5927 007022' 001000 000353
21050
XCHG
CH,LI#SEARCH POINT
5928 007023 001000 000347
21060
COMPAR
;STOPPING TIME?
5929
21080
IFE
LENGTH-2,5
5930 007024 001000
000072
21100
LDA
VALTYP>
5931 007025 000000
001543
5932 007026 000000
007020
5933 007027 001000
000312
21120
JZ
NOTFOO
IYES,COULDN'T FIND THIS ARRAY
5934 007030 000000
007104
5935 007031 000000
007025
5936
21140
IFE
LENGTH-2
5937 007032' 001000
000276
21160
CMP
M
ISEE IF THE VALTYPS ARE THE SAME
5938 007033 001000
000043
21180
INX
H
5939 007034 001000
000302
21200
JNZ
NMARY2>
5940 007035 000000
007050
5941 007036 000000
007030
5942 007037 001000
000176
21240
MOV
A,M
;GET FIRST CHARACTER
5943 007040 001000
000271
21260
CMP
C
;SEE IF IT MATCHES
5944 007041 001000
000043
21280
INX
H
5945 007042 001000
000302
21300
JNZ
NMARY1
NOT THIS ONE
5946 007043 000000
007051
5947 007044* 000000
007035
5948 007045 001000
000176
21320
MOV
A,M
;GET SECOND CHARACTER
5949
007046 001000
000270
21340
CMP
B
;ANOTHER MATCH?
5950
21360
IFE
LENGTH-2,
5951
007047 001000
000076
21380
XWD
01000.006
;SKIP THIS INCREMENT WITH "MVI A,
5952 007050 001000
000043
21400
NMARY2: INX
H>
5953 007051 001000
000043
21420
NMARY1: INX
H
1POINT TO SIZE ENTRY
5954 007052 001000
000136
21440
MOV
E,M
9,EJ=LENGTH
5955 007053 001000
000043
21460
INX
H
10F THE ARRAY BEING LOOKED AT
5956 007054 001000
000126
21480
MOV
D,M
5957 007055' 001000
000043
21500
INX
H
5958 007056 001000 000302
21520
JNZ
LOPFDA
IIF NO MATCH, SKIP THIS ONE
5959 007057 000000 067015
5960 007060 000000 007043
5961
21540
;AND TRY AGAIN
5962 007061 001000 000072
21560
LDA
DIMFLG
ISEE IF CALLED BY "DIM"
5963 007062* 000000 061542
5964 007063 000000 007057
5965 007064 001000 000267
21580
ORA
A
IZERO MEANS NO
BASIC MCS 8080 GATES/ALLEN/DAVIDOFF
MACRO 47(113) 03:12 10-SEP-75 PAGE 23-2
F3
MAC
6-SEP-64 03:11
MULTIPLE DIMENSION CODE
5966 007065 001000 000036
21600
MVI
E,ERRDO
;"DOUBLY DIMENSIONED" ERROR
5967 007066 000000 000012
5968 007067 001000 000302
21620
JNZ
ERROR
5969 007070 000000 002102'
5970 007071 000000 007062'
5971
21640
5972
21660
TEMP2=THE TEXT POINTER
5973
21680
WE HAVE LOCATED THE VARIABLE WE WERE LOOKING FOR
5974
21700
AT THIS POINT [H,L] POINTS BEYOND THE SIZE TO THE NUMBER OF DIMENSIONS
5975
21720
THE INDICES ARE ON THE STACK FOLLOWED BY THE NUMBER OF DIMENSIONS
5976
21740
5977
007072 001000 000361
21760
POP
PSW
i (A) =NUMBER OF DIMENSIONS
5978
007073 001000 000276
21780
CMP
M
;MAKE SURE THE NUMBER GIVEN NOW AND
5979
21800
;AND WHEN THE ARRAY WAS SET UP ARE THE
5980
21820
;SAME
5981 007074 001000 000312
21840
JZ
GETDER
1JUMP OFF AND READ
5982 007075 000000 007245
5983 007076 000000 007070
5984
21860
,THE INDICES
5985 007077° 001000 000036
21880
BSERR: MVI
E,ERRBS
;"SUBSCRIPT OUT OF RANGE"
5986 007100 000000 000011
5987 007101 001000 000303
21900
JMP
ERROR
5988 007102' 000000 002102'
5989 007103 000000 007075'
5990
21920
5991
21940
HERE WHEN VARIABLE IS NOT FOUND IN THE ARRAY TABLE
5992
21960
5993
21980
BUILDING AN ENTRY:
5994
22000
5995
22020
PUT DOWN THE DESCRIPTOR
5996
22040
SETUP NUMER OF DIMENSIONS
5997
22060
MAKE SURE THERE IS ROOM FOR THE NEW ENTRY
5998
22080
REMEMBER VARPTR
5999
22100
TALLY=4 (VALTYP FOR THE EXTENDED)
6000
22120
SKIP 2 LOCS FOR LATER FILL IN -- THE SIZE
6001
22140
LOOP: GET AN INDICE
6002
22160
PUT NUMBER +1 DOWN AT VARPTR AND INCREMENT VARPTR
6003
22180
TALLY= TALLY * NUMBER+1
6004
22200
DECREMENT NUMBER-DIMS
6005
22220
JNZ
LOOP
6006
22240
CALL REASON WITH [H,L] REFLECTING LAST LOC OF VARIABLE
6007
22260
UPDATE STREND
6008
22280
ZERO BACKWARDS
6009
22300
MAKE TALLY INCLUDE MAXDIMS
6010
22320
PUT DOWN TALLY
6011
22340
IF CALLED BY DIMENSION, RETURN
6012
22360
OTHERWISE INDEX INTO THE VARIABLE AS IF IT
6013
22380
WERE FOUND ON THE INITIAL SEARCH
6014
22400
6015 007104
22420
NOTFDD:
6016
22440
IFE
LENGTH-2,
6017
007104
001000
000167
22460
MOV
M,A
;PUT DOWN THE VARIABLE TYPE
6018 007105 001000 000043
22480
INX
H
BASIC MCS 8080 GATES/ALLEN/DAVIDOFF
MACRO 47(113) 03:12 10-SEP-75 PAGE 23-3
F3
MAC
6-SEP-64 03:11
MULTIPLE DIMENSION CODE
6019 007106 001000 000137
22500
MOV
E,A
6020 007107 001000 000026
22520
MVI
0,07
(D,E)=SIZE OF ONE VALUE (VALTYP)
6021 007110 000000 000000
6022
22540
IFN
LENGTH-2,
6023
22560
LXI
D,SCODE+4>
;INITIALIZE TALLY TO FOUR
6024 007111 001000 000161
22580
MOV
M,C
;PUT DOWN THE DESCRIPTOR
6025 007112' 001000 000043
22600
INX
H
6026 007113 001000 000160
22620
MOV
M,B
6027 007114 001000 000043
22640
INX
H
6028 007115 001000 000361
22660
POP
PSW
, (A) #NUMBER OF DIMENSIONS
6029 007116' 001000 000062
22680
STA
TEMP6
;SETUP GETSTK CALL
6030 007117 000000
067124
6031
007120
000000
007102'
6032
007121'
001000
000315
22700
CALL
GETSTK
;GET SPACE FOR DIMENSION ENTRIES
6033
007122'
000000
002024
6034
007123'
000000
007117
6035
007124
001000
000351
22720
TEMP6:
PCHL
:PLACE TO STORE NUMBER OF DIMENSIONS
6036
22740
;FOR GETSTK AND LATER RECALL
6037
22760
ILLIMPURE11 PCHL TO CONFUSE DISASSEMBLY
6038
007125
001000
000042
22780
SHLD
TEMP3
1SAVE THE LOCATION TO PUT THE SIZE
6039
007126
000000
001575'
6040
007127'
000000
007122'
6041
22800
;IN
6042
007130
001000
000043
22820
INX
H
ISKIP OVER THE SIZE LOCATIONS
6043
007131'
001000
000043
22840
INX
H
6044
007132'
001000
000101
22860
MOV
B,C
; (B) #NUMBER OF DIMENSIONS
6045
22880
;THIS DEPENDS ON THE FACT THAT GETSTK
6046
22900
RETURNS ITS ARGUMENT IN (C)
6047
007133
001000
000160
22920
MOV
M,8
;STORE THE NUMBER OF DIMENSIONS
6048
007134
001000
000043
22940
INX
H
6049 007135 001000
000072
22960
LOPPTA: LDA
OIMFLG
;CALLED BY DIMENSION?
6050 007136 000000
001542
6051 007137° 000000
007126
6052 007140 001000
000267
22980
ORA
A
6053 007141 001000
000170
23000
MOV
A,B
(A) ] NUMBER OF DIMENSIONS
6054 007142' 001000
000001
23020
LXI
8,SCODE+11
;ASSUME ITS NOT "DIM"
6055 007143 000000
000013
6056 007144 000000
007136'
6057 007145 001000
000312
23040
JZ
NOTDIM
1DEFAULT DIMENSIONS TO TEN
6058 007146 000000
007152
6059 007147 000000
007143
6060 007150 001000
000301
23060
POP
8
;POP OFF AN INDICE INTO [B,C]
6061 007151 001000
000003
23080
INX
8
1ADD ONE TO IT FOR THE ZERO ENTRY
6062 007152' 001000
000161
23100
NOTDIM: MOV
M,C
;PUT THE MAXIMUM DOWN
6063 007153 001000
000043
23120
INX
H
6064 007154 001000
000160
23140
MOV
M,B
6065 007155' 001000
000043
23160
INX
H
6066 007156' 001000
000365
23180
PUSH
PSW
;SAVE THE NUMBER OF DIMENSIONS
6067 007157 001000
000345
23200
PUSH
H
;SAVE THE POINTER INTO THE NEW ENTRY
6068 007160° 001000
060315
23220
CALL
UMULT
;MULTIPLY (B,C)=NEWMAX BY CURTOL: [D,E]
6069 007161 000000
000000*
6070 007162' 000000 007146
6071 007163 001000 000353
23240
XCHG
, (D,E)=NEW CURTOL
BASIC MCS 8080 GATES/ALLEN/DAVIDOFF
MACRO 47(113) 03:12 10-SEP-75 PAGE 23-4
F3
MAC
6-SEP-64 03:11
MULTIPLE DIMENSION CODE
6072 00/164 001000 000341
23260
POP
H
;GET THE POINTER INTO THE ENTRY BACK
6073 007165 001000 000301
23280
POP
8
;GET THE NUMBER OF DIMENSIONS BACK
6074 007166 001000 000005
23300
DCR
8
;DECREMENT THE NUMBER OF DIMENSIONS LEFT
6075 007167 001000 000302
23320
JNZ
LOPPTA
;HANDLE THE OTHER INDICES
6076
007170
000000
007135'
6077
007171
000000
007161
6078
007172
001000
000102
23340
MOV
B,D
, (8,C) #SIZE
6079 007173 001000
000113
23360
MOV
C,E
6080
007174
001000
000353
23380
XCHG
, (D,E)=START OF VALUES
6081
007175'
001000
000031
23400
DAD
D
[H,L] =END OF VALUES
6082 007176 001000
000332
23420
JC
8SERR
;OUT OF MEMORY POINTER BEING GENERATED?
6083 007177° 000000
007077°
6084 007206 000000
007170°
6085 007201 001000
000315
23440
CALL
REASON
ISEE IF THERE IS ROOM FOR THE VALUES
6086 007202 000000
002045
6087 007203 000000
007177°
6088 007204 001000
080042
23460
SHLD
STREND
JUPDATE THE END OF STORAGE
6089 007205' 000600
001625'
6090 007206 000000
007202
6091 007207 001000
000053
23480
ZERITA: DCX
H
IZERO THE NEW ARRAY
6092 007210 001000
000066
23500
MVI
M,0
6093 007211 000000
000000
6094 007212' 001000
000347
23520
COMPAR
;BACK AT THE BEGINNING?
6095 007213 001000
000302
23540
JNZ
ZERITA
NO,ZERO MORE
6096 007214 000000
007207
6097 007215 000000
007205
6098 007216 001000
000003
23560
INX
8
;ADD ONE TO THE SIZE TO INCLUDE
6099
23580
;THE BYTE FOR THE NUMBER OF DIMENSIONS
6100 007217 001000
000147
23600
MOV
H,A
, (H) =ZERO
6101 007220 001000
000072
23620
LDA
DIMFLG
6102
007221' 000000
001542
6103 007222' 000000
007214*
6104 007223 001000
000267
23640
ORA
A
;ARE WE DIMENSIONING ?
6105 007224 001000
900072
23660
LDA
TEMP6
;GET THE NUMBER OF DIMENSIONS
6106 007225' 000000
007124
6107 007226' 000000
007221'
6108 007227 001000
000157
23680
MOV
L.A
, (L) =NUMBER OF DIMENSIONS
6109
007230
001000
000051
23700
DAD
H
=NUMBER OF DIMENSIONS TIMES TWO
6110
007231
001000
000011
23720
DAD
B
IADD ON THE SIZE
6111
23740
;TO GET THE TOTAL NUMBER OF BYTES USED
6112 007232' 001000
000353
23760
XCHG
=TOTAL SIZE
6113
007233'
001000
000052
23780
LHLD
TEMP3
PLACE TO STORE SIZE
6114
007234
000000
001575'
6115
007235
000000
007225'
6116 007236 001000 000163
23800
MOV
M,E
:PUT DOWN THE SIZE
6117 007237 001000
000043
23820
INX
H
6118
007240 001000
000162
23840
MOV
M,O
6119 007241 001000 000043
23860
INX
H
6120 007242 001000 000302
23880
JNZ
FINNOW
6121 007243 000000 007331
6122
007244 000000 007234°
6123
23900
6124
23920
AT THIS POINT [H,L] POINTS BEYOND THE SIZE TO THE NUMBER OF DIMENSIONS